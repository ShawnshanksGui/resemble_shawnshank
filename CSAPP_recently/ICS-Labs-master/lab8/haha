
./driver:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 18                	add    %bl,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 ff                	add    %bh,%bh
 8048199:	bd b9 75 cf e7       	mov    $0xe7cf75b9,%ebp
 804819e:	58                   	pop    %eax
 804819f:	87 ba ba f6 ee b9    	xchg   %edi,-0x46110946(%edx)
 80481a5:	c6                   	(bad)  
 80481a6:	37                   	aaa    
 80481a7:	20                   	.byte 0x20
 80481a8:	84 61 a5             	test   %ah,-0x5b(%ecx)
 80481ab:	2d                   	.byte 0x2d

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	03 00                	add    (%eax),%eax
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	1b 00                	sbb    (%eax),%eax
 80481b2:	00 00                	add    %al,(%eax)
 80481b4:	01 00                	add    %eax,(%eax)
 80481b6:	00 00                	add    %al,(%eax)
 80481b8:	05 00 00 00 00       	add    $0x0,%eax
 80481bd:	20 26                	and    %ah,(%esi)
 80481bf:	22 00                	and    (%eax),%al
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 1b                	add    %bl,(%ebx)
 80481c5:	00 00                	add    %al,(%eax)
 80481c7:	00 1d 00 00 00 38    	add    %bl,0x38000000
 80481cd:	f2 8b 1c ad 4b e3 c0 	repnz mov -0x4c3f1cb5(,%ebp,4),%ebx
 80481d4:	b3 
 80481d5:	a2                   	.byte 0xa2
 80481d6:	f7 12                	notl   (%edx)

Disassembly of section .dynsym:

080481d8 <.dynsym>:
	...
 80481e8:	ef                   	out    %eax,(%dx)
	...
 80481f1:	00 00                	add    %al,(%eax)
 80481f3:	00 12                	add    %dl,(%edx)
 80481f5:	00 00                	add    %al,(%eax)
 80481f7:	00 e9                	add    %ch,%cl
	...
 8048201:	00 00                	add    %al,(%eax)
 8048203:	00 12                	add    %dl,(%edx)
 8048205:	00 00                	add    %al,(%eax)
 8048207:	00 08                	add    %cl,(%eax)
 8048209:	01 00                	add    %eax,(%eax)
	...
 8048213:	00 12                	add    %dl,(%edx)
 8048215:	00 00                	add    %al,(%eax)
 8048217:	00 97 00 00 00 00    	add    %dl,0x0(%edi)
 804821d:	00 00                	add    %al,(%eax)
 804821f:	00 00                	add    %al,(%eax)
 8048221:	00 00                	add    %al,(%eax)
 8048223:	00 12                	add    %dl,(%edx)
 8048225:	00 00                	add    %al,(%eax)
 8048227:	00 b9 00 00 00 00    	add    %bh,0x0(%ecx)
 804822d:	00 00                	add    %al,(%eax)
 804822f:	00 00                	add    %al,(%eax)
 8048231:	00 00                	add    %al,(%eax)
 8048233:	00 12                	add    %dl,(%edx)
 8048235:	00 00                	add    %al,(%eax)
 8048237:	00 e3                	add    %ah,%bl
	...
 8048241:	00 00                	add    %al,(%eax)
 8048243:	00 12                	add    %dl,(%edx)
 8048245:	00 00                	add    %al,(%eax)
 8048247:	00 2e                	add    %ch,(%esi)
	...
 8048251:	00 00                	add    %al,(%eax)
 8048253:	00 12                	add    %dl,(%edx)
 8048255:	00 00                	add    %al,(%eax)
 8048257:	00 77 00             	add    %dh,0x0(%edi)
	...
 8048262:	00 00                	add    %al,(%eax)
 8048264:	12 00                	adc    (%eax),%al
 8048266:	00 00                	add    %al,(%eax)
 8048268:	d5 00                	aad    $0x0
	...
 8048272:	00 00                	add    %al,(%eax)
 8048274:	12 00                	adc    (%eax),%al
 8048276:	00 00                	add    %al,(%eax)
 8048278:	c0 00 00             	rolb   $0x0,(%eax)
	...
 8048283:	00 12                	add    %dl,(%edx)
 8048285:	00 00                	add    %al,(%eax)
 8048287:	00 72 00             	add    %dh,0x0(%edx)
	...
 8048292:	00 00                	add    %al,(%eax)
 8048294:	12 00                	adc    (%eax),%al
 8048296:	00 00                	add    %al,(%eax)
 8048298:	0b 00                	or     (%eax),%eax
	...
 80482a2:	00 00                	add    %al,(%eax)
 80482a4:	20 00                	and    %al,(%eax)
 80482a6:	00 00                	add    %al,(%eax)
 80482a8:	58                   	pop    %eax
	...
 80482b1:	00 00                	add    %al,(%eax)
 80482b3:	00 12                	add    %dl,(%edx)
 80482b5:	00 00                	add    %al,(%eax)
 80482b7:	00 5d 00             	add    %bl,0x0(%ebp)
	...
 80482c2:	00 00                	add    %al,(%eax)
 80482c4:	12 00                	adc    (%eax),%al
 80482c6:	00 00                	add    %al,(%eax)
 80482c8:	dc 00                	faddl  (%eax)
	...
 80482d2:	00 00                	add    %al,(%eax)
 80482d4:	12 00                	adc    (%eax),%al
 80482d6:	00 00                	add    %al,(%eax)
 80482d8:	f6 00 00             	testb  $0x0,(%eax)
	...
 80482e3:	00 12                	add    %dl,(%edx)
 80482e5:	00 00                	add    %al,(%eax)
 80482e7:	00 a4 00 00 00 00 00 	add    %ah,0x0(%eax,%eax,1)
 80482ee:	00 00                	add    %al,(%eax)
 80482f0:	00 00                	add    %al,(%eax)
 80482f2:	00 00                	add    %al,(%eax)
 80482f4:	12 00                	adc    (%eax),%al
 80482f6:	00 00                	add    %al,(%eax)
 80482f8:	63 00                	arpl   %ax,(%eax)
	...
 8048302:	00 00                	add    %al,(%eax)
 8048304:	12 00                	adc    (%eax),%al
 8048306:	00 00                	add    %al,(%eax)
 8048308:	69 00 00 00 00 00    	imul   $0x0,(%eax),%eax
 804830e:	00 00                	add    %al,(%eax)
 8048310:	00 00                	add    %al,(%eax)
 8048312:	00 00                	add    %al,(%eax)
 8048314:	12 00                	adc    (%eax),%al
 8048316:	00 00                	add    %al,(%eax)
 8048318:	88 00                	mov    %al,(%eax)
	...
 8048322:	00 00                	add    %al,(%eax)
 8048324:	12 00                	adc    (%eax),%al
 8048326:	00 00                	add    %al,(%eax)
 8048328:	5e                   	pop    %esi
	...
 8048331:	00 00                	add    %al,(%eax)
 8048333:	00 12                	add    %dl,(%edx)
 8048335:	00 00                	add    %al,(%eax)
 8048337:	00 4b 00             	add    %cl,0x0(%ebx)
	...
 8048342:	00 00                	add    %al,(%eax)
 8048344:	12 00                	adc    (%eax),%al
 8048346:	00 00                	add    %al,(%eax)
 8048348:	1a 00                	sbb    (%eax),%al
	...
 8048352:	00 00                	add    %al,(%eax)
 8048354:	20 00                	and    %al,(%eax)
 8048356:	00 00                	add    %al,(%eax)
 8048358:	ab                   	stos   %eax,%es:(%edi)
	...
 8048361:	00 00                	add    %al,(%eax)
 8048363:	00 12                	add    %dl,(%edx)
 8048365:	00 00                	add    %al,(%eax)
 8048367:	00 90 00 00 00 00    	add    %dl,0x0(%eax)
 804836d:	00 00                	add    %al,(%eax)
 804836f:	00 00                	add    %al,(%eax)
 8048371:	00 00                	add    %al,(%eax)
 8048373:	00 12                	add    %dl,(%edx)
 8048375:	00 00                	add    %al,(%eax)
 8048377:	00 9d 00 00 00 00    	add    %bl,0x0(%ebp)
 804837d:	00 00                	add    %al,(%eax)
 804837f:	00 00                	add    %al,(%eax)
 8048381:	00 00                	add    %al,(%eax)
 8048383:	00 12                	add    %dl,(%edx)
 8048385:	00 00                	add    %al,(%eax)
 8048387:	00 ce                	add    %cl,%dh
 8048389:	00 00                	add    %al,(%eax)
 804838b:	00 80 d1 04 08 04    	add    %al,0x40804d1(%eax)
 8048391:	00 00                	add    %al,(%eax)
 8048393:	00 11                	add    %dl,(%ecx)
 8048395:	00 19                	add    %bl,(%ecx)
 8048397:	00 3c 00             	add    %bh,(%eax,%eax,1)
 804839a:	00 00                	add    %al,(%eax)
 804839c:	c4 aa 04 08 04 00    	les    0x40804(%edx),%ebp
 80483a2:	00 00                	add    %al,(%eax)
 80483a4:	11 00                	adc    %eax,(%eax)
 80483a6:	0f 00 c7             	sldt   %edi
 80483a9:	00 00                	add    %al,(%eax)
 80483ab:	00 84 d1 04 08 04 00 	add    %al,0x40804(%ecx,%edx,8)
 80483b2:	00 00                	add    %al,(%eax)
 80483b4:	11 00                	adc    %eax,(%eax)
 80483b6:	19 00                	sbb    %eax,(%eax)

Disassembly of section .dynstr:

080483b8 <.dynstr>:
 80483b8:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 80483bc:	6d                   	insl   (%dx),%es:(%edi)
 80483bd:	2e 73 6f             	jae,pn 804842f <_init-0x24d>
 80483c0:	2e 36 00 5f 5f       	cs add %bl,%cs:%ss:0x5f(%edi)
 80483c5:	67 6d                	insl   (%dx),%es:(%di)
 80483c7:	6f                   	outsl  %ds:(%esi),(%dx)
 80483c8:	6e                   	outsb  %ds:(%esi),(%dx)
 80483c9:	5f                   	pop    %edi
 80483ca:	73 74                	jae    8048440 <_init-0x23c>
 80483cc:	61                   	popa   
 80483cd:	72 74                	jb     8048443 <_init-0x239>
 80483cf:	5f                   	pop    %edi
 80483d0:	5f                   	pop    %edi
 80483d1:	00 5f 4a             	add    %bl,0x4a(%edi)
 80483d4:	76 5f                	jbe    8048435 <_init-0x247>
 80483d6:	52                   	push   %edx
 80483d7:	65 67 69 73 74 65 72 	imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
 80483de:	43 6c 
 80483e0:	61                   	popa   
 80483e1:	73 73                	jae    8048456 <_init-0x226>
 80483e3:	65                   	gs
 80483e4:	73 00                	jae    80483e6 <_init-0x296>
 80483e6:	70 6f                	jo     8048457 <_init-0x225>
 80483e8:	77 00                	ja     80483ea <_init-0x292>
 80483ea:	6c                   	insb   (%dx),%es:(%edi)
 80483eb:	69 62 63 2e 73 6f 2e 	imul   $0x2e6f732e,0x63(%edx),%esp
 80483f2:	36 00 5f 49          	add    %bl,%ss:0x49(%edi)
 80483f6:	4f                   	dec    %edi
 80483f7:	5f                   	pop    %edi
 80483f8:	73 74                	jae    804846e <_init-0x20e>
 80483fa:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048401:	64 
 8048402:	00 5f 5f             	add    %bl,0x5f(%edi)
 8048405:	70 72                	jo     8048479 <_init-0x203>
 8048407:	69 6e 74 66 5f 63 68 	imul   $0x68635f66,0x74(%esi),%ebp
 804840e:	6b 00 65             	imul   $0x65,(%eax),%eax
 8048411:	78 69                	js     804847c <_init-0x200>
 8048413:	74 00                	je     8048415 <_init-0x267>
 8048415:	73 72                	jae    8048489 <_init-0x1f3>
 8048417:	61                   	popa   
 8048418:	6e                   	outsb  %ds:(%esi),(%dx)
 8048419:	64 00 66 6f          	add    %ah,%fs:0x6f(%esi)
 804841d:	70 65                	jo     8048484 <_init-0x1f8>
 804841f:	6e                   	outsb  %ds:(%esi),(%dx)
 8048420:	00 5f 5f             	add    %bl,0x5f(%edi)
 8048423:	73 74                	jae    8048499 <_init-0x1e3>
 8048425:	72 64                	jb     804848b <_init-0x1f1>
 8048427:	75 70                	jne    8048499 <_init-0x1e3>
 8048429:	00 70 75             	add    %dh,0x75(%eax)
 804842c:	74 73                	je     80484a1 <_init-0x1db>
 804842e:	00 5f 5f             	add    %bl,0x5f(%edi)
 8048431:	73 74                	jae    80484a7 <_init-0x1d5>
 8048433:	61                   	popa   
 8048434:	63 6b 5f             	arpl   %bp,0x5f(%ebx)
 8048437:	63 68 6b             	arpl   %bp,0x6b(%eax)
 804843a:	5f                   	pop    %edi
 804843b:	66 61                	popaw  
 804843d:	69 6c 00 70 75 74 63 	imul   $0x68637475,0x70(%eax,%eax,1),%ebp
 8048444:	68 
 8048445:	61                   	popa   
 8048446:	72 00                	jb     8048448 <_init-0x234>
 8048448:	73 74                	jae    80484be <_init-0x1be>
 804844a:	72 74                	jb     80484c0 <_init-0x1bc>
 804844c:	6f                   	outsl  %ds:(%esi),(%dx)
 804844d:	6c                   	insb   (%dx),%es:(%edi)
 804844e:	00 66 67             	add    %ah,0x67(%esi)
 8048451:	65                   	gs
 8048452:	74 73                	je     80484c7 <_init-0x1b5>
 8048454:	00 63 61             	add    %ah,0x61(%ebx)
 8048457:	6c                   	insb   (%dx),%es:(%edi)
 8048458:	6c                   	insb   (%dx),%es:(%edi)
 8048459:	6f                   	outsl  %ds:(%esi),(%dx)
 804845a:	63 00                	arpl   %ax,(%eax)
 804845c:	67                   	addr16
 804845d:	65                   	gs
 804845e:	74 6f                	je     80484cf <_init-0x1ad>
 8048460:	70 74                	jo     80484d6 <_init-0x1a6>
 8048462:	00 5f 5f             	add    %bl,0x5f(%edi)
 8048465:	66                   	data16
 8048466:	70 72                	jo     80484da <_init-0x1a2>
 8048468:	69 6e 74 66 5f 63 68 	imul   $0x68635f66,0x74(%esi),%ebp
 804846f:	6b 00 66             	imul   $0x66,(%eax),%eax
 8048472:	63 6c 6f 73          	arpl   %bp,0x73(%edi,%ebp,2)
 8048476:	65 00 6d 61          	add    %ch,%gs:0x61(%ebp)
 804847a:	6c                   	insb   (%dx),%es:(%edi)
 804847b:	6c                   	insb   (%dx),%es:(%edi)
 804847c:	6f                   	outsl  %ds:(%esi),(%dx)
 804847d:	63 00                	arpl   %ax,(%eax)
 804847f:	6f                   	outsl  %ds:(%esi),(%dx)
 8048480:	70 74                	jo     80484f6 <_init-0x186>
 8048482:	61                   	popa   
 8048483:	72 67                	jb     80484ec <_init-0x190>
 8048485:	00 73 74             	add    %dh,0x74(%ebx)
 8048488:	64                   	fs
 8048489:	65                   	gs
 804848a:	72 72                	jb     80484fe <_init-0x17e>
 804848c:	00 66 77             	add    %ah,0x77(%esi)
 804848f:	72 69                	jb     80484fa <_init-0x182>
 8048491:	74 65                	je     80484f8 <_init-0x184>
 8048493:	00 73 74             	add    %dh,0x74(%ebx)
 8048496:	72 63                	jb     80484fb <_init-0x181>
 8048498:	68 72 00 73 6c       	push   $0x6c730072
 804849d:	65                   	gs
 804849e:	65                   	gs
 804849f:	70 00                	jo     80484a1 <_init-0x1db>
 80484a1:	74 69                	je     804850c <_init-0x170>
 80484a3:	6d                   	insl   (%dx),%es:(%edi)
 80484a4:	65                   	gs
 80484a5:	73 00                	jae    80484a7 <_init-0x1d5>
 80484a7:	73 74                	jae    804851d <_init-0x15f>
 80484a9:	72 63                	jb     804850e <_init-0x16e>
 80484ab:	6d                   	insl   (%dx),%es:(%edi)
 80484ac:	70 00                	jo     80484ae <_init-0x1ce>
 80484ae:	5f                   	pop    %edi
 80484af:	5f                   	pop    %edi
 80484b0:	6c                   	insb   (%dx),%es:(%edi)
 80484b1:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 80484b8:	72 74                	jb     804852e <_init-0x14e>
 80484ba:	5f                   	pop    %edi
 80484bb:	6d                   	insl   (%dx),%es:(%edi)
 80484bc:	61                   	popa   
 80484bd:	69 6e 00 66 72 65 65 	imul   $0x65657266,0x0(%esi),%ebp
 80484c4:	00 47 4c             	add    %al,0x4c(%edi)
 80484c7:	49                   	dec    %ecx
 80484c8:	42                   	inc    %edx
 80484c9:	43                   	inc    %ebx
 80484ca:	5f                   	pop    %edi
 80484cb:	32 2e                	xor    (%esi),%ch
 80484cd:	30 00                	xor    %al,(%eax)
 80484cf:	47                   	inc    %edi
 80484d0:	4c                   	dec    %esp
 80484d1:	49                   	dec    %ecx
 80484d2:	42                   	inc    %edx
 80484d3:	43                   	inc    %ebx
 80484d4:	5f                   	pop    %edi
 80484d5:	32 2e                	xor    (%esi),%ch
 80484d7:	33 2e                	xor    (%esi),%ebp
 80484d9:	34 00                	xor    $0x0,%al
 80484db:	47                   	inc    %edi
 80484dc:	4c                   	dec    %esp
 80484dd:	49                   	dec    %ecx
 80484de:	42                   	inc    %edx
 80484df:	43                   	inc    %ebx
 80484e0:	5f                   	pop    %edi
 80484e1:	32 2e                	xor    (%esi),%ch
 80484e3:	34 00                	xor    $0x0,%al
 80484e5:	47                   	inc    %edi
 80484e6:	4c                   	dec    %esp
 80484e7:	49                   	dec    %ecx
 80484e8:	42                   	inc    %edx
 80484e9:	43                   	inc    %ebx
 80484ea:	5f                   	pop    %edi
 80484eb:	32 2e                	xor    (%esi),%ch
 80484ed:	31 00                	xor    %eax,(%eax)

Disassembly of section .gnu.version:

080484f0 <.gnu.version>:
 80484f0:	00 00                	add    %al,(%eax)
 80484f2:	02 00                	add    (%eax),%al
 80484f4:	02 00                	add    (%eax),%al
 80484f6:	02 00                	add    (%eax),%al
 80484f8:	02 00                	add    (%eax),%al
 80484fa:	03 00                	add    (%eax),%eax
 80484fc:	02 00                	add    (%eax),%al
 80484fe:	04 00                	add    $0x0,%al
 8048500:	05 00 02 00 02       	add    $0x2000200,%eax
 8048505:	00 02                	add    %al,(%edx)
 8048507:	00 00                	add    %al,(%eax)
 8048509:	00 02                	add    %al,(%edx)
 804850b:	00 02                	add    %al,(%edx)
 804850d:	00 02                	add    %al,(%edx)
 804850f:	00 02                	add    %al,(%edx)
 8048511:	00 02                	add    %al,(%edx)
 8048513:	00 03                	add    %al,(%ebx)
 8048515:	00 02                	add    %al,(%edx)
 8048517:	00 02                	add    %al,(%edx)
 8048519:	00 02                	add    %al,(%edx)
 804851b:	00 06                	add    %al,(%esi)
 804851d:	00 00                	add    %al,(%eax)
 804851f:	00 06                	add    %al,(%esi)
 8048521:	00 02                	add    %al,(%edx)
 8048523:	00 02                	add    %al,(%edx)
 8048525:	00 02                	add    %al,(%edx)
 8048527:	00 01                	add    %al,(%ecx)
 8048529:	00 02                	add    %al,(%edx)
	...

Disassembly of section .gnu.version_r:

0804852c <.gnu.version_r>:
 804852c:	01 00                	add    %eax,(%eax)
 804852e:	01 00                	add    %eax,(%eax)
 8048530:	01 00                	add    %eax,(%eax)
 8048532:	00 00                	add    %al,(%eax)
 8048534:	10 00                	adc    %al,(%eax)
 8048536:	00 00                	add    %al,(%eax)
 8048538:	20 00                	and    %al,(%eax)
 804853a:	00 00                	add    %al,(%eax)
 804853c:	10 69 69             	adc    %ch,0x69(%ecx)
 804853f:	0d 00 00 04 00       	or     $0x40000,%eax
 8048544:	0d 01 00 00 00       	or     $0x1,%eax
 8048549:	00 00                	add    %al,(%eax)
 804854b:	00 01                	add    %al,(%ecx)
 804854d:	00 04 00             	add    %al,(%eax,%eax,1)
 8048550:	32 00                	xor    (%eax),%al
 8048552:	00 00                	add    %al,(%eax)
 8048554:	10 00                	adc    %al,(%eax)
 8048556:	00 00                	add    %al,(%eax)
 8048558:	00 00                	add    %al,(%eax)
 804855a:	00 00                	add    %al,(%eax)
 804855c:	74 19                	je     8048577 <_init-0x105>
 804855e:	69 09 00 00 06 00    	imul   $0x60000,(%ecx),%ecx
 8048564:	17                   	pop    %ss
 8048565:	01 00                	add    %eax,(%eax)
 8048567:	00 10                	add    %dl,(%eax)
 8048569:	00 00                	add    %al,(%eax)
 804856b:	00 14 69             	add    %dl,(%ecx,%ebp,2)
 804856e:	69 0d 00 00 05 00 23 	imul   $0x123,0x50000,%ecx
 8048575:	01 00 00 
 8048578:	10 00                	adc    %al,(%eax)
 804857a:	00 00                	add    %al,(%eax)
 804857c:	11 69 69             	adc    %ebp,0x69(%ecx)
 804857f:	0d 00 00 03 00       	or     $0x30000,%eax
 8048584:	2d 01 00 00 10       	sub    $0x10000001,%eax
 8048589:	00 00                	add    %al,(%eax)
 804858b:	00 10                	add    %dl,(%eax)
 804858d:	69 69 0d 00 00 02 00 	imul   $0x20000,0xd(%ecx),%ebp
 8048594:	0d 01 00 00 00       	or     $0x1,%eax
 8048599:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

0804859c <.rel.dyn>:
 804859c:	fc                   	cld    
 804859d:	cf                   	iret   
 804859e:	04 08                	add    $0x8,%al
 80485a0:	06                   	push   %es
 80485a1:	0c 00                	or     $0x0,%al
 80485a3:	00 80 d1 04 08 05    	add    %al,0x50804d1(%eax)
 80485a9:	1b 00                	sbb    (%eax),%eax
 80485ab:	00 84 d1 04 08 05 1d 	add    %al,0x1d050804(%ecx,%edx,8)
	...

Disassembly of section .rel.plt:

080485b4 <.rel.plt>:
 80485b4:	0c d0                	or     $0xd0,%al
 80485b6:	04 08                	add    $0x8,%al
 80485b8:	07                   	pop    %es
 80485b9:	01 00                	add    %eax,(%eax)
 80485bb:	00 10                	add    %dl,(%eax)
 80485bd:	d0 04 08             	rolb   (%eax,%ecx,1)
 80485c0:	07                   	pop    %es
 80485c1:	02 00                	add    (%eax),%al
 80485c3:	00 14 d0             	add    %dl,(%eax,%edx,8)
 80485c6:	04 08                	add    $0x8,%al
 80485c8:	07                   	pop    %es
 80485c9:	03 00                	add    (%eax),%eax
 80485cb:	00 18                	add    %bl,(%eax)
 80485cd:	d0 04 08             	rolb   (%eax,%ecx,1)
 80485d0:	07                   	pop    %es
 80485d1:	04 00                	add    $0x0,%al
 80485d3:	00 1c d0             	add    %bl,(%eax,%edx,8)
 80485d6:	04 08                	add    $0x8,%al
 80485d8:	07                   	pop    %es
 80485d9:	05 00 00 20 d0       	add    $0xd0200000,%eax
 80485de:	04 08                	add    $0x8,%al
 80485e0:	07                   	pop    %es
 80485e1:	06                   	push   %es
 80485e2:	00 00                	add    %al,(%eax)
 80485e4:	24 d0                	and    $0xd0,%al
 80485e6:	04 08                	add    $0x8,%al
 80485e8:	07                   	pop    %es
 80485e9:	07                   	pop    %es
 80485ea:	00 00                	add    %al,(%eax)
 80485ec:	28 d0                	sub    %dl,%al
 80485ee:	04 08                	add    $0x8,%al
 80485f0:	07                   	pop    %es
 80485f1:	08 00                	or     %al,(%eax)
 80485f3:	00 2c d0             	add    %ch,(%eax,%edx,8)
 80485f6:	04 08                	add    $0x8,%al
 80485f8:	07                   	pop    %es
 80485f9:	09 00                	or     %eax,(%eax)
 80485fb:	00 30                	add    %dh,(%eax)
 80485fd:	d0 04 08             	rolb   (%eax,%ecx,1)
 8048600:	07                   	pop    %es
 8048601:	0a 00                	or     (%eax),%al
 8048603:	00 34 d0             	add    %dh,(%eax,%edx,8)
 8048606:	04 08                	add    $0x8,%al
 8048608:	07                   	pop    %es
 8048609:	0b 00                	or     (%eax),%eax
 804860b:	00 38                	add    %bh,(%eax)
 804860d:	d0 04 08             	rolb   (%eax,%ecx,1)
 8048610:	07                   	pop    %es
 8048611:	0c 00                	or     $0x0,%al
 8048613:	00 3c d0             	add    %bh,(%eax,%edx,8)
 8048616:	04 08                	add    $0x8,%al
 8048618:	07                   	pop    %es
 8048619:	0d 00 00 40 d0       	or     $0xd0400000,%eax
 804861e:	04 08                	add    $0x8,%al
 8048620:	07                   	pop    %es
 8048621:	0e                   	push   %cs
 8048622:	00 00                	add    %al,(%eax)
 8048624:	44                   	inc    %esp
 8048625:	d0 04 08             	rolb   (%eax,%ecx,1)
 8048628:	07                   	pop    %es
 8048629:	0f 00 00             	sldt   (%eax)
 804862c:	48                   	dec    %eax
 804862d:	d0 04 08             	rolb   (%eax,%ecx,1)
 8048630:	07                   	pop    %es
 8048631:	10 00                	adc    %al,(%eax)
 8048633:	00 4c d0 04          	add    %cl,0x4(%eax,%edx,8)
 8048637:	08 07                	or     %al,(%edi)
 8048639:	11 00                	adc    %eax,(%eax)
 804863b:	00 50 d0             	add    %dl,-0x30(%eax)
 804863e:	04 08                	add    $0x8,%al
 8048640:	07                   	pop    %es
 8048641:	12 00                	adc    (%eax),%al
 8048643:	00 54 d0 04          	add    %dl,0x4(%eax,%edx,8)
 8048647:	08 07                	or     %al,(%edi)
 8048649:	13 00                	adc    (%eax),%eax
 804864b:	00 58 d0             	add    %bl,-0x30(%eax)
 804864e:	04 08                	add    $0x8,%al
 8048650:	07                   	pop    %es
 8048651:	14 00                	adc    $0x0,%al
 8048653:	00 5c d0 04          	add    %bl,0x4(%eax,%edx,8)
 8048657:	08 07                	or     %al,(%edi)
 8048659:	15 00 00 60 d0       	adc    $0xd0600000,%eax
 804865e:	04 08                	add    $0x8,%al
 8048660:	07                   	pop    %es
 8048661:	16                   	push   %ss
 8048662:	00 00                	add    %al,(%eax)
 8048664:	64 d0 04 08          	rolb   %fs:(%eax,%ecx,1)
 8048668:	07                   	pop    %es
 8048669:	18 00                	sbb    %al,(%eax)
 804866b:	00 68 d0             	add    %ch,-0x30(%eax)
 804866e:	04 08                	add    $0x8,%al
 8048670:	07                   	pop    %es
 8048671:	19 00                	sbb    %eax,(%eax)
 8048673:	00 6c d0 04          	add    %ch,0x4(%eax,%edx,8)
 8048677:	08 07                	or     %al,(%edi)
 8048679:	1a 00                	sbb    (%eax),%al
	...

Disassembly of section .init:

0804867c <_init>:
 804867c:	53                   	push   %ebx
 804867d:	83 ec 08             	sub    $0x8,%esp
 8048680:	e8 00 00 00 00       	call   8048685 <_init+0x9>
 8048685:	5b                   	pop    %ebx
 8048686:	81 c3 7b 49 00 00    	add    $0x497b,%ebx
 804868c:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048692:	85 c0                	test   %eax,%eax
 8048694:	74 05                	je     804869b <_init+0x1f>
 8048696:	e8 c5 00 00 00       	call   8048760 <__gmon_start__@plt>
 804869b:	83 c4 08             	add    $0x8,%esp
 804869e:	5b                   	pop    %ebx
 804869f:	c3                   	ret    

Disassembly of section .plt:

080486a0 <strcmp@plt-0x10>:
 80486a0:	ff 35 04 d0 04 08    	pushl  0x804d004
 80486a6:	ff 25 08 d0 04 08    	jmp    *0x804d008
 80486ac:	00 00                	add    %al,(%eax)
	...

080486b0 <strcmp@plt>:
 80486b0:	ff 25 0c d0 04 08    	jmp    *0x804d00c
 80486b6:	68 00 00 00 00       	push   $0x0
 80486bb:	e9 e0 ff ff ff       	jmp    80486a0 <_init+0x24>

080486c0 <times@plt>:
 80486c0:	ff 25 10 d0 04 08    	jmp    *0x804d010
 80486c6:	68 08 00 00 00       	push   $0x8
 80486cb:	e9 d0 ff ff ff       	jmp    80486a0 <_init+0x24>

080486d0 <free@plt>:
 80486d0:	ff 25 14 d0 04 08    	jmp    *0x804d014
 80486d6:	68 10 00 00 00       	push   $0x10
 80486db:	e9 c0 ff ff ff       	jmp    80486a0 <_init+0x24>

080486e0 <fgets@plt>:
 80486e0:	ff 25 18 d0 04 08    	jmp    *0x804d018
 80486e6:	68 18 00 00 00       	push   $0x18
 80486eb:	e9 b0 ff ff ff       	jmp    80486a0 <_init+0x24>

080486f0 <fclose@plt>:
 80486f0:	ff 25 1c d0 04 08    	jmp    *0x804d01c
 80486f6:	68 20 00 00 00       	push   $0x20
 80486fb:	e9 a0 ff ff ff       	jmp    80486a0 <_init+0x24>

08048700 <sleep@plt>:
 8048700:	ff 25 20 d0 04 08    	jmp    *0x804d020
 8048706:	68 28 00 00 00       	push   $0x28
 804870b:	e9 90 ff ff ff       	jmp    80486a0 <_init+0x24>

08048710 <pow@plt>:
 8048710:	ff 25 24 d0 04 08    	jmp    *0x804d024
 8048716:	68 30 00 00 00       	push   $0x30
 804871b:	e9 80 ff ff ff       	jmp    80486a0 <_init+0x24>

08048720 <__stack_chk_fail@plt>:
 8048720:	ff 25 28 d0 04 08    	jmp    *0x804d028
 8048726:	68 38 00 00 00       	push   $0x38
 804872b:	e9 70 ff ff ff       	jmp    80486a0 <_init+0x24>

08048730 <fwrite@plt>:
 8048730:	ff 25 2c d0 04 08    	jmp    *0x804d02c
 8048736:	68 40 00 00 00       	push   $0x40
 804873b:	e9 60 ff ff ff       	jmp    80486a0 <_init+0x24>

08048740 <malloc@plt>:
 8048740:	ff 25 30 d0 04 08    	jmp    *0x804d030
 8048746:	68 48 00 00 00       	push   $0x48
 804874b:	e9 50 ff ff ff       	jmp    80486a0 <_init+0x24>

08048750 <puts@plt>:
 8048750:	ff 25 34 d0 04 08    	jmp    *0x804d034
 8048756:	68 50 00 00 00       	push   $0x50
 804875b:	e9 40 ff ff ff       	jmp    80486a0 <_init+0x24>

08048760 <__gmon_start__@plt>:
 8048760:	ff 25 38 d0 04 08    	jmp    *0x804d038
 8048766:	68 58 00 00 00       	push   $0x58
 804876b:	e9 30 ff ff ff       	jmp    80486a0 <_init+0x24>

08048770 <exit@plt>:
 8048770:	ff 25 3c d0 04 08    	jmp    *0x804d03c
 8048776:	68 60 00 00 00       	push   $0x60
 804877b:	e9 20 ff ff ff       	jmp    80486a0 <_init+0x24>

08048780 <srand@plt>:
 8048780:	ff 25 40 d0 04 08    	jmp    *0x804d040
 8048786:	68 68 00 00 00       	push   $0x68
 804878b:	e9 10 ff ff ff       	jmp    80486a0 <_init+0x24>

08048790 <strchr@plt>:
 8048790:	ff 25 44 d0 04 08    	jmp    *0x804d044
 8048796:	68 70 00 00 00       	push   $0x70
 804879b:	e9 00 ff ff ff       	jmp    80486a0 <_init+0x24>

080487a0 <__libc_start_main@plt>:
 80487a0:	ff 25 48 d0 04 08    	jmp    *0x804d048
 80487a6:	68 78 00 00 00       	push   $0x78
 80487ab:	e9 f0 fe ff ff       	jmp    80486a0 <_init+0x24>

080487b0 <getopt@plt>:
 80487b0:	ff 25 4c d0 04 08    	jmp    *0x804d04c
 80487b6:	68 80 00 00 00       	push   $0x80
 80487bb:	e9 e0 fe ff ff       	jmp    80486a0 <_init+0x24>

080487c0 <fopen@plt>:
 80487c0:	ff 25 50 d0 04 08    	jmp    *0x804d050
 80487c6:	68 88 00 00 00       	push   $0x88
 80487cb:	e9 d0 fe ff ff       	jmp    80486a0 <_init+0x24>

080487d0 <__strdup@plt>:
 80487d0:	ff 25 54 d0 04 08    	jmp    *0x804d054
 80487d6:	68 90 00 00 00       	push   $0x90
 80487db:	e9 c0 fe ff ff       	jmp    80486a0 <_init+0x24>

080487e0 <putchar@plt>:
 80487e0:	ff 25 58 d0 04 08    	jmp    *0x804d058
 80487e6:	68 98 00 00 00       	push   $0x98
 80487eb:	e9 b0 fe ff ff       	jmp    80486a0 <_init+0x24>

080487f0 <rand@plt>:
 80487f0:	ff 25 5c d0 04 08    	jmp    *0x804d05c
 80487f6:	68 a0 00 00 00       	push   $0xa0
 80487fb:	e9 a0 fe ff ff       	jmp    80486a0 <_init+0x24>

08048800 <__printf_chk@plt>:
 8048800:	ff 25 60 d0 04 08    	jmp    *0x804d060
 8048806:	68 a8 00 00 00       	push   $0xa8
 804880b:	e9 90 fe ff ff       	jmp    80486a0 <_init+0x24>

08048810 <__fprintf_chk@plt>:
 8048810:	ff 25 64 d0 04 08    	jmp    *0x804d064
 8048816:	68 b0 00 00 00       	push   $0xb0
 804881b:	e9 80 fe ff ff       	jmp    80486a0 <_init+0x24>

08048820 <strtol@plt>:
 8048820:	ff 25 68 d0 04 08    	jmp    *0x804d068
 8048826:	68 b8 00 00 00       	push   $0xb8
 804882b:	e9 70 fe ff ff       	jmp    80486a0 <_init+0x24>

08048830 <calloc@plt>:
 8048830:	ff 25 6c d0 04 08    	jmp    *0x804d06c
 8048836:	68 c0 00 00 00       	push   $0xc0
 804883b:	e9 60 fe ff ff       	jmp    80486a0 <_init+0x24>

Disassembly of section .text:

08048840 <main>:
 8048840:	55                   	push   %ebp
 8048841:	89 e5                	mov    %esp,%ebp
 8048843:	57                   	push   %edi
 8048844:	56                   	push   %esi
 8048845:	53                   	push   %ebx
 8048846:	83 e4 f0             	and    $0xfffffff0,%esp
 8048849:	81 ec 50 01 00 00    	sub    $0x150,%esp
 804884f:	8b 55 0c             	mov    0xc(%ebp),%edx
 8048852:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048858:	89 84 24 4c 01 00 00 	mov    %eax,0x14c(%esp)
 804885f:	31 c0                	xor    %eax,%eax
 8048861:	89 54 24 38          	mov    %edx,0x38(%esp)
 8048865:	e8 36 1a 00 00       	call   804a2a0 <register_rotate_functions>
 804886a:	e8 61 1a 00 00       	call   804a2d0 <register_smooth_functions>
 804886f:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
 8048876:	00 
 8048877:	c7 44 24 24 c1 06 00 	movl   $0x6c1,0x24(%esp)
 804887e:	00 
 804887f:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 8048886:	00 
 8048887:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
 804888e:	00 
 804888f:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 8048896:	00 
 8048897:	8b 54 24 38          	mov    0x38(%esp),%edx
 804889b:	c7 44 24 08 7d ae 04 	movl   $0x804ae7d,0x8(%esp)
 80488a2:	08 
 80488a3:	89 54 24 04          	mov    %edx,0x4(%esp)
 80488a7:	8b 55 08             	mov    0x8(%ebp),%edx
 80488aa:	89 14 24             	mov    %edx,(%esp)
 80488ad:	e8 fe fe ff ff       	call   80487b0 <getopt@plt>
 80488b2:	3c ff                	cmp    $0xff,%al
 80488b4:	0f 84 2f 01 00 00    	je     80489e9 <main+0x1a9>
 80488ba:	83 e8 64             	sub    $0x64,%eax
 80488bd:	3c 10                	cmp    $0x10,%al
 80488bf:	76 0f                	jbe    80488d0 <main+0x90>
 80488c1:	8b 54 24 38          	mov    0x38(%esp),%edx
 80488c5:	8b 02                	mov    (%edx),%eax
 80488c7:	89 04 24             	mov    %eax,(%esp)
 80488ca:	e8 d1 15 00 00       	call   8049ea0 <usage>
 80488cf:	90                   	nop
 80488d0:	0f b6 c0             	movzbl %al,%eax
 80488d3:	ff 24 85 60 af 04 08 	jmp    *0x804af60(,%eax,4)
 80488da:	a1 84 d1 04 08       	mov    0x804d184,%eax
 80488df:	c7 44 24 08 0a 00 00 	movl   $0xa,0x8(%esp)
 80488e6:	00 
 80488e7:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 80488ee:	00 
 80488ef:	89 04 24             	mov    %eax,(%esp)
 80488f2:	e8 29 ff ff ff       	call   8048820 <strtol@plt>
 80488f7:	89 44 24 24          	mov    %eax,0x24(%esp)
 80488fb:	eb 9a                	jmp    8048897 <main+0x57>
 80488fd:	c7 44 24 2c 01 00 00 	movl   $0x1,0x2c(%esp)
 8048904:	00 
 8048905:	eb 90                	jmp    8048897 <main+0x57>
 8048907:	c7 44 24 28 01 00 00 	movl   $0x1,0x28(%esp)
 804890e:	00 
 804890f:	eb 86                	jmp    8048897 <main+0x57>
 8048911:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%esp)
 8048918:	00 
 8048919:	e9 79 ff ff ff       	jmp    8048897 <main+0x57>
 804891e:	a1 84 d1 04 08       	mov    0x804d184,%eax
 8048923:	89 04 24             	mov    %eax,(%esp)
 8048926:	e8 a5 fe ff ff       	call   80487d0 <__strdup@plt>
 804892b:	89 44 24 34          	mov    %eax,0x34(%esp)
 804892f:	e9 63 ff ff ff       	jmp    8048897 <main+0x57>
 8048934:	a1 84 d1 04 08       	mov    0x804d184,%eax
 8048939:	89 04 24             	mov    %eax,(%esp)
 804893c:	e8 8f fe ff ff       	call   80487d0 <__strdup@plt>
 8048941:	c7 44 24 04 5b ae 04 	movl   $0x804ae5b,0x4(%esp)
 8048948:	08 
 8048949:	89 04 24             	mov    %eax,(%esp)
 804894c:	89 c3                	mov    %eax,%ebx
 804894e:	e8 6d fe ff ff       	call   80487c0 <fopen@plt>
 8048953:	85 c0                	test   %eax,%eax
 8048955:	89 c7                	mov    %eax,%edi
 8048957:	0f 84 ff 04 00 00    	je     8048e5c <main+0x61c>
 804895d:	31 db                	xor    %ebx,%ebx
 804895f:	be 6c e6 04 08       	mov    $0x804e66c,%esi
 8048964:	83 3d 30 e6 04 08 00 	cmpl   $0x0,0x804e630
 804896b:	7e 2f                	jle    804899c <main+0x15c>
 804896d:	8d 76 00             	lea    0x0(%esi),%esi
 8048970:	8b 06                	mov    (%esi),%eax
 8048972:	83 c3 01             	add    $0x1,%ebx
 8048975:	83 c6 34             	add    $0x34,%esi
 8048978:	c7 44 24 08 71 ae 04 	movl   $0x804ae71,0x8(%esp)
 804897f:	08 
 8048980:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8048987:	00 
 8048988:	89 3c 24             	mov    %edi,(%esp)
 804898b:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804898f:	e8 7c fe ff ff       	call   8048810 <__fprintf_chk@plt>
 8048994:	39 1d 30 e6 04 08    	cmp    %ebx,0x804e630
 804899a:	7f d4                	jg     8048970 <main+0x130>
 804899c:	31 db                	xor    %ebx,%ebx
 804899e:	be 0c d2 04 08       	mov    $0x804d20c,%esi
 80489a3:	83 3d c0 d1 04 08 00 	cmpl   $0x0,0x804d1c0
 80489aa:	7e 30                	jle    80489dc <main+0x19c>
 80489ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80489b0:	8b 06                	mov    (%esi),%eax
 80489b2:	83 c3 01             	add    $0x1,%ebx
 80489b5:	83 c6 34             	add    $0x34,%esi
 80489b8:	c7 44 24 08 77 ae 04 	movl   $0x804ae77,0x8(%esp)
 80489bf:	08 
 80489c0:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 80489c7:	00 
 80489c8:	89 3c 24             	mov    %edi,(%esp)
 80489cb:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80489cf:	e8 3c fe ff ff       	call   8048810 <__fprintf_chk@plt>
 80489d4:	39 1d c0 d1 04 08    	cmp    %ebx,0x804d1c0
 80489da:	7f d4                	jg     80489b0 <main+0x170>
 80489dc:	89 3c 24             	mov    %edi,(%esp)
 80489df:	e8 0c fd ff ff       	call   80486f0 <fclose@plt>
 80489e4:	e9 ae fe ff ff       	jmp    8048897 <main+0x57>
 80489e9:	83 7c 24 2c 00       	cmpl   $0x0,0x2c(%esp)
 80489ee:	0f 85 5c 04 00 00    	jne    8048e50 <main+0x610>
 80489f4:	83 7c 24 28 00       	cmpl   $0x0,0x28(%esp)
 80489f9:	0f 85 c6 00 00 00    	jne    8048ac5 <main+0x285>
 80489ff:	8b 1d 4c d1 04 08    	mov    0x804d14c,%ebx
 8048a05:	c7 04 24 88 ae 04 08 	movl   $0x804ae88,(%esp)
 8048a0c:	89 5c 24 04          	mov    %ebx,0x4(%esp)
 8048a10:	e8 9b fc ff ff       	call   80486b0 <strcmp@plt>
 8048a15:	85 c0                	test   %eax,%eax
 8048a17:	0f 84 09 04 00 00    	je     8048e26 <main+0x5e6>
 8048a1d:	89 5c 24 08          	mov    %ebx,0x8(%esp)
 8048a21:	c7 44 24 04 8e ae 04 	movl   $0x804ae8e,0x4(%esp)
 8048a28:	08 
 8048a29:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048a30:	e8 cb fd ff ff       	call   8048800 <__printf_chk@plt>
 8048a35:	a1 50 d1 04 08       	mov    0x804d150,%eax
 8048a3a:	c7 44 24 04 9c ae 04 	movl   $0x804ae9c,0x4(%esp)
 8048a41:	08 
 8048a42:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048a49:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048a4d:	e8 ae fd ff ff       	call   8048800 <__printf_chk@plt>
 8048a52:	a1 54 d1 04 08       	mov    0x804d154,%eax
 8048a57:	c7 44 24 04 aa ae 04 	movl   $0x804aeaa,0x4(%esp)
 8048a5e:	08 
 8048a5f:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048a66:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048a6a:	e8 91 fd ff ff       	call   8048800 <__printf_chk@plt>
 8048a6f:	a1 58 d1 04 08       	mov    0x804d158,%eax
 8048a74:	80 38 00             	cmpb   $0x0,(%eax)
 8048a77:	75 0b                	jne    8048a84 <main+0x244>
 8048a79:	8b 15 5c d1 04 08    	mov    0x804d15c,%edx
 8048a7f:	80 3a 00             	cmpb   $0x0,(%edx)
 8048a82:	74 35                	je     8048ab9 <main+0x279>
 8048a84:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048a88:	c7 44 24 04 b7 ae 04 	movl   $0x804aeb7,0x4(%esp)
 8048a8f:	08 
 8048a90:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048a97:	e8 64 fd ff ff       	call   8048800 <__printf_chk@plt>
 8048a9c:	a1 5c d1 04 08       	mov    0x804d15c,%eax
 8048aa1:	c7 44 24 04 c5 ae 04 	movl   $0x804aec5,0x4(%esp)
 8048aa8:	08 
 8048aa9:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048ab0:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048ab4:	e8 47 fd ff ff       	call   8048800 <__printf_chk@plt>
 8048ab9:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)
 8048ac0:	e8 1b fd ff ff       	call   80487e0 <putchar@plt>
 8048ac5:	8b 44 24 24          	mov    0x24(%esp),%eax
 8048ac9:	89 04 24             	mov    %eax,(%esp)
 8048acc:	e8 af fc ff ff       	call   8048780 <srand@plt>
 8048ad1:	83 7c 24 30 00       	cmpl   $0x0,0x30(%esp)
 8048ad6:	0f 85 e8 00 00 00    	jne    8048bc4 <main+0x384>
 8048adc:	83 7c 24 34 00       	cmpl   $0x0,0x34(%esp)
 8048ae1:	0f 84 bf 02 00 00    	je     8048da6 <main+0x566>
 8048ae7:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048aeb:	c7 44 24 04 f6 ae 04 	movl   $0x804aef6,0x4(%esp)
 8048af2:	08 
 8048af3:	89 04 24             	mov    %eax,(%esp)
 8048af6:	e8 c5 fc ff ff       	call   80487c0 <fopen@plt>
 8048afb:	8d 54 24 4c          	lea    0x4c(%esp),%edx
 8048aff:	89 54 24 3c          	mov    %edx,0x3c(%esp)
 8048b03:	85 c0                	test   %eax,%eax
 8048b05:	89 44 24 38          	mov    %eax,0x38(%esp)
 8048b09:	0f 84 ea 02 00 00    	je     8048df9 <main+0x5b9>
 8048b0f:	8b 44 24 38          	mov    0x38(%esp),%eax
 8048b13:	8d 54 24 4c          	lea    0x4c(%esp),%edx
 8048b17:	c7 44 24 04 00 01 00 	movl   $0x100,0x4(%esp)
 8048b1e:	00 
 8048b1f:	89 14 24             	mov    %edx,(%esp)
 8048b22:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048b26:	e8 b5 fb ff ff       	call   80486e0 <fgets@plt>
 8048b2b:	3b 44 24 3c          	cmp    0x3c(%esp),%eax
 8048b2f:	0f 85 60 02 00 00    	jne    8048d95 <main+0x555>
 8048b35:	8d 54 24 4c          	lea    0x4c(%esp),%edx
 8048b39:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)
 8048b40:	00 
 8048b41:	89 14 24             	mov    %edx,(%esp)
 8048b44:	e8 47 fc ff ff       	call   8048790 <strchr@plt>
 8048b49:	85 c0                	test   %eax,%eax
 8048b4b:	0f 84 0b 02 00 00    	je     8048d5c <main+0x51c>
 8048b51:	89 c6                	mov    %eax,%esi
 8048b53:	83 c6 01             	add    $0x1,%esi
 8048b56:	c6 00 00             	movb   $0x0,(%eax)
 8048b59:	0f b6 5c 24 4c       	movzbl 0x4c(%esp),%ebx
 8048b5e:	74 17                	je     8048b77 <main+0x337>
 8048b60:	c7 44 24 04 0a 00 00 	movl   $0xa,0x4(%esp)
 8048b67:	00 
 8048b68:	89 34 24             	mov    %esi,(%esp)
 8048b6b:	e8 20 fc ff ff       	call   8048790 <strchr@plt>
 8048b70:	85 c0                	test   %eax,%eax
 8048b72:	74 03                	je     8048b77 <main+0x337>
 8048b74:	c6 00 00             	movb   $0x0,(%eax)
 8048b77:	80 fb 52             	cmp    $0x52,%bl
 8048b7a:	0f 84 99 01 00 00    	je     8048d19 <main+0x4d9>
 8048b80:	80 fb 53             	cmp    $0x53,%bl
 8048b83:	75 8a                	jne    8048b0f <main+0x2cf>
 8048b85:	a1 c0 d1 04 08       	mov    0x804d1c0,%eax
 8048b8a:	85 c0                	test   %eax,%eax
 8048b8c:	7e 81                	jle    8048b0f <main+0x2cf>
 8048b8e:	6b c0 34             	imul   $0x34,%eax,%eax
 8048b91:	bb 0c d2 04 08       	mov    $0x804d20c,%ebx
 8048b96:	8d 3c 18             	lea    (%eax,%ebx,1),%edi
 8048b99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8048ba0:	89 74 24 04          	mov    %esi,0x4(%esp)
 8048ba4:	8b 03                	mov    (%ebx),%eax
 8048ba6:	89 04 24             	mov    %eax,(%esp)
 8048ba9:	e8 02 fb ff ff       	call   80486b0 <strcmp@plt>
 8048bae:	85 c0                	test   %eax,%eax
 8048bb0:	75 06                	jne    8048bb8 <main+0x378>
 8048bb2:	66 c7 43 04 01 00    	movw   $0x1,0x4(%ebx)
 8048bb8:	83 c3 34             	add    $0x34,%ebx
 8048bbb:	39 fb                	cmp    %edi,%ebx
 8048bbd:	75 e1                	jne    8048ba0 <main+0x360>
 8048bbf:	e9 4b ff ff ff       	jmp    8048b0f <main+0x2cf>
 8048bc4:	c7 05 30 e6 04 08 01 	movl   $0x1,0x804e630
 8048bcb:	00 00 00 
 8048bce:	c7 05 c0 d1 04 08 01 	movl   $0x1,0x804d1c0
 8048bd5:	00 00 00 
 8048bd8:	c7 05 40 e6 04 08 40 	movl   $0x804a040,0x804e640
 8048bdf:	a0 04 08 
 8048be2:	c7 05 6c e6 04 08 d2 	movl   $0x804aed2,0x804e66c
 8048be9:	ae 04 08 
 8048bec:	66 c7 05 70 e6 04 08 	movw   $0x1,0x804e670
 8048bf3:	01 00 
 8048bf5:	c7 05 e0 d1 04 08 90 	movl   $0x804a290,0x804d1e0
 8048bfc:	a2 04 08 
 8048bff:	c7 05 0c d2 04 08 e4 	movl   $0x804aee4,0x804d20c
 8048c06:	ae 04 08 
 8048c09:	66 c7 05 10 d2 04 08 	movw   $0x1,0x804d210
 8048c10:	01 00 
 8048c12:	c7 04 24 00 40 00 00 	movl   $0x4000,(%esp)
 8048c19:	31 db                	xor    %ebx,%ebx
 8048c1b:	be 70 e6 04 08       	mov    $0x804e670,%esi
 8048c20:	e8 3b 1a 00 00       	call   804a660 <set_fcyc_cache_size>
 8048c25:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048c2c:	e8 1f 1a 00 00       	call   804a650 <set_fcyc_clear_cache>
 8048c31:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048c38:	e8 73 1a 00 00       	call   804a6b0 <set_fcyc_compensate>
 8048c3d:	83 3d 30 e6 04 08 00 	cmpl   $0x0,0x804e630
 8048c44:	7f 10                	jg     8048c56 <main+0x416>
 8048c46:	eb 1e                	jmp    8048c66 <main+0x426>
 8048c48:	83 c3 01             	add    $0x1,%ebx
 8048c4b:	83 c6 34             	add    $0x34,%esi
 8048c4e:	39 1d 30 e6 04 08    	cmp    %ebx,0x804e630
 8048c54:	7e 10                	jle    8048c66 <main+0x426>
 8048c56:	66 83 3e 00          	cmpw   $0x0,(%esi)
 8048c5a:	74 ec                	je     8048c48 <main+0x408>
 8048c5c:	89 1c 24             	mov    %ebx,(%esp)
 8048c5f:	e8 cc 0b 00 00       	call   8049830 <test_rotate>
 8048c64:	eb e2                	jmp    8048c48 <main+0x408>
 8048c66:	31 db                	xor    %ebx,%ebx
 8048c68:	be 10 d2 04 08       	mov    $0x804d210,%esi
 8048c6d:	83 3d c0 d1 04 08 00 	cmpl   $0x0,0x804d1c0
 8048c74:	7f 10                	jg     8048c86 <main+0x446>
 8048c76:	eb 1e                	jmp    8048c96 <main+0x456>
 8048c78:	83 c3 01             	add    $0x1,%ebx
 8048c7b:	83 c6 34             	add    $0x34,%esi
 8048c7e:	39 1d c0 d1 04 08    	cmp    %ebx,0x804d1c0
 8048c84:	7e 10                	jle    8048c96 <main+0x456>
 8048c86:	66 83 3e 00          	cmpw   $0x0,(%esi)
 8048c8a:	74 ec                	je     8048c78 <main+0x438>
 8048c8c:	89 1c 24             	mov    %ebx,(%esp)
 8048c8f:	e8 ec 0e 00 00       	call   8049b80 <test_smooth>
 8048c94:	eb e2                	jmp    8048c78 <main+0x438>
 8048c96:	83 7c 24 30 00       	cmpl   $0x0,0x30(%esp)
 8048c9b:	0f 85 c7 00 00 00    	jne    8048d68 <main+0x528>
 8048ca1:	c7 04 24 10 af 04 08 	movl   $0x804af10,(%esp)
 8048ca8:	e8 a3 fa ff ff       	call   8048750 <puts@plt>
 8048cad:	a1 b0 d1 04 08       	mov    0x804d1b0,%eax
 8048cb2:	c7 44 24 04 2d af 04 	movl   $0x804af2d,0x4(%esp)
 8048cb9:	08 
 8048cba:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048cc1:	89 44 24 10          	mov    %eax,0x10(%esp)
 8048cc5:	dd 05 b8 d1 04 08    	fldl   0x804d1b8
 8048ccb:	dd 5c 24 08          	fstpl  0x8(%esp)
 8048ccf:	e8 2c fb ff ff       	call   8048800 <__printf_chk@plt>
 8048cd4:	a1 a0 d1 04 08       	mov    0x804d1a0,%eax
 8048cd9:	c7 44 24 04 43 af 04 	movl   $0x804af43,0x4(%esp)
 8048ce0:	08 
 8048ce1:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048ce8:	89 44 24 10          	mov    %eax,0x10(%esp)
 8048cec:	dd 05 a8 d1 04 08    	fldl   0x804d1a8
 8048cf2:	dd 5c 24 08          	fstpl  0x8(%esp)
 8048cf6:	e8 05 fb ff ff       	call   8048800 <__printf_chk@plt>
 8048cfb:	31 c0                	xor    %eax,%eax
 8048cfd:	8b 94 24 4c 01 00 00 	mov    0x14c(%esp),%edx
 8048d04:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8048d0b:	0f 85 10 01 00 00    	jne    8048e21 <main+0x5e1>
 8048d11:	8d 65 f4             	lea    -0xc(%ebp),%esp
 8048d14:	5b                   	pop    %ebx
 8048d15:	5e                   	pop    %esi
 8048d16:	5f                   	pop    %edi
 8048d17:	5d                   	pop    %ebp
 8048d18:	c3                   	ret    
 8048d19:	a1 30 e6 04 08       	mov    0x804e630,%eax
 8048d1e:	85 c0                	test   %eax,%eax
 8048d20:	0f 8e e9 fd ff ff    	jle    8048b0f <main+0x2cf>
 8048d26:	6b c0 34             	imul   $0x34,%eax,%eax
 8048d29:	bb 6c e6 04 08       	mov    $0x804e66c,%ebx
 8048d2e:	8d 3c 18             	lea    (%eax,%ebx,1),%edi
 8048d31:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8048d38:	89 74 24 04          	mov    %esi,0x4(%esp)
 8048d3c:	8b 03                	mov    (%ebx),%eax
 8048d3e:	89 04 24             	mov    %eax,(%esp)
 8048d41:	e8 6a f9 ff ff       	call   80486b0 <strcmp@plt>
 8048d46:	85 c0                	test   %eax,%eax
 8048d48:	75 06                	jne    8048d50 <main+0x510>
 8048d4a:	66 c7 43 04 01 00    	movw   $0x1,0x4(%ebx)
 8048d50:	83 c3 34             	add    $0x34,%ebx
 8048d53:	39 fb                	cmp    %edi,%ebx
 8048d55:	75 e1                	jne    8048d38 <main+0x4f8>
 8048d57:	e9 b3 fd ff ff       	jmp    8048b0f <main+0x2cf>
 8048d5c:	0f b6 5c 24 4c       	movzbl 0x4c(%esp),%ebx
 8048d61:	31 f6                	xor    %esi,%esi
 8048d63:	e9 0f fe ff ff       	jmp    8048b77 <main+0x337>
 8048d68:	dd 05 a8 d1 04 08    	fldl   0x804d1a8
 8048d6e:	dd 5c 24 10          	fstpl  0x10(%esp)
 8048d72:	dd 05 b8 d1 04 08    	fldl   0x804d1b8
 8048d78:	dd 5c 24 08          	fstpl  0x8(%esp)
 8048d7c:	c7 44 24 04 f8 ae 04 	movl   $0x804aef8,0x4(%esp)
 8048d83:	08 
 8048d84:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048d8b:	e8 70 fa ff ff       	call   8048800 <__printf_chk@plt>
 8048d90:	e9 66 ff ff ff       	jmp    8048cfb <main+0x4bb>
 8048d95:	8b 44 24 38          	mov    0x38(%esp),%eax
 8048d99:	89 04 24             	mov    %eax,(%esp)
 8048d9c:	e8 4f f9 ff ff       	call   80486f0 <fclose@plt>
 8048da1:	e9 6c fe ff ff       	jmp    8048c12 <main+0x3d2>
 8048da6:	8b 15 30 e6 04 08    	mov    0x804e630,%edx
 8048dac:	85 d2                	test   %edx,%edx
 8048dae:	7e 1c                	jle    8048dcc <main+0x58c>
 8048db0:	6b d2 34             	imul   $0x34,%edx,%edx
 8048db3:	b8 70 e6 04 08       	mov    $0x804e670,%eax
 8048db8:	01 c2                	add    %eax,%edx
 8048dba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048dc0:	66 c7 00 01 00       	movw   $0x1,(%eax)
 8048dc5:	83 c0 34             	add    $0x34,%eax
 8048dc8:	39 d0                	cmp    %edx,%eax
 8048dca:	75 f4                	jne    8048dc0 <main+0x580>
 8048dcc:	8b 15 c0 d1 04 08    	mov    0x804d1c0,%edx
 8048dd2:	85 d2                	test   %edx,%edx
 8048dd4:	0f 8e 38 fe ff ff    	jle    8048c12 <main+0x3d2>
 8048dda:	6b d2 34             	imul   $0x34,%edx,%edx
 8048ddd:	b8 10 d2 04 08       	mov    $0x804d210,%eax
 8048de2:	01 c2                	add    %eax,%edx
 8048de4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048de8:	66 c7 00 01 00       	movw   $0x1,(%eax)
 8048ded:	83 c0 34             	add    $0x34,%eax
 8048df0:	39 d0                	cmp    %edx,%eax
 8048df2:	75 f4                	jne    8048de8 <main+0x5a8>
 8048df4:	e9 19 fe ff ff       	jmp    8048c12 <main+0x3d2>
 8048df9:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048dfd:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048e01:	c7 44 24 04 5d ae 04 	movl   $0x804ae5d,0x4(%esp)
 8048e08:	08 
 8048e09:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048e10:	e8 eb f9 ff ff       	call   8048800 <__printf_chk@plt>
 8048e15:	c7 04 24 fb ff ff ff 	movl   $0xfffffffb,(%esp)
 8048e1c:	e8 4f f9 ff ff       	call   8048770 <exit@plt>
 8048e21:	e8 fa f8 ff ff       	call   8048720 <__stack_chk_fail@plt>
 8048e26:	8b 54 24 38          	mov    0x38(%esp),%edx
 8048e2a:	8b 02                	mov    (%edx),%eax
 8048e2c:	c7 44 24 04 b4 ad 04 	movl   $0x804adb4,0x4(%esp)
 8048e33:	08 
 8048e34:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048e3b:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048e3f:	e8 bc f9 ff ff       	call   8048800 <__printf_chk@plt>
 8048e44:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048e4b:	e8 20 f9 ff ff       	call   8048770 <exit@plt>
 8048e50:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8048e57:	e8 14 f9 ff ff       	call   8048770 <exit@plt>
 8048e5c:	89 5c 24 08          	mov    %ebx,0x8(%esp)
 8048e60:	eb 9f                	jmp    8048e01 <main+0x5c1>
 8048e62:	66 90                	xchg   %ax,%ax

08048e64 <_start>:
 8048e64:	31 ed                	xor    %ebp,%ebp
 8048e66:	5e                   	pop    %esi
 8048e67:	89 e1                	mov    %esp,%ecx
 8048e69:	83 e4 f0             	and    $0xfffffff0,%esp
 8048e6c:	50                   	push   %eax
 8048e6d:	54                   	push   %esp
 8048e6e:	52                   	push   %edx
 8048e6f:	68 90 aa 04 08       	push   $0x804aa90
 8048e74:	68 20 aa 04 08       	push   $0x804aa20
 8048e79:	51                   	push   %ecx
 8048e7a:	56                   	push   %esi
 8048e7b:	68 40 88 04 08       	push   $0x8048840
 8048e80:	e8 1b f9 ff ff       	call   80487a0 <__libc_start_main@plt>
 8048e85:	f4                   	hlt    
 8048e86:	66 90                	xchg   %ax,%ax
 8048e88:	66 90                	xchg   %ax,%ax
 8048e8a:	66 90                	xchg   %ax,%ax
 8048e8c:	66 90                	xchg   %ax,%ax
 8048e8e:	66 90                	xchg   %ax,%ax

08048e90 <deregister_tm_clones>:
 8048e90:	b8 7b d1 04 08       	mov    $0x804d17b,%eax
 8048e95:	2d 78 d1 04 08       	sub    $0x804d178,%eax
 8048e9a:	83 f8 06             	cmp    $0x6,%eax
 8048e9d:	77 02                	ja     8048ea1 <deregister_tm_clones+0x11>
 8048e9f:	f3 c3                	repz ret 
 8048ea1:	b8 00 00 00 00       	mov    $0x0,%eax
 8048ea6:	85 c0                	test   %eax,%eax
 8048ea8:	74 f5                	je     8048e9f <deregister_tm_clones+0xf>
 8048eaa:	55                   	push   %ebp
 8048eab:	89 e5                	mov    %esp,%ebp
 8048ead:	83 ec 18             	sub    $0x18,%esp
 8048eb0:	c7 04 24 78 d1 04 08 	movl   $0x804d178,(%esp)
 8048eb7:	ff d0                	call   *%eax
 8048eb9:	c9                   	leave  
 8048eba:	c3                   	ret    
 8048ebb:	90                   	nop
 8048ebc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08048ec0 <register_tm_clones>:
 8048ec0:	b8 78 d1 04 08       	mov    $0x804d178,%eax
 8048ec5:	2d 78 d1 04 08       	sub    $0x804d178,%eax
 8048eca:	c1 f8 02             	sar    $0x2,%eax
 8048ecd:	89 c2                	mov    %eax,%edx
 8048ecf:	c1 ea 1f             	shr    $0x1f,%edx
 8048ed2:	01 d0                	add    %edx,%eax
 8048ed4:	d1 f8                	sar    %eax
 8048ed6:	75 02                	jne    8048eda <register_tm_clones+0x1a>
 8048ed8:	f3 c3                	repz ret 
 8048eda:	ba 00 00 00 00       	mov    $0x0,%edx
 8048edf:	85 d2                	test   %edx,%edx
 8048ee1:	74 f5                	je     8048ed8 <register_tm_clones+0x18>
 8048ee3:	55                   	push   %ebp
 8048ee4:	89 e5                	mov    %esp,%ebp
 8048ee6:	83 ec 18             	sub    $0x18,%esp
 8048ee9:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048eed:	c7 04 24 78 d1 04 08 	movl   $0x804d178,(%esp)
 8048ef4:	ff d2                	call   *%edx
 8048ef6:	c9                   	leave  
 8048ef7:	c3                   	ret    
 8048ef8:	90                   	nop
 8048ef9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08048f00 <__do_global_dtors_aux>:
 8048f00:	80 3d 88 d1 04 08 00 	cmpb   $0x0,0x804d188
 8048f07:	75 13                	jne    8048f1c <__do_global_dtors_aux+0x1c>
 8048f09:	55                   	push   %ebp
 8048f0a:	89 e5                	mov    %esp,%ebp
 8048f0c:	83 ec 08             	sub    $0x8,%esp
 8048f0f:	e8 7c ff ff ff       	call   8048e90 <deregister_tm_clones>
 8048f14:	c6 05 88 d1 04 08 01 	movb   $0x1,0x804d188
 8048f1b:	c9                   	leave  
 8048f1c:	f3 c3                	repz ret 
 8048f1e:	66 90                	xchg   %ax,%ax

08048f20 <frame_dummy>:
 8048f20:	a1 08 cf 04 08       	mov    0x804cf08,%eax
 8048f25:	85 c0                	test   %eax,%eax
 8048f27:	74 1e                	je     8048f47 <frame_dummy+0x27>
 8048f29:	b8 00 00 00 00       	mov    $0x0,%eax
 8048f2e:	85 c0                	test   %eax,%eax
 8048f30:	74 15                	je     8048f47 <frame_dummy+0x27>
 8048f32:	55                   	push   %ebp
 8048f33:	89 e5                	mov    %esp,%ebp
 8048f35:	83 ec 18             	sub    $0x18,%esp
 8048f38:	c7 04 24 08 cf 04 08 	movl   $0x804cf08,(%esp)
 8048f3f:	ff d0                	call   *%eax
 8048f41:	c9                   	leave  
 8048f42:	e9 79 ff ff ff       	jmp    8048ec0 <register_tm_clones>
 8048f47:	e9 74 ff ff ff       	jmp    8048ec0 <register_tm_clones>
 8048f4c:	66 90                	xchg   %ax,%ax
 8048f4e:	66 90                	xchg   %ax,%ax

08048f50 <func_wrapper>:
 8048f50:	83 ec 1c             	sub    $0x1c,%esp
 8048f53:	8b 44 24 20          	mov    0x20(%esp),%eax
 8048f57:	8b 50 0c             	mov    0xc(%eax),%edx
 8048f5a:	89 54 24 08          	mov    %edx,0x8(%esp)
 8048f5e:	8b 50 08             	mov    0x8(%eax),%edx
 8048f61:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048f65:	8b 50 04             	mov    0x4(%eax),%edx
 8048f68:	8b 12                	mov    (%edx),%edx
 8048f6a:	89 14 24             	mov    %edx,(%esp)
 8048f6d:	ff 10                	call   *(%eax)
 8048f6f:	83 c4 1c             	add    $0x1c,%esp
 8048f72:	c3                   	ret    
 8048f73:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048f79:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048f80 <check_orig>:
 8048f80:	55                   	push   %ebp
 8048f81:	89 c5                	mov    %eax,%ebp
 8048f83:	57                   	push   %edi
 8048f84:	56                   	push   %esi
 8048f85:	53                   	push   %ebx
 8048f86:	83 ec 3c             	sub    $0x3c,%esp
 8048f89:	85 c0                	test   %eax,%eax
 8048f8b:	0f 8e f6 00 00 00    	jle    8049087 <check_orig+0x107>
 8048f91:	8d 04 40             	lea    (%eax,%eax,2),%eax
 8048f94:	8b 15 98 fa 04 08    	mov    0x804fa98,%edx
 8048f9a:	01 c0                	add    %eax,%eax
 8048f9c:	89 44 24 20          	mov    %eax,0x20(%esp)
 8048fa0:	8b 4c 24 20          	mov    0x20(%esp),%ecx
 8048fa4:	a1 94 fa 04 08       	mov    0x804fa94,%eax
 8048fa9:	83 c2 06             	add    $0x6,%edx
 8048fac:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
 8048fb3:	00 
 8048fb4:	83 e9 06             	sub    $0x6,%ecx
 8048fb7:	83 c0 06             	add    $0x6,%eax
 8048fba:	89 4c 24 24          	mov    %ecx,0x24(%esp)
 8048fbe:	89 6c 24 14          	mov    %ebp,0x14(%esp)
 8048fc2:	0f b7 6a fa          	movzwl -0x6(%edx),%ebp
 8048fc6:	66 39 68 fa          	cmp    %bp,-0x6(%eax)
 8048fca:	0f b7 70 fc          	movzwl -0x4(%eax),%esi
 8048fce:	0f b7 48 fe          	movzwl -0x2(%eax),%ecx
 8048fd2:	0f b7 7a fc          	movzwl -0x4(%edx),%edi
 8048fd6:	0f b7 5a fe          	movzwl -0x2(%edx),%ebx
 8048fda:	74 2c                	je     8049008 <check_orig+0x88>
 8048fdc:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)
 8048fe3:	e8 f8 f7 ff ff       	call   80487e0 <putchar@plt>
 8048fe8:	c7 04 24 c8 aa 04 08 	movl   $0x804aac8,(%esp)
 8048fef:	e8 5c f7 ff ff       	call   8048750 <puts@plt>
 8048ff4:	b8 01 00 00 00       	mov    $0x1,%eax
 8048ff9:	83 c4 3c             	add    $0x3c,%esp
 8048ffc:	5b                   	pop    %ebx
 8048ffd:	5e                   	pop    %esi
 8048ffe:	5f                   	pop    %edi
 8048fff:	5d                   	pop    %ebp
 8049000:	c3                   	ret    
 8049001:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8049008:	66 39 fe             	cmp    %di,%si
 804900b:	75 cf                	jne    8048fdc <check_orig+0x5c>
 804900d:	8b 74 24 24          	mov    0x24(%esp),%esi
 8049011:	89 d7                	mov    %edx,%edi
 8049013:	8b 6c 24 14          	mov    0x14(%esp),%ebp
 8049017:	89 44 24 18          	mov    %eax,0x18(%esp)
 804901b:	01 c6                	add    %eax,%esi
 804901d:	89 74 24 28          	mov    %esi,0x28(%esp)
 8049021:	89 c6                	mov    %eax,%esi
 8049023:	66 39 d9             	cmp    %bx,%cx
 8049026:	75 b4                	jne    8048fdc <check_orig+0x5c>
 8049028:	3b 74 24 28          	cmp    0x28(%esp),%esi
 804902c:	74 3a                	je     8049068 <check_orig+0xe8>
 804902e:	0f b7 47 02          	movzwl 0x2(%edi),%eax
 8049032:	0f b7 5e 02          	movzwl 0x2(%esi),%ebx
 8049036:	0f b7 4e 04          	movzwl 0x4(%esi),%ecx
 804903a:	66 89 44 24 2e       	mov    %ax,0x2e(%esp)
 804903f:	0f b7 07             	movzwl (%edi),%eax
 8049042:	66 39 06             	cmp    %ax,(%esi)
 8049045:	66 89 5c 24 2c       	mov    %bx,0x2c(%esp)
 804904a:	0f b7 5f 04          	movzwl 0x4(%edi),%ebx
 804904e:	75 8c                	jne    8048fdc <check_orig+0x5c>
 8049050:	0f b7 44 24 2e       	movzwl 0x2e(%esp),%eax
 8049055:	83 c6 06             	add    $0x6,%esi
 8049058:	83 c7 06             	add    $0x6,%edi
 804905b:	66 39 44 24 2c       	cmp    %ax,0x2c(%esp)
 8049060:	0f 85 76 ff ff ff    	jne    8048fdc <check_orig+0x5c>
 8049066:	eb bb                	jmp    8049023 <check_orig+0xa3>
 8049068:	8b 44 24 18          	mov    0x18(%esp),%eax
 804906c:	83 44 24 1c 01       	addl   $0x1,0x1c(%esp)
 8049071:	03 44 24 20          	add    0x20(%esp),%eax
 8049075:	03 54 24 20          	add    0x20(%esp),%edx
 8049079:	39 6c 24 1c          	cmp    %ebp,0x1c(%esp)
 804907d:	89 6c 24 14          	mov    %ebp,0x14(%esp)
 8049081:	0f 85 3b ff ff ff    	jne    8048fc2 <check_orig+0x42>
 8049087:	31 c0                	xor    %eax,%eax
 8049089:	e9 6b ff ff ff       	jmp    8048ff9 <check_orig+0x79>
 804908e:	66 90                	xchg   %ax,%ax

08049090 <check_rotate>:
 8049090:	55                   	push   %ebp
 8049091:	57                   	push   %edi
 8049092:	56                   	push   %esi
 8049093:	53                   	push   %ebx
 8049094:	bb 01 00 00 00       	mov    $0x1,%ebx
 8049099:	83 ec 6c             	sub    $0x6c,%esp
 804909c:	89 44 24 34          	mov    %eax,0x34(%esp)
 80490a0:	e8 db fe ff ff       	call   8048f80 <check_orig>
 80490a5:	85 c0                	test   %eax,%eax
 80490a7:	0f 85 47 01 00 00    	jne    80491f4 <check_rotate+0x164>
 80490ad:	8b 44 24 34          	mov    0x34(%esp),%eax
 80490b1:	85 c0                	test   %eax,%eax
 80490b3:	0f 8e 05 02 00 00    	jle    80492be <check_rotate+0x22e>
 80490b9:	8b 44 24 34          	mov    0x34(%esp),%eax
 80490bd:	8b 54 24 34          	mov    0x34(%esp),%edx
 80490c1:	8b 0d 94 fa 04 08    	mov    0x804fa94,%ecx
 80490c7:	6b 7c 24 34 fa       	imul   $0xfffffffa,0x34(%esp),%edi
 80490cc:	83 e8 01             	sub    $0x1,%eax
 80490cf:	89 44 24 5c          	mov    %eax,0x5c(%esp)
 80490d3:	8d 04 52             	lea    (%edx,%edx,2),%eax
 80490d6:	01 c0                	add    %eax,%eax
 80490d8:	89 44 24 58          	mov    %eax,0x58(%esp)
 80490dc:	8b 44 24 5c          	mov    0x5c(%esp),%eax
 80490e0:	89 4c 24 50          	mov    %ecx,0x50(%esp)
 80490e4:	89 7c 24 38          	mov    %edi,0x38(%esp)
 80490e8:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 80490ef:	00 
 80490f0:	0f af c2             	imul   %edx,%eax
 80490f3:	c7 44 24 40 00 00 00 	movl   $0x0,0x40(%esp)
 80490fa:	00 
 80490fb:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%esp)
 8049102:	00 
 8049103:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 804910a:	00 
 804910b:	8d 14 40             	lea    (%eax,%eax,2),%edx
 804910e:	a1 90 fa 04 08       	mov    0x804fa90,%eax
 8049113:	8d 04 50             	lea    (%eax,%edx,2),%eax
 8049116:	89 44 24 54          	mov    %eax,0x54(%esp)
 804911a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8049120:	31 ff                	xor    %edi,%edi
 8049122:	8b 6c 24 50          	mov    0x50(%esp),%ebp
 8049126:	8b 44 24 54          	mov    0x54(%esp),%eax
 804912a:	89 fe                	mov    %edi,%esi
 804912c:	eb 50                	jmp    804917e <check_rotate+0xee>
 804912e:	66 90                	xchg   %ax,%ax
 8049130:	0f b7 7c 24 2a       	movzwl 0x2a(%esp),%edi
 8049135:	83 c5 06             	add    $0x6,%ebp
 8049138:	66 89 4c 24 4a       	mov    %cx,0x4a(%esp)
 804913d:	0f b7 4c 24 28       	movzwl 0x28(%esp),%ecx
 8049142:	66 89 54 24 44       	mov    %dx,0x44(%esp)
 8049147:	8b 54 24 30          	mov    0x30(%esp),%edx
 804914b:	83 44 24 2c 01       	addl   $0x1,0x2c(%esp)
 8049150:	03 44 24 38          	add    0x38(%esp),%eax
 8049154:	66 89 7c 24 4e       	mov    %di,0x4e(%esp)
 8049159:	0f b7 7c 24 26       	movzwl 0x26(%esp),%edi
 804915e:	89 74 24 40          	mov    %esi,0x40(%esp)
 8049162:	83 c6 01             	add    $0x1,%esi
 8049165:	3b 74 24 34          	cmp    0x34(%esp),%esi
 8049169:	66 89 5c 24 4c       	mov    %bx,0x4c(%esp)
 804916e:	66 89 4c 24 48       	mov    %cx,0x48(%esp)
 8049173:	66 89 7c 24 46       	mov    %di,0x46(%esp)
 8049178:	89 54 24 3c          	mov    %edx,0x3c(%esp)
 804917c:	74 52                	je     80491d0 <check_rotate+0x140>
 804917e:	0f b7 4d 02          	movzwl 0x2(%ebp),%ecx
 8049182:	0f b7 7d 04          	movzwl 0x4(%ebp),%edi
 8049186:	0f b7 55 00          	movzwl 0x0(%ebp),%edx
 804918a:	0f b7 58 02          	movzwl 0x2(%eax),%ebx
 804918e:	66 89 4c 24 26       	mov    %cx,0x26(%esp)
 8049193:	0f b7 08             	movzwl (%eax),%ecx
 8049196:	66 89 7c 24 28       	mov    %di,0x28(%esp)
 804919b:	0f b7 78 04          	movzwl 0x4(%eax),%edi
 804919f:	66 39 ca             	cmp    %cx,%dx
 80491a2:	66 89 7c 24 2a       	mov    %di,0x2a(%esp)
 80491a7:	75 87                	jne    8049130 <check_rotate+0xa0>
 80491a9:	66 39 5c 24 26       	cmp    %bx,0x26(%esp)
 80491ae:	75 80                	jne    8049130 <check_rotate+0xa0>
 80491b0:	66 39 7c 24 28       	cmp    %di,0x28(%esp)
 80491b5:	0f 85 75 ff ff ff    	jne    8049130 <check_rotate+0xa0>
 80491bb:	83 c6 01             	add    $0x1,%esi
 80491be:	83 c5 06             	add    $0x6,%ebp
 80491c1:	03 44 24 38          	add    0x38(%esp),%eax
 80491c5:	3b 74 24 34          	cmp    0x34(%esp),%esi
 80491c9:	75 b3                	jne    804917e <check_rotate+0xee>
 80491cb:	90                   	nop
 80491cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80491d0:	83 44 24 30 01       	addl   $0x1,0x30(%esp)
 80491d5:	8b 44 24 58          	mov    0x58(%esp),%eax
 80491d9:	01 44 24 50          	add    %eax,0x50(%esp)
 80491dd:	83 44 24 54 06       	addl   $0x6,0x54(%esp)
 80491e2:	39 74 24 30          	cmp    %esi,0x30(%esp)
 80491e6:	0f 85 34 ff ff ff    	jne    8049120 <check_rotate+0x90>
 80491ec:	8b 5c 24 2c          	mov    0x2c(%esp),%ebx
 80491f0:	85 db                	test   %ebx,%ebx
 80491f2:	75 0a                	jne    80491fe <check_rotate+0x16e>
 80491f4:	83 c4 6c             	add    $0x6c,%esp
 80491f7:	89 d8                	mov    %ebx,%eax
 80491f9:	5b                   	pop    %ebx
 80491fa:	5e                   	pop    %esi
 80491fb:	5f                   	pop    %edi
 80491fc:	5d                   	pop    %ebp
 80491fd:	c3                   	ret    
 80491fe:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)
 8049205:	e8 d6 f5 ff ff       	call   80487e0 <putchar@plt>
 804920a:	8b 54 24 30          	mov    0x30(%esp),%edx
 804920e:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
 8049212:	c7 44 24 04 f0 aa 04 	movl   $0x804aaf0,0x4(%esp)
 8049219:	08 
 804921a:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049221:	89 54 24 08          	mov    %edx,0x8(%esp)
 8049225:	e8 d6 f5 ff ff       	call   8048800 <__printf_chk@plt>
 804922a:	c7 04 24 10 ab 04 08 	movl   $0x804ab10,(%esp)
 8049231:	e8 1a f5 ff ff       	call   8048750 <puts@plt>
 8049236:	0f b7 44 24 48       	movzwl 0x48(%esp),%eax
 804923b:	8b 7c 24 3c          	mov    0x3c(%esp),%edi
 804923f:	8b 4c 24 40          	mov    0x40(%esp),%ecx
 8049243:	c7 44 24 04 48 ab 04 	movl   $0x804ab48,0x4(%esp)
 804924a:	08 
 804924b:	89 44 24 18          	mov    %eax,0x18(%esp)
 804924f:	0f b7 44 24 46       	movzwl 0x46(%esp),%eax
 8049254:	89 7c 24 08          	mov    %edi,0x8(%esp)
 8049258:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 804925c:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049263:	89 44 24 14          	mov    %eax,0x14(%esp)
 8049267:	0f b7 44 24 44       	movzwl 0x44(%esp),%eax
 804926c:	89 44 24 10          	mov    %eax,0x10(%esp)
 8049270:	e8 8b f5 ff ff       	call   8048800 <__printf_chk@plt>
 8049275:	0f b7 44 24 4e       	movzwl 0x4e(%esp),%eax
 804927a:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 804927e:	c7 44 24 04 74 ab 04 	movl   $0x804ab74,0x4(%esp)
 8049285:	08 
 8049286:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804928d:	89 44 24 18          	mov    %eax,0x18(%esp)
 8049291:	0f b7 44 24 4c       	movzwl 0x4c(%esp),%eax
 8049296:	89 44 24 14          	mov    %eax,0x14(%esp)
 804929a:	0f b7 44 24 4a       	movzwl 0x4a(%esp),%eax
 804929f:	89 44 24 10          	mov    %eax,0x10(%esp)
 80492a3:	8b 44 24 5c          	mov    0x5c(%esp),%eax
 80492a7:	2b 44 24 40          	sub    0x40(%esp),%eax
 80492ab:	89 44 24 08          	mov    %eax,0x8(%esp)
 80492af:	e8 4c f5 ff ff       	call   8048800 <__printf_chk@plt>
 80492b4:	83 c4 6c             	add    $0x6c,%esp
 80492b7:	89 d8                	mov    %ebx,%eax
 80492b9:	5b                   	pop    %ebx
 80492ba:	5e                   	pop    %esi
 80492bb:	5f                   	pop    %edi
 80492bc:	5d                   	pop    %ebp
 80492bd:	c3                   	ret    
 80492be:	31 db                	xor    %ebx,%ebx
 80492c0:	e9 2f ff ff ff       	jmp    80491f4 <check_rotate+0x164>
 80492c5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80492c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080492d0 <check_smooth>:
 80492d0:	55                   	push   %ebp
 80492d1:	57                   	push   %edi
 80492d2:	56                   	push   %esi
 80492d3:	53                   	push   %ebx
 80492d4:	bb 01 00 00 00       	mov    $0x1,%ebx
 80492d9:	81 ec 9c 00 00 00    	sub    $0x9c,%esp
 80492df:	89 44 24 60          	mov    %eax,0x60(%esp)
 80492e3:	e8 98 fc ff ff       	call   8048f80 <check_orig>
 80492e8:	85 c0                	test   %eax,%eax
 80492ea:	0f 85 9b 02 00 00    	jne    804958b <check_smooth+0x2bb>
 80492f0:	8b 54 24 60          	mov    0x60(%esp),%edx
 80492f4:	85 d2                	test   %edx,%edx
 80492f6:	0f 8e af 02 00 00    	jle    80495ab <check_smooth+0x2db>
 80492fc:	8b 44 24 60          	mov    0x60(%esp),%eax
 8049300:	8b 54 24 60          	mov    0x60(%esp),%edx
 8049304:	8b 1d 94 fa 04 08    	mov    0x804fa94,%ebx
 804930a:	8b 0d 90 fa 04 08    	mov    0x804fa90,%ecx
 8049310:	83 e8 01             	sub    $0x1,%eax
 8049313:	89 44 24 54          	mov    %eax,0x54(%esp)
 8049317:	8d 04 52             	lea    (%edx,%edx,2),%eax
 804931a:	01 c0                	add    %eax,%eax
 804931c:	83 c3 06             	add    $0x6,%ebx
 804931f:	89 44 24 38          	mov    %eax,0x38(%esp)
 8049323:	89 8c 24 8c 00 00 00 	mov    %ecx,0x8c(%esp)
 804932a:	c7 44 24 64 00 00 00 	movl   $0x0,0x64(%esp)
 8049331:	00 
 8049332:	c7 44 24 6c 00 00 00 	movl   $0x0,0x6c(%esp)
 8049339:	00 
 804933a:	c7 44 24 68 00 00 00 	movl   $0x0,0x68(%esp)
 8049341:	00 
 8049342:	c7 44 24 58 00 00 00 	movl   $0x0,0x58(%esp)
 8049349:	00 
 804934a:	89 9c 24 84 00 00 00 	mov    %ebx,0x84(%esp)
 8049351:	8b 5c 24 64          	mov    0x64(%esp),%ebx
 8049355:	8b 4c 24 54          	mov    0x54(%esp),%ecx
 8049359:	8b 44 24 64          	mov    0x64(%esp),%eax
 804935d:	66 89 6c 24 78       	mov    %bp,0x78(%esp)
 8049362:	83 c3 01             	add    $0x1,%ebx
 8049365:	39 cb                	cmp    %ecx,%ebx
 8049367:	0f 4e cb             	cmovle %ebx,%ecx
 804936a:	83 e8 01             	sub    $0x1,%eax
 804936d:	83 7c 24 64 02       	cmpl   $0x2,0x64(%esp)
 8049372:	89 4c 24 70          	mov    %ecx,0x70(%esp)
 8049376:	8b 8c 24 8c 00 00 00 	mov    0x8c(%esp),%ecx
 804937d:	89 9c 24 88 00 00 00 	mov    %ebx,0x88(%esp)
 8049384:	bb 00 00 00 00       	mov    $0x0,%ebx
 8049389:	0f 4d d8             	cmovge %eax,%ebx
 804938c:	8b 44 24 60          	mov    0x60(%esp),%eax
 8049390:	89 5c 24 5c          	mov    %ebx,0x5c(%esp)
 8049394:	89 4c 24 4c          	mov    %ecx,0x4c(%esp)
 8049398:	8b 4c 24 70          	mov    0x70(%esp),%ecx
 804939c:	66 89 74 24 76       	mov    %si,0x76(%esp)
 80493a1:	0f af c3             	imul   %ebx,%eax
 80493a4:	66 89 7c 24 74       	mov    %di,0x74(%esp)
 80493a9:	83 c1 01             	add    $0x1,%ecx
 80493ac:	c7 44 24 50 00 00 00 	movl   $0x0,0x50(%esp)
 80493b3:	00 
 80493b4:	89 84 24 80 00 00 00 	mov    %eax,0x80(%esp)
 80493bb:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 80493c2:	00 
 80493c3:	89 4c 24 3c          	mov    %ecx,0x3c(%esp)
 80493c7:	8b 5c 24 50          	mov    0x50(%esp),%ebx
 80493cb:	8b 4c 24 54          	mov    0x54(%esp),%ecx
 80493cf:	83 c3 01             	add    $0x1,%ebx
 80493d2:	39 cb                	cmp    %ecx,%ebx
 80493d4:	0f 4e cb             	cmovle %ebx,%ecx
 80493d7:	89 5c 24 48          	mov    %ebx,0x48(%esp)
 80493db:	8b 5c 24 5c          	mov    0x5c(%esp),%ebx
 80493df:	39 5c 24 70          	cmp    %ebx,0x70(%esp)
 80493e3:	89 4c 24 34          	mov    %ecx,0x34(%esp)
 80493e7:	0f 8c ab 01 00 00    	jl     8049598 <check_smooth+0x2c8>
 80493ed:	8b 84 24 80 00 00 00 	mov    0x80(%esp),%eax
 80493f4:	31 f6                	xor    %esi,%esi
 80493f6:	8b 5c 24 30          	mov    0x30(%esp),%ebx
 80493fa:	6b 54 24 34 fa       	imul   $0xfffffffa,0x34(%esp),%edx
 80493ff:	8b 6c 24 5c          	mov    0x5c(%esp),%ebp
 8049403:	01 c8                	add    %ecx,%eax
 8049405:	8b 8c 24 84 00 00 00 	mov    0x84(%esp),%ecx
 804940c:	8d 04 40             	lea    (%eax,%eax,2),%eax
 804940f:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 8049416:	00 
 8049417:	8d 3c 41             	lea    (%ecx,%eax,2),%edi
 804941a:	31 c0                	xor    %eax,%eax
 804941c:	8d 0c 5b             	lea    (%ebx,%ebx,2),%ecx
 804941f:	31 db                	xor    %ebx,%ebx
 8049421:	8d 54 4a fa          	lea    -0x6(%edx,%ecx,2),%edx
 8049425:	89 54 24 40          	mov    %edx,0x40(%esp)
 8049429:	8b 54 24 34          	mov    0x34(%esp),%edx
 804942d:	2b 54 24 30          	sub    0x30(%esp),%edx
 8049431:	89 54 24 44          	mov    %edx,0x44(%esp)
 8049435:	8d 76 00             	lea    0x0(%esi),%esi
 8049438:	8b 4c 24 30          	mov    0x30(%esp),%ecx
 804943c:	39 4c 24 34          	cmp    %ecx,0x34(%esp)
 8049440:	7c 2e                	jl     8049470 <check_smooth+0x1a0>
 8049442:	8b 54 24 40          	mov    0x40(%esp),%edx
 8049446:	01 fa                	add    %edi,%edx
 8049448:	0f b7 0a             	movzwl (%edx),%ecx
 804944b:	01 c8                	add    %ecx,%eax
 804944d:	0f b7 4a 02          	movzwl 0x2(%edx),%ecx
 8049451:	01 ce                	add    %ecx,%esi
 8049453:	0f b7 4a 04          	movzwl 0x4(%edx),%ecx
 8049457:	83 c2 06             	add    $0x6,%edx
 804945a:	01 cb                	add    %ecx,%ebx
 804945c:	39 fa                	cmp    %edi,%edx
 804945e:	75 e8                	jne    8049448 <check_smooth+0x178>
 8049460:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 8049464:	8b 4c 24 44          	mov    0x44(%esp),%ecx
 8049468:	8d 54 0a 01          	lea    0x1(%edx,%ecx,1),%edx
 804946c:	89 54 24 2c          	mov    %edx,0x2c(%esp)
 8049470:	83 c5 01             	add    $0x1,%ebp
 8049473:	03 7c 24 38          	add    0x38(%esp),%edi
 8049477:	3b 6c 24 3c          	cmp    0x3c(%esp),%ebp
 804947b:	75 bb                	jne    8049438 <check_smooth+0x168>
 804947d:	89 c2                	mov    %eax,%edx
 804947f:	c1 fa 1f             	sar    $0x1f,%edx
 8049482:	f7 7c 24 2c          	idivl  0x2c(%esp)
 8049486:	89 f2                	mov    %esi,%edx
 8049488:	c1 fa 1f             	sar    $0x1f,%edx
 804948b:	89 c1                	mov    %eax,%ecx
 804948d:	89 c7                	mov    %eax,%edi
 804948f:	89 f0                	mov    %esi,%eax
 8049491:	f7 7c 24 2c          	idivl  0x2c(%esp)
 8049495:	89 da                	mov    %ebx,%edx
 8049497:	c1 fa 1f             	sar    $0x1f,%edx
 804949a:	89 44 24 30          	mov    %eax,0x30(%esp)
 804949e:	89 c6                	mov    %eax,%esi
 80494a0:	89 d8                	mov    %ebx,%eax
 80494a2:	f7 7c 24 2c          	idivl  0x2c(%esp)
 80494a6:	8b 5c 24 4c          	mov    0x4c(%esp),%ebx
 80494aa:	0f b7 13             	movzwl (%ebx),%edx
 80494ad:	66 39 ca             	cmp    %cx,%dx
 80494b0:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 80494b4:	0f b7 e8             	movzwl %ax,%ebp
 80494b7:	0f b7 43 02          	movzwl 0x2(%ebx),%eax
 80494bb:	0f b7 5b 04          	movzwl 0x4(%ebx),%ebx
 80494bf:	66 89 5c 24 34       	mov    %bx,0x34(%esp)
 80494c4:	74 6c                	je     8049532 <check_smooth+0x262>
 80494c6:	0f b7 5c 24 34       	movzwl 0x34(%esp),%ebx
 80494cb:	66 89 44 24 7c       	mov    %ax,0x7c(%esp)
 80494d0:	8b 4c 24 50          	mov    0x50(%esp),%ecx
 80494d4:	8b 44 24 60          	mov    0x60(%esp),%eax
 80494d8:	83 44 24 58 01       	addl   $0x1,0x58(%esp)
 80494dd:	83 44 24 4c 06       	addl   $0x6,0x4c(%esp)
 80494e2:	39 44 24 48          	cmp    %eax,0x48(%esp)
 80494e6:	66 89 5c 24 7e       	mov    %bx,0x7e(%esp)
 80494eb:	8b 5c 24 64          	mov    0x64(%esp),%ebx
 80494ef:	66 89 54 24 7a       	mov    %dx,0x7a(%esp)
 80494f4:	89 4c 24 6c          	mov    %ecx,0x6c(%esp)
 80494f8:	89 5c 24 68          	mov    %ebx,0x68(%esp)
 80494fc:	74 63                	je     8049561 <check_smooth+0x291>
 80494fe:	8b 44 24 48          	mov    0x48(%esp),%eax
 8049502:	ba 00 00 00 00       	mov    $0x0,%edx
 8049507:	8b 4c 24 48          	mov    0x48(%esp),%ecx
 804950b:	66 89 6c 24 78       	mov    %bp,0x78(%esp)
 8049510:	66 89 74 24 76       	mov    %si,0x76(%esp)
 8049515:	83 e8 01             	sub    $0x1,%eax
 8049518:	83 7c 24 48 02       	cmpl   $0x2,0x48(%esp)
 804951d:	66 89 7c 24 74       	mov    %di,0x74(%esp)
 8049522:	89 4c 24 50          	mov    %ecx,0x50(%esp)
 8049526:	0f 4d d0             	cmovge %eax,%edx
 8049529:	89 54 24 30          	mov    %edx,0x30(%esp)
 804952d:	e9 95 fe ff ff       	jmp    80493c7 <check_smooth+0xf7>
 8049532:	66 3b 44 24 30       	cmp    0x30(%esp),%ax
 8049537:	75 8d                	jne    80494c6 <check_smooth+0x1f6>
 8049539:	0f b7 4c 24 2c       	movzwl 0x2c(%esp),%ecx
 804953e:	66 39 cb             	cmp    %cx,%bx
 8049541:	75 83                	jne    80494c6 <check_smooth+0x1f6>
 8049543:	8b 44 24 60          	mov    0x60(%esp),%eax
 8049547:	83 44 24 4c 06       	addl   $0x6,0x4c(%esp)
 804954c:	39 44 24 48          	cmp    %eax,0x48(%esp)
 8049550:	0f b7 6c 24 78       	movzwl 0x78(%esp),%ebp
 8049555:	0f b7 74 24 76       	movzwl 0x76(%esp),%esi
 804955a:	0f b7 7c 24 74       	movzwl 0x74(%esp),%edi
 804955f:	75 9d                	jne    80494fe <check_smooth+0x22e>
 8049561:	8b 4c 24 38          	mov    0x38(%esp),%ecx
 8049565:	01 8c 24 8c 00 00 00 	add    %ecx,0x8c(%esp)
 804956c:	8b 9c 24 88 00 00 00 	mov    0x88(%esp),%ebx
 8049573:	8b 4c 24 48          	mov    0x48(%esp),%ecx
 8049577:	89 5c 24 64          	mov    %ebx,0x64(%esp)
 804957b:	39 cb                	cmp    %ecx,%ebx
 804957d:	0f 85 ce fd ff ff    	jne    8049351 <check_smooth+0x81>
 8049583:	8b 5c 24 58          	mov    0x58(%esp),%ebx
 8049587:	85 db                	test   %ebx,%ebx
 8049589:	75 2f                	jne    80495ba <check_smooth+0x2ea>
 804958b:	81 c4 9c 00 00 00    	add    $0x9c,%esp
 8049591:	89 d8                	mov    %ebx,%eax
 8049593:	5b                   	pop    %ebx
 8049594:	5e                   	pop    %esi
 8049595:	5f                   	pop    %edi
 8049596:	5d                   	pop    %ebp
 8049597:	c3                   	ret    
 8049598:	31 db                	xor    %ebx,%ebx
 804959a:	31 f6                	xor    %esi,%esi
 804959c:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 80495a3:	00 
 80495a4:	31 c0                	xor    %eax,%eax
 80495a6:	e9 d2 fe ff ff       	jmp    804947d <check_smooth+0x1ad>
 80495ab:	81 c4 9c 00 00 00    	add    $0x9c,%esp
 80495b1:	31 db                	xor    %ebx,%ebx
 80495b3:	89 d8                	mov    %ebx,%eax
 80495b5:	5b                   	pop    %ebx
 80495b6:	5e                   	pop    %esi
 80495b7:	5f                   	pop    %edi
 80495b8:	5d                   	pop    %ebp
 80495b9:	c3                   	ret    
 80495ba:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)
 80495c1:	e8 1a f2 ff ff       	call   80487e0 <putchar@plt>
 80495c6:	8b 8c 24 88 00 00 00 	mov    0x88(%esp),%ecx
 80495cd:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
 80495d1:	c7 44 24 04 f0 aa 04 	movl   $0x804aaf0,0x4(%esp)
 80495d8:	08 
 80495d9:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80495e0:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 80495e4:	e8 17 f2 ff ff       	call   8048800 <__printf_chk@plt>
 80495e9:	c7 04 24 e6 ad 04 08 	movl   $0x804ade6,(%esp)
 80495f0:	e8 5b f1 ff ff       	call   8048750 <puts@plt>
 80495f5:	0f b7 44 24 7e       	movzwl 0x7e(%esp),%eax
 80495fa:	8b 4c 24 6c          	mov    0x6c(%esp),%ecx
 80495fe:	c7 44 24 04 a0 ab 04 	movl   $0x804aba0,0x4(%esp)
 8049605:	08 
 8049606:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804960d:	89 44 24 18          	mov    %eax,0x18(%esp)
 8049611:	0f b7 44 24 7c       	movzwl 0x7c(%esp),%eax
 8049616:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 804961a:	8b 4c 24 68          	mov    0x68(%esp),%ecx
 804961e:	89 44 24 14          	mov    %eax,0x14(%esp)
 8049622:	0f b7 44 24 7a       	movzwl 0x7a(%esp),%eax
 8049627:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 804962b:	89 44 24 10          	mov    %eax,0x10(%esp)
 804962f:	e8 cc f1 ff ff       	call   8048800 <__printf_chk@plt>
 8049634:	8b 4c 24 6c          	mov    0x6c(%esp),%ecx
 8049638:	0f b7 c6             	movzwl %si,%eax
 804963b:	89 44 24 14          	mov    %eax,0x14(%esp)
 804963f:	0f b7 c7             	movzwl %di,%eax
 8049642:	89 6c 24 18          	mov    %ebp,0x18(%esp)
 8049646:	89 44 24 10          	mov    %eax,0x10(%esp)
 804964a:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 804964e:	8b 4c 24 68          	mov    0x68(%esp),%ecx
 8049652:	c7 44 24 04 d4 ab 04 	movl   $0x804abd4,0x4(%esp)
 8049659:	08 
 804965a:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049661:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 8049665:	e8 96 f1 ff ff       	call   8048800 <__printf_chk@plt>
 804966a:	81 c4 9c 00 00 00    	add    $0x9c,%esp
 8049670:	89 d8                	mov    %ebx,%eax
 8049672:	5b                   	pop    %ebx
 8049673:	5e                   	pop    %esi
 8049674:	5f                   	pop    %edi
 8049675:	5d                   	pop    %ebp
 8049676:	c3                   	ret    
 8049677:	89 f6                	mov    %esi,%esi
 8049679:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08049680 <create>:
 8049680:	55                   	push   %ebp
 8049681:	57                   	push   %edi
 8049682:	56                   	push   %esi
 8049683:	53                   	push   %ebx
 8049684:	83 ec 2c             	sub    $0x2c,%esp
 8049687:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 804968b:	0f af c0             	imul   %eax,%eax
 804968e:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
 8049692:	c7 05 94 fa 04 08 a0 	movl   $0x804faa0,0x804fa94
 8049699:	fa 04 08 
 804969c:	8d 2c 40             	lea    (%eax,%eax,2),%ebp
 804969f:	01 ed                	add    %ebp,%ebp
 80496a1:	8d 85 a0 fa 04 08    	lea    0x804faa0(%ebp),%eax
 80496a7:	01 c5                	add    %eax,%ebp
 80496a9:	85 c9                	test   %ecx,%ecx
 80496ab:	a3 90 fa 04 08       	mov    %eax,0x804fa90
 80496b0:	89 2d 98 fa 04 08    	mov    %ebp,0x804fa98
 80496b6:	0f 8e d1 00 00 00    	jle    804978d <create+0x10d>
 80496bc:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
 80496c0:	bf a0 fa 04 08       	mov    $0x804faa0,%edi
 80496c5:	89 6c 24 10          	mov    %ebp,0x10(%esp)
 80496c9:	89 44 24 14          	mov    %eax,0x14(%esp)
 80496cd:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80496d4:	00 
 80496d5:	8d 14 49             	lea    (%ecx,%ecx,2),%edx
 80496d8:	01 d2                	add    %edx,%edx
 80496da:	89 54 24 18          	mov    %edx,0x18(%esp)
 80496de:	66 90                	xchg   %ax,%ax
 80496e0:	8b 6c 24 10          	mov    0x10(%esp),%ebp
 80496e4:	89 fb                	mov    %edi,%ebx
 80496e6:	8b 74 24 14          	mov    0x14(%esp),%esi
 80496ea:	03 7c 24 18          	add    0x18(%esp),%edi
 80496ee:	66 90                	xchg   %ax,%ax
 80496f0:	e8 fb f0 ff ff       	call   80487f0 <rand@plt>
 80496f5:	89 c2                	mov    %eax,%edx
 80496f7:	c1 fa 1f             	sar    $0x1f,%edx
 80496fa:	c1 ea 10             	shr    $0x10,%edx
 80496fd:	01 d0                	add    %edx,%eax
 80496ff:	25 ff ff 00 00       	and    $0xffff,%eax
 8049704:	29 d0                	sub    %edx,%eax
 8049706:	66 89 03             	mov    %ax,(%ebx)
 8049709:	e8 e2 f0 ff ff       	call   80487f0 <rand@plt>
 804970e:	89 c2                	mov    %eax,%edx
 8049710:	c1 fa 1f             	sar    $0x1f,%edx
 8049713:	c1 ea 10             	shr    $0x10,%edx
 8049716:	01 d0                	add    %edx,%eax
 8049718:	25 ff ff 00 00       	and    $0xffff,%eax
 804971d:	29 d0                	sub    %edx,%eax
 804971f:	66 89 43 02          	mov    %ax,0x2(%ebx)
 8049723:	e8 c8 f0 ff ff       	call   80487f0 <rand@plt>
 8049728:	89 c2                	mov    %eax,%edx
 804972a:	c1 fa 1f             	sar    $0x1f,%edx
 804972d:	c1 ea 10             	shr    $0x10,%edx
 8049730:	01 d0                	add    %edx,%eax
 8049732:	25 ff ff 00 00       	and    $0xffff,%eax
 8049737:	29 d0                	sub    %edx,%eax
 8049739:	0f b7 13             	movzwl (%ebx),%edx
 804973c:	66 89 43 04          	mov    %ax,0x4(%ebx)
 8049740:	66 89 55 00          	mov    %dx,0x0(%ebp)
 8049744:	0f b7 53 02          	movzwl 0x2(%ebx),%edx
 8049748:	83 c3 06             	add    $0x6,%ebx
 804974b:	66 89 45 04          	mov    %ax,0x4(%ebp)
 804974f:	66 89 55 02          	mov    %dx,0x2(%ebp)
 8049753:	83 c5 06             	add    $0x6,%ebp
 8049756:	66 c7 06 00 00       	movw   $0x0,(%esi)
 804975b:	66 c7 46 02 00 00    	movw   $0x0,0x2(%esi)
 8049761:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)
 8049767:	83 c6 06             	add    $0x6,%esi
 804976a:	39 fb                	cmp    %edi,%ebx
 804976c:	75 82                	jne    80496f0 <create+0x70>
 804976e:	8b 4c 24 18          	mov    0x18(%esp),%ecx
 8049772:	83 44 24 0c 01       	addl   $0x1,0xc(%esp)
 8049777:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 804977b:	01 4c 24 10          	add    %ecx,0x10(%esp)
 804977f:	01 4c 24 14          	add    %ecx,0x14(%esp)
 8049783:	39 44 24 0c          	cmp    %eax,0xc(%esp)
 8049787:	0f 85 53 ff ff ff    	jne    80496e0 <create+0x60>
 804978d:	83 c4 2c             	add    $0x2c,%esp
 8049790:	5b                   	pop    %ebx
 8049791:	5e                   	pop    %esi
 8049792:	5f                   	pop    %edi
 8049793:	5d                   	pop    %ebp
 8049794:	c3                   	ret    
 8049795:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8049799:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080497a0 <add_smooth_function>:
 80497a0:	8b 15 c0 d1 04 08    	mov    0x804d1c0,%edx
 80497a6:	8b 4c 24 04          	mov    0x4(%esp),%ecx
 80497aa:	6b c2 34             	imul   $0x34,%edx,%eax
 80497ad:	83 c2 01             	add    $0x1,%edx
 80497b0:	89 15 c0 d1 04 08    	mov    %edx,0x804d1c0
 80497b6:	89 88 e0 d1 04 08    	mov    %ecx,0x804d1e0(%eax)
 80497bc:	8b 4c 24 08          	mov    0x8(%esp),%ecx
 80497c0:	66 c7 80 10 d2 04 08 	movw   $0x0,0x804d210(%eax)
 80497c7:	00 00 
 80497c9:	89 88 0c d2 04 08    	mov    %ecx,0x804d20c(%eax)
 80497cf:	c3                   	ret    

080497d0 <add_rotate_function>:
 80497d0:	8b 15 30 e6 04 08    	mov    0x804e630,%edx
 80497d6:	8b 4c 24 04          	mov    0x4(%esp),%ecx
 80497da:	6b c2 34             	imul   $0x34,%edx,%eax
 80497dd:	83 c2 01             	add    $0x1,%edx
 80497e0:	89 15 30 e6 04 08    	mov    %edx,0x804e630
 80497e6:	89 88 40 e6 04 08    	mov    %ecx,0x804e640(%eax)
 80497ec:	8b 4c 24 08          	mov    0x8(%esp),%ecx
 80497f0:	66 c7 80 70 e6 04 08 	movw   $0x0,0x804e670(%eax)
 80497f7:	00 00 
 80497f9:	89 88 6c e6 04 08    	mov    %ecx,0x804e66c(%eax)
 80497ff:	c3                   	ret    

08049800 <run_rotate_benchmark>:
 8049800:	83 ec 1c             	sub    $0x1c,%esp
 8049803:	8b 15 90 fa 04 08    	mov    0x804fa90,%edx
 8049809:	6b 44 24 20 34       	imul   $0x34,0x20(%esp),%eax
 804980e:	89 54 24 08          	mov    %edx,0x8(%esp)
 8049812:	8b 15 94 fa 04 08    	mov    0x804fa94,%edx
 8049818:	89 54 24 04          	mov    %edx,0x4(%esp)
 804981c:	8b 54 24 24          	mov    0x24(%esp),%edx
 8049820:	89 14 24             	mov    %edx,(%esp)
 8049823:	ff 90 40 e6 04 08    	call   *0x804e640(%eax)
 8049829:	83 c4 1c             	add    $0x1c,%esp
 804982c:	c3                   	ret    
 804982d:	8d 76 00             	lea    0x0(%esi),%esi

08049830 <test_rotate>:
 8049830:	55                   	push   %ebp
 8049831:	57                   	push   %edi
 8049832:	56                   	push   %esi
 8049833:	53                   	push   %ebx
 8049834:	31 db                	xor    %ebx,%ebx
 8049836:	83 ec 5c             	sub    $0x5c,%esp
 8049839:	6b 74 24 70 34       	imul   $0x34,0x70(%esp),%esi
 804983e:	8b 86 6c e6 04 08    	mov    0x804e66c(%esi),%eax
 8049844:	89 f7                	mov    %esi,%edi
 8049846:	89 44 24 28          	mov    %eax,0x28(%esp)
 804984a:	b8 60 00 00 00       	mov    $0x60,%eax
 804984f:	e8 2c fe ff ff       	call   8049680 <create>
 8049854:	a1 90 fa 04 08       	mov    0x804fa90,%eax
 8049859:	c7 04 24 60 00 00 00 	movl   $0x60,(%esp)
 8049860:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049864:	a1 94 fa 04 08       	mov    0x804fa94,%eax
 8049869:	89 44 24 04          	mov    %eax,0x4(%esp)
 804986d:	ff 97 40 e6 04 08    	call   *0x804e640(%edi)
 8049873:	b8 60 00 00 00       	mov    $0x60,%eax
 8049878:	e8 13 f8 ff ff       	call   8049090 <check_rotate>
 804987d:	85 c0                	test   %eax,%eax
 804987f:	0f 85 6b 02 00 00    	jne    8049af0 <test_rotate+0x2c0>
 8049885:	8b 2c 9d a4 af 04 08 	mov    0x804afa4(,%ebx,4),%ebp
 804988c:	89 e8                	mov    %ebp,%eax
 804988e:	e8 ed fd ff ff       	call   8049680 <create>
 8049893:	a1 90 fa 04 08       	mov    0x804fa90,%eax
 8049898:	89 2c 24             	mov    %ebp,(%esp)
 804989b:	89 44 24 08          	mov    %eax,0x8(%esp)
 804989f:	a1 94 fa 04 08       	mov    0x804fa94,%eax
 80498a4:	89 44 24 04          	mov    %eax,0x4(%esp)
 80498a8:	ff 97 40 e6 04 08    	call   *0x804e640(%edi)
 80498ae:	89 e8                	mov    %ebp,%eax
 80498b0:	e8 db f7 ff ff       	call   8049090 <check_rotate>
 80498b5:	85 c0                	test   %eax,%eax
 80498b7:	0f 85 63 02 00 00    	jne    8049b20 <test_rotate+0x2f0>
 80498bd:	8b 87 40 e6 04 08    	mov    0x804e640(%edi),%eax
 80498c3:	89 6c 24 2c          	mov    %ebp,0x2c(%esp)
 80498c7:	db 44 24 2c          	fildl  0x2c(%esp)
 80498cb:	d8 c8                	fmul   %st(0),%st
 80498cd:	89 44 24 40          	mov    %eax,0x40(%esp)
 80498d1:	8d 44 24 3c          	lea    0x3c(%esp),%eax
 80498d5:	89 44 24 44          	mov    %eax,0x44(%esp)
 80498d9:	a1 94 fa 04 08       	mov    0x804fa94,%eax
 80498de:	89 6c 24 3c          	mov    %ebp,0x3c(%esp)
 80498e2:	dd 5c 24 10          	fstpl  0x10(%esp)
 80498e6:	89 44 24 48          	mov    %eax,0x48(%esp)
 80498ea:	a1 90 fa 04 08       	mov    0x804fa90,%eax
 80498ef:	89 44 24 4c          	mov    %eax,0x4c(%esp)
 80498f3:	89 e8                	mov    %ebp,%eax
 80498f5:	e8 86 fd ff ff       	call   8049680 <create>
 80498fa:	8d 44 24 40          	lea    0x40(%esp),%eax
 80498fe:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049902:	c7 04 24 50 8f 04 08 	movl   $0x8048f50,(%esp)
 8049909:	e8 72 0c 00 00       	call   804a580 <fcyc_v>
 804990e:	dd 44 24 10          	fldl   0x10(%esp)
 8049912:	de f9                	fdivrp %st,%st(1)
 8049914:	dd 9c de 44 e6 04 08 	fstpl  0x804e644(%esi,%ebx,8)
 804991b:	83 c3 01             	add    $0x1,%ebx
 804991e:	83 fb 05             	cmp    $0x5,%ebx
 8049921:	0f 85 23 ff ff ff    	jne    804984a <test_rotate+0x1a>
 8049927:	8b 44 24 28          	mov    0x28(%esp),%eax
 804992b:	30 db                	xor    %bl,%bl
 804992d:	c7 44 24 04 ed ad 04 	movl   $0x804aded,0x4(%esp)
 8049934:	08 
 8049935:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804993c:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049940:	e8 bb ee ff ff       	call   8048800 <__printf_chk@plt>
 8049945:	c7 44 24 04 04 ae 04 	movl   $0x804ae04,0x4(%esp)
 804994c:	08 
 804994d:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049954:	e8 a7 ee ff ff       	call   8048800 <__printf_chk@plt>
 8049959:	8b 04 9d a4 af 04 08 	mov    0x804afa4(,%ebx,4),%eax
 8049960:	83 c3 01             	add    $0x1,%ebx
 8049963:	c7 44 24 04 09 ae 04 	movl   $0x804ae09,0x4(%esp)
 804996a:	08 
 804996b:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049972:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049976:	e8 85 ee ff ff       	call   8048800 <__printf_chk@plt>
 804997b:	83 fb 05             	cmp    $0x5,%ebx
 804997e:	75 d9                	jne    8049959 <test_rotate+0x129>
 8049980:	c7 04 24 0d ae 04 08 	movl   $0x804ae0d,(%esp)
 8049987:	30 db                	xor    %bl,%bl
 8049989:	e8 c2 ed ff ff       	call   8048750 <puts@plt>
 804998e:	c7 44 24 04 13 ae 04 	movl   $0x804ae13,0x4(%esp)
 8049995:	08 
 8049996:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804999d:	e8 5e ee ff ff       	call   8048800 <__printf_chk@plt>
 80499a2:	dd 84 de 44 e6 04 08 	fldl   0x804e644(%esi,%ebx,8)
 80499a9:	83 c3 01             	add    $0x1,%ebx
 80499ac:	dd 5c 24 08          	fstpl  0x8(%esp)
 80499b0:	c7 44 24 04 1d ae 04 	movl   $0x804ae1d,0x4(%esp)
 80499b7:	08 
 80499b8:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80499bf:	e8 3c ee ff ff       	call   8048800 <__printf_chk@plt>
 80499c4:	83 fb 05             	cmp    $0x5,%ebx
 80499c7:	75 d9                	jne    80499a2 <test_rotate+0x172>
 80499c9:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)
 80499d0:	30 db                	xor    %bl,%bl
 80499d2:	e8 09 ee ff ff       	call   80487e0 <putchar@plt>
 80499d7:	c7 44 24 04 23 ae 04 	movl   $0x804ae23,0x4(%esp)
 80499de:	08 
 80499df:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80499e6:	e8 15 ee ff ff       	call   8048800 <__printf_chk@plt>
 80499eb:	dd 04 dd c0 af 04 08 	fldl   0x804afc0(,%ebx,8)
 80499f2:	83 c3 01             	add    $0x1,%ebx
 80499f5:	dd 5c 24 08          	fstpl  0x8(%esp)
 80499f9:	c7 44 24 04 1d ae 04 	movl   $0x804ae1d,0x4(%esp)
 8049a00:	08 
 8049a01:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049a08:	e8 f3 ed ff ff       	call   8048800 <__printf_chk@plt>
 8049a0d:	83 fb 05             	cmp    $0x5,%ebx
 8049a10:	75 d9                	jne    80499eb <test_rotate+0x1bb>
 8049a12:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)
 8049a19:	30 db                	xor    %bl,%bl
 8049a1b:	e8 c0 ed ff ff       	call   80487e0 <putchar@plt>
 8049a20:	c7 44 24 04 31 ae 04 	movl   $0x804ae31,0x4(%esp)
 8049a27:	08 
 8049a28:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049a2f:	e8 cc ed ff ff       	call   8048800 <__printf_chk@plt>
 8049a34:	d9 e8                	fld1   
 8049a36:	dd 84 de 44 e6 04 08 	fldl   0x804e644(%esi,%ebx,8)
 8049a3d:	d9 ee                	fldz   
 8049a3f:	d9 c9                	fxch   %st(1)
 8049a41:	db e9                	fucomi %st(1),%st
 8049a43:	dd d9                	fstp   %st(1)
 8049a45:	0f 86 db 00 00 00    	jbe    8049b26 <test_rotate+0x2f6>
 8049a4b:	dc 3c dd c0 af 04 08 	fdivrl 0x804afc0(,%ebx,8)
 8049a52:	83 c3 01             	add    $0x1,%ebx
 8049a55:	c7 44 24 04 1d ae 04 	movl   $0x804ae1d,0x4(%esp)
 8049a5c:	08 
 8049a5d:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049a64:	dc c9                	fmul   %st,%st(1)
 8049a66:	dd 5c 24 08          	fstpl  0x8(%esp)
 8049a6a:	dd 5c 24 10          	fstpl  0x10(%esp)
 8049a6e:	e8 8d ed ff ff       	call   8048800 <__printf_chk@plt>
 8049a73:	83 fb 05             	cmp    $0x5,%ebx
 8049a76:	dd 44 24 10          	fldl   0x10(%esp)
 8049a7a:	75 ba                	jne    8049a36 <test_rotate+0x206>
 8049a7c:	dd 05 28 b0 04 08    	fldl   0x804b028
 8049a82:	dd 5c 24 08          	fstpl  0x8(%esp)
 8049a86:	dd 1c 24             	fstpl  (%esp)
 8049a89:	e8 82 ec ff ff       	call   8048710 <pow@plt>
 8049a8e:	c7 44 24 04 1d ae 04 	movl   $0x804ae1d,0x4(%esp)
 8049a95:	08 
 8049a96:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049a9d:	dd 54 24 08          	fstl   0x8(%esp)
 8049aa1:	dd 5c 24 10          	fstpl  0x10(%esp)
 8049aa5:	e8 56 ed ff ff       	call   8048800 <__printf_chk@plt>
 8049aaa:	c7 04 24 41 af 04 08 	movl   $0x804af41,(%esp)
 8049ab1:	e8 9a ec ff ff       	call   8048750 <puts@plt>
 8049ab6:	dd 05 b8 d1 04 08    	fldl   0x804d1b8
 8049abc:	dd 44 24 10          	fldl   0x10(%esp)
 8049ac0:	db e9                	fucomi %st(1),%st
 8049ac2:	dd d9                	fstp   %st(1)
 8049ac4:	76 1a                	jbe    8049ae0 <test_rotate+0x2b0>
 8049ac6:	6b 44 24 70 34       	imul   $0x34,0x70(%esp),%eax
 8049acb:	dd 1d b8 d1 04 08    	fstpl  0x804d1b8
 8049ad1:	8b 80 6c e6 04 08    	mov    0x804e66c(%eax),%eax
 8049ad7:	a3 b0 d1 04 08       	mov    %eax,0x804d1b0
 8049adc:	eb 04                	jmp    8049ae2 <test_rotate+0x2b2>
 8049ade:	66 90                	xchg   %ax,%ax
 8049ae0:	dd d8                	fstp   %st(0)
 8049ae2:	83 c4 5c             	add    $0x5c,%esp
 8049ae5:	5b                   	pop    %ebx
 8049ae6:	5e                   	pop    %esi
 8049ae7:	5f                   	pop    %edi
 8049ae8:	5d                   	pop    %ebp
 8049ae9:	c3                   	ret    
 8049aea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8049af0:	c7 44 24 0c 60 00 00 	movl   $0x60,0xc(%esp)
 8049af7:	00 
 8049af8:	8b 87 6c e6 04 08    	mov    0x804e66c(%edi),%eax
 8049afe:	c7 44 24 04 0c ac 04 	movl   $0x804ac0c,0x4(%esp)
 8049b05:	08 
 8049b06:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049b0d:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049b11:	e8 ea ec ff ff       	call   8048800 <__printf_chk@plt>
 8049b16:	83 c4 5c             	add    $0x5c,%esp
 8049b19:	5b                   	pop    %ebx
 8049b1a:	5e                   	pop    %esi
 8049b1b:	5f                   	pop    %edi
 8049b1c:	5d                   	pop    %ebp
 8049b1d:	c3                   	ret    
 8049b1e:	66 90                	xchg   %ax,%ax
 8049b20:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 8049b24:	eb d2                	jmp    8049af8 <test_rotate+0x2c8>
 8049b26:	dd d8                	fstp   %st(0)
 8049b28:	dd d8                	fstp   %st(0)
 8049b2a:	c7 04 24 48 ac 04 08 	movl   $0x804ac48,(%esp)
 8049b31:	e8 1a ec ff ff       	call   8048750 <puts@plt>
 8049b36:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049b3d:	e8 2e ec ff ff       	call   8048770 <exit@plt>
 8049b42:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8049b49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08049b50 <run_smooth_benchmark>:
 8049b50:	83 ec 1c             	sub    $0x1c,%esp
 8049b53:	8b 15 90 fa 04 08    	mov    0x804fa90,%edx
 8049b59:	6b 44 24 20 34       	imul   $0x34,0x20(%esp),%eax
 8049b5e:	89 54 24 08          	mov    %edx,0x8(%esp)
 8049b62:	8b 15 94 fa 04 08    	mov    0x804fa94,%edx
 8049b68:	89 54 24 04          	mov    %edx,0x4(%esp)
 8049b6c:	8b 54 24 24          	mov    0x24(%esp),%edx
 8049b70:	89 14 24             	mov    %edx,(%esp)
 8049b73:	ff 90 e0 d1 04 08    	call   *0x804d1e0(%eax)
 8049b79:	83 c4 1c             	add    $0x1c,%esp
 8049b7c:	c3                   	ret    
 8049b7d:	8d 76 00             	lea    0x0(%esi),%esi

08049b80 <test_smooth>:
 8049b80:	55                   	push   %ebp
 8049b81:	57                   	push   %edi
 8049b82:	56                   	push   %esi
 8049b83:	53                   	push   %ebx
 8049b84:	31 db                	xor    %ebx,%ebx
 8049b86:	83 ec 5c             	sub    $0x5c,%esp
 8049b89:	6b 74 24 70 34       	imul   $0x34,0x70(%esp),%esi
 8049b8e:	8b 86 0c d2 04 08    	mov    0x804d20c(%esi),%eax
 8049b94:	89 f7                	mov    %esi,%edi
 8049b96:	89 44 24 28          	mov    %eax,0x28(%esp)
 8049b9a:	b8 60 00 00 00       	mov    $0x60,%eax
 8049b9f:	e8 dc fa ff ff       	call   8049680 <create>
 8049ba4:	a1 90 fa 04 08       	mov    0x804fa90,%eax
 8049ba9:	c7 04 24 60 00 00 00 	movl   $0x60,(%esp)
 8049bb0:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049bb4:	a1 94 fa 04 08       	mov    0x804fa94,%eax
 8049bb9:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049bbd:	ff 97 e0 d1 04 08    	call   *0x804d1e0(%edi)
 8049bc3:	b8 60 00 00 00       	mov    $0x60,%eax
 8049bc8:	e8 03 f7 ff ff       	call   80492d0 <check_smooth>
 8049bcd:	85 c0                	test   %eax,%eax
 8049bcf:	0f 85 6b 02 00 00    	jne    8049e40 <test_smooth+0x2c0>
 8049bd5:	8b 2c 9d e8 af 04 08 	mov    0x804afe8(,%ebx,4),%ebp
 8049bdc:	89 e8                	mov    %ebp,%eax
 8049bde:	e8 9d fa ff ff       	call   8049680 <create>
 8049be3:	a1 90 fa 04 08       	mov    0x804fa90,%eax
 8049be8:	89 2c 24             	mov    %ebp,(%esp)
 8049beb:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049bef:	a1 94 fa 04 08       	mov    0x804fa94,%eax
 8049bf4:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049bf8:	ff 97 e0 d1 04 08    	call   *0x804d1e0(%edi)
 8049bfe:	89 e8                	mov    %ebp,%eax
 8049c00:	e8 cb f6 ff ff       	call   80492d0 <check_smooth>
 8049c05:	85 c0                	test   %eax,%eax
 8049c07:	0f 85 63 02 00 00    	jne    8049e70 <test_smooth+0x2f0>
 8049c0d:	8b 87 e0 d1 04 08    	mov    0x804d1e0(%edi),%eax
 8049c13:	89 6c 24 2c          	mov    %ebp,0x2c(%esp)
 8049c17:	db 44 24 2c          	fildl  0x2c(%esp)
 8049c1b:	d8 c8                	fmul   %st(0),%st
 8049c1d:	89 44 24 40          	mov    %eax,0x40(%esp)
 8049c21:	8d 44 24 3c          	lea    0x3c(%esp),%eax
 8049c25:	89 44 24 44          	mov    %eax,0x44(%esp)
 8049c29:	a1 94 fa 04 08       	mov    0x804fa94,%eax
 8049c2e:	89 6c 24 3c          	mov    %ebp,0x3c(%esp)
 8049c32:	dd 5c 24 10          	fstpl  0x10(%esp)
 8049c36:	89 44 24 48          	mov    %eax,0x48(%esp)
 8049c3a:	a1 90 fa 04 08       	mov    0x804fa90,%eax
 8049c3f:	89 44 24 4c          	mov    %eax,0x4c(%esp)
 8049c43:	89 e8                	mov    %ebp,%eax
 8049c45:	e8 36 fa ff ff       	call   8049680 <create>
 8049c4a:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049c4e:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049c52:	c7 04 24 50 8f 04 08 	movl   $0x8048f50,(%esp)
 8049c59:	e8 22 09 00 00       	call   804a580 <fcyc_v>
 8049c5e:	dd 44 24 10          	fldl   0x10(%esp)
 8049c62:	de f9                	fdivrp %st,%st(1)
 8049c64:	dd 9c de e4 d1 04 08 	fstpl  0x804d1e4(%esi,%ebx,8)
 8049c6b:	83 c3 01             	add    $0x1,%ebx
 8049c6e:	83 fb 05             	cmp    $0x5,%ebx
 8049c71:	0f 85 23 ff ff ff    	jne    8049b9a <test_smooth+0x1a>
 8049c77:	8b 44 24 28          	mov    0x28(%esp),%eax
 8049c7b:	30 db                	xor    %bl,%bl
 8049c7d:	c7 44 24 04 3a ae 04 	movl   $0x804ae3a,0x4(%esp)
 8049c84:	08 
 8049c85:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049c8c:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049c90:	e8 6b eb ff ff       	call   8048800 <__printf_chk@plt>
 8049c95:	c7 44 24 04 04 ae 04 	movl   $0x804ae04,0x4(%esp)
 8049c9c:	08 
 8049c9d:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049ca4:	e8 57 eb ff ff       	call   8048800 <__printf_chk@plt>
 8049ca9:	8b 04 9d e8 af 04 08 	mov    0x804afe8(,%ebx,4),%eax
 8049cb0:	83 c3 01             	add    $0x1,%ebx
 8049cb3:	c7 44 24 04 09 ae 04 	movl   $0x804ae09,0x4(%esp)
 8049cba:	08 
 8049cbb:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049cc2:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049cc6:	e8 35 eb ff ff       	call   8048800 <__printf_chk@plt>
 8049ccb:	83 fb 05             	cmp    $0x5,%ebx
 8049cce:	75 d9                	jne    8049ca9 <test_smooth+0x129>
 8049cd0:	c7 04 24 0d ae 04 08 	movl   $0x804ae0d,(%esp)
 8049cd7:	30 db                	xor    %bl,%bl
 8049cd9:	e8 72 ea ff ff       	call   8048750 <puts@plt>
 8049cde:	c7 44 24 04 13 ae 04 	movl   $0x804ae13,0x4(%esp)
 8049ce5:	08 
 8049ce6:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049ced:	e8 0e eb ff ff       	call   8048800 <__printf_chk@plt>
 8049cf2:	dd 84 de e4 d1 04 08 	fldl   0x804d1e4(%esi,%ebx,8)
 8049cf9:	83 c3 01             	add    $0x1,%ebx
 8049cfc:	dd 5c 24 08          	fstpl  0x8(%esp)
 8049d00:	c7 44 24 04 1d ae 04 	movl   $0x804ae1d,0x4(%esp)
 8049d07:	08 
 8049d08:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049d0f:	e8 ec ea ff ff       	call   8048800 <__printf_chk@plt>
 8049d14:	83 fb 05             	cmp    $0x5,%ebx
 8049d17:	75 d9                	jne    8049cf2 <test_smooth+0x172>
 8049d19:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)
 8049d20:	30 db                	xor    %bl,%bl
 8049d22:	e8 b9 ea ff ff       	call   80487e0 <putchar@plt>
 8049d27:	c7 44 24 04 23 ae 04 	movl   $0x804ae23,0x4(%esp)
 8049d2e:	08 
 8049d2f:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049d36:	e8 c5 ea ff ff       	call   8048800 <__printf_chk@plt>
 8049d3b:	dd 04 dd 00 b0 04 08 	fldl   0x804b000(,%ebx,8)
 8049d42:	83 c3 01             	add    $0x1,%ebx
 8049d45:	dd 5c 24 08          	fstpl  0x8(%esp)
 8049d49:	c7 44 24 04 1d ae 04 	movl   $0x804ae1d,0x4(%esp)
 8049d50:	08 
 8049d51:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049d58:	e8 a3 ea ff ff       	call   8048800 <__printf_chk@plt>
 8049d5d:	83 fb 05             	cmp    $0x5,%ebx
 8049d60:	75 d9                	jne    8049d3b <test_smooth+0x1bb>
 8049d62:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)
 8049d69:	30 db                	xor    %bl,%bl
 8049d6b:	e8 70 ea ff ff       	call   80487e0 <putchar@plt>
 8049d70:	c7 44 24 04 31 ae 04 	movl   $0x804ae31,0x4(%esp)
 8049d77:	08 
 8049d78:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049d7f:	e8 7c ea ff ff       	call   8048800 <__printf_chk@plt>
 8049d84:	d9 e8                	fld1   
 8049d86:	dd 84 de e4 d1 04 08 	fldl   0x804d1e4(%esi,%ebx,8)
 8049d8d:	d9 ee                	fldz   
 8049d8f:	d9 c9                	fxch   %st(1)
 8049d91:	db e9                	fucomi %st(1),%st
 8049d93:	dd d9                	fstp   %st(1)
 8049d95:	0f 86 db 00 00 00    	jbe    8049e76 <test_smooth+0x2f6>
 8049d9b:	dc 3c dd 00 b0 04 08 	fdivrl 0x804b000(,%ebx,8)
 8049da2:	83 c3 01             	add    $0x1,%ebx
 8049da5:	c7 44 24 04 1d ae 04 	movl   $0x804ae1d,0x4(%esp)
 8049dac:	08 
 8049dad:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049db4:	dc c9                	fmul   %st,%st(1)
 8049db6:	dd 5c 24 08          	fstpl  0x8(%esp)
 8049dba:	dd 5c 24 10          	fstpl  0x10(%esp)
 8049dbe:	e8 3d ea ff ff       	call   8048800 <__printf_chk@plt>
 8049dc3:	83 fb 05             	cmp    $0x5,%ebx
 8049dc6:	dd 44 24 10          	fldl   0x10(%esp)
 8049dca:	75 ba                	jne    8049d86 <test_smooth+0x206>
 8049dcc:	dd 05 28 b0 04 08    	fldl   0x804b028
 8049dd2:	dd 5c 24 08          	fstpl  0x8(%esp)
 8049dd6:	dd 1c 24             	fstpl  (%esp)
 8049dd9:	e8 32 e9 ff ff       	call   8048710 <pow@plt>
 8049dde:	c7 44 24 04 1d ae 04 	movl   $0x804ae1d,0x4(%esp)
 8049de5:	08 
 8049de6:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049ded:	dd 54 24 08          	fstl   0x8(%esp)
 8049df1:	dd 5c 24 10          	fstpl  0x10(%esp)
 8049df5:	e8 06 ea ff ff       	call   8048800 <__printf_chk@plt>
 8049dfa:	c7 04 24 41 af 04 08 	movl   $0x804af41,(%esp)
 8049e01:	e8 4a e9 ff ff       	call   8048750 <puts@plt>
 8049e06:	dd 05 a8 d1 04 08    	fldl   0x804d1a8
 8049e0c:	dd 44 24 10          	fldl   0x10(%esp)
 8049e10:	db e9                	fucomi %st(1),%st
 8049e12:	dd d9                	fstp   %st(1)
 8049e14:	76 1a                	jbe    8049e30 <test_smooth+0x2b0>
 8049e16:	6b 44 24 70 34       	imul   $0x34,0x70(%esp),%eax
 8049e1b:	dd 1d a8 d1 04 08    	fstpl  0x804d1a8
 8049e21:	8b 80 0c d2 04 08    	mov    0x804d20c(%eax),%eax
 8049e27:	a3 a0 d1 04 08       	mov    %eax,0x804d1a0
 8049e2c:	eb 04                	jmp    8049e32 <test_smooth+0x2b2>
 8049e2e:	66 90                	xchg   %ax,%ax
 8049e30:	dd d8                	fstp   %st(0)
 8049e32:	83 c4 5c             	add    $0x5c,%esp
 8049e35:	5b                   	pop    %ebx
 8049e36:	5e                   	pop    %esi
 8049e37:	5f                   	pop    %edi
 8049e38:	5d                   	pop    %ebp
 8049e39:	c3                   	ret    
 8049e3a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8049e40:	c7 44 24 0c 60 00 00 	movl   $0x60,0xc(%esp)
 8049e47:	00 
 8049e48:	8b 87 0c d2 04 08    	mov    0x804d20c(%edi),%eax
 8049e4e:	c7 44 24 04 0c ac 04 	movl   $0x804ac0c,0x4(%esp)
 8049e55:	08 
 8049e56:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049e5d:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049e61:	e8 9a e9 ff ff       	call   8048800 <__printf_chk@plt>
 8049e66:	83 c4 5c             	add    $0x5c,%esp
 8049e69:	5b                   	pop    %ebx
 8049e6a:	5e                   	pop    %esi
 8049e6b:	5f                   	pop    %edi
 8049e6c:	5d                   	pop    %ebp
 8049e6d:	c3                   	ret    
 8049e6e:	66 90                	xchg   %ax,%ax
 8049e70:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 8049e74:	eb d2                	jmp    8049e48 <test_smooth+0x2c8>
 8049e76:	dd d8                	fstp   %st(0)
 8049e78:	dd d8                	fstp   %st(0)
 8049e7a:	c7 04 24 48 ac 04 08 	movl   $0x804ac48,(%esp)
 8049e81:	e8 ca e8 ff ff       	call   8048750 <puts@plt>
 8049e86:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049e8d:	e8 de e8 ff ff       	call   8048770 <exit@plt>
 8049e92:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8049e99:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08049ea0 <usage>:
 8049ea0:	83 ec 1c             	sub    $0x1c,%esp
 8049ea3:	8b 44 24 20          	mov    0x20(%esp),%eax
 8049ea7:	c7 44 24 08 70 ac 04 	movl   $0x804ac70,0x8(%esp)
 8049eae:	08 
 8049eaf:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049eb6:	00 
 8049eb7:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049ebb:	a1 80 d1 04 08       	mov    0x804d180,%eax
 8049ec0:	89 04 24             	mov    %eax,(%esp)
 8049ec3:	e8 48 e9 ff ff       	call   8048810 <__fprintf_chk@plt>
 8049ec8:	a1 80 d1 04 08       	mov    0x804d180,%eax
 8049ecd:	c7 44 24 08 09 00 00 	movl   $0x9,0x8(%esp)
 8049ed4:	00 
 8049ed5:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049edc:	00 
 8049edd:	c7 04 24 51 ae 04 08 	movl   $0x804ae51,(%esp)
 8049ee4:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049ee8:	e8 43 e8 ff ff       	call   8048730 <fwrite@plt>
 8049eed:	a1 80 d1 04 08       	mov    0x804d180,%eax
 8049ef2:	c7 44 24 08 20 00 00 	movl   $0x20,0x8(%esp)
 8049ef9:	00 
 8049efa:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049f01:	00 
 8049f02:	c7 04 24 a4 ac 04 08 	movl   $0x804aca4,(%esp)
 8049f09:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049f0d:	e8 1e e8 ff ff       	call   8048730 <fwrite@plt>
 8049f12:	a1 80 d1 04 08       	mov    0x804d180,%eax
 8049f17:	c7 44 24 08 2f 00 00 	movl   $0x2f,0x8(%esp)
 8049f1e:	00 
 8049f1f:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049f26:	00 
 8049f27:	c7 04 24 c8 ac 04 08 	movl   $0x804acc8,(%esp)
 8049f2e:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049f32:	e8 f9 e7 ff ff       	call   8048730 <fwrite@plt>
 8049f37:	a1 80 d1 04 08       	mov    0x804d180,%eax
 8049f3c:	c7 44 24 08 40 00 00 	movl   $0x40,0x8(%esp)
 8049f43:	00 
 8049f44:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049f4b:	00 
 8049f4c:	c7 04 24 f8 ac 04 08 	movl   $0x804acf8,(%esp)
 8049f53:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049f57:	e8 d4 e7 ff ff       	call   8048730 <fwrite@plt>
 8049f5c:	a1 80 d1 04 08       	mov    0x804d180,%eax
 8049f61:	c7 44 24 08 3b 00 00 	movl   $0x3b,0x8(%esp)
 8049f68:	00 
 8049f69:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049f70:	00 
 8049f71:	c7 04 24 3c ad 04 08 	movl   $0x804ad3c,(%esp)
 8049f78:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049f7c:	e8 af e7 ff ff       	call   8048730 <fwrite@plt>
 8049f81:	a1 80 d1 04 08       	mov    0x804d180,%eax
 8049f86:	c7 44 24 08 3b 00 00 	movl   $0x3b,0x8(%esp)
 8049f8d:	00 
 8049f8e:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049f95:	00 
 8049f96:	c7 04 24 78 ad 04 08 	movl   $0x804ad78,(%esp)
 8049f9d:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049fa1:	e8 8a e7 ff ff       	call   8048730 <fwrite@plt>
 8049fa6:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049fad:	e8 be e7 ff ff       	call   8048770 <exit@plt>
 8049fb2:	66 90                	xchg   %ax,%ax
 8049fb4:	66 90                	xchg   %ax,%ax
 8049fb6:	66 90                	xchg   %ax,%ax
 8049fb8:	66 90                	xchg   %ax,%ax
 8049fba:	66 90                	xchg   %ax,%ax
 8049fbc:	66 90                	xchg   %ax,%ax
 8049fbe:	66 90                	xchg   %ax,%ax

08049fc0 <naive_rotate>:
 8049fc0:	55                   	push   %ebp
 8049fc1:	57                   	push   %edi
 8049fc2:	56                   	push   %esi
 8049fc3:	53                   	push   %ebx
 8049fc4:	83 ec 08             	sub    $0x8,%esp
 8049fc7:	8b 6c 24 1c          	mov    0x1c(%esp),%ebp
 8049fcb:	85 ed                	test   %ebp,%ebp
 8049fcd:	7e 5b                	jle    804a02a <naive_rotate+0x6a>
 8049fcf:	8d 55 ff             	lea    -0x1(%ebp),%edx
 8049fd2:	31 f6                	xor    %esi,%esi
 8049fd4:	0f af d5             	imul   %ebp,%edx
 8049fd7:	8d 44 6d 00          	lea    0x0(%ebp,%ebp,2),%eax
 8049fdb:	01 c0                	add    %eax,%eax
 8049fdd:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049fe1:	6b dd fa             	imul   $0xfffffffa,%ebp,%ebx
 8049fe4:	8b 44 24 20          	mov    0x20(%esp),%eax
 8049fe8:	8d 0c 52             	lea    (%edx,%edx,2),%ecx
 8049feb:	8b 54 24 24          	mov    0x24(%esp),%edx
 8049fef:	8d 3c 4a             	lea    (%edx,%ecx,2),%edi
 8049ff2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8049ff8:	8b 4c 24 04          	mov    0x4(%esp),%ecx
 8049ffc:	89 fa                	mov    %edi,%edx
 8049ffe:	89 34 24             	mov    %esi,(%esp)
 804a001:	01 c1                	add    %eax,%ecx
 804a003:	90                   	nop
 804a004:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804a008:	8b 30                	mov    (%eax),%esi
 804a00a:	89 32                	mov    %esi,(%edx)
 804a00c:	0f b7 70 04          	movzwl 0x4(%eax),%esi
 804a010:	83 c0 06             	add    $0x6,%eax
 804a013:	66 89 72 04          	mov    %si,0x4(%edx)
 804a017:	01 da                	add    %ebx,%edx
 804a019:	39 c8                	cmp    %ecx,%eax
 804a01b:	75 eb                	jne    804a008 <naive_rotate+0x48>
 804a01d:	8b 34 24             	mov    (%esp),%esi
 804a020:	83 c7 06             	add    $0x6,%edi
 804a023:	83 c6 01             	add    $0x1,%esi
 804a026:	39 ee                	cmp    %ebp,%esi
 804a028:	75 ce                	jne    8049ff8 <naive_rotate+0x38>
 804a02a:	83 c4 08             	add    $0x8,%esp
 804a02d:	5b                   	pop    %ebx
 804a02e:	5e                   	pop    %esi
 804a02f:	5f                   	pop    %edi
 804a030:	5d                   	pop    %ebp
 804a031:	c3                   	ret    
 804a032:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804a039:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0804a040 <rotate>:
 804a040:	55                   	push   %ebp
 804a041:	57                   	push   %edi
 804a042:	56                   	push   %esi
 804a043:	53                   	push   %ebx
 804a044:	83 ec 08             	sub    $0x8,%esp
 804a047:	8b 6c 24 1c          	mov    0x1c(%esp),%ebp
 804a04b:	85 ed                	test   %ebp,%ebp
 804a04d:	7e 5b                	jle    804a0aa <rotate+0x6a>
 804a04f:	8d 55 ff             	lea    -0x1(%ebp),%edx
 804a052:	31 f6                	xor    %esi,%esi
 804a054:	0f af d5             	imul   %ebp,%edx
 804a057:	8d 44 6d 00          	lea    0x0(%ebp,%ebp,2),%eax
 804a05b:	01 c0                	add    %eax,%eax
 804a05d:	89 44 24 04          	mov    %eax,0x4(%esp)
 804a061:	6b dd fa             	imul   $0xfffffffa,%ebp,%ebx
 804a064:	8b 44 24 20          	mov    0x20(%esp),%eax
 804a068:	8d 0c 52             	lea    (%edx,%edx,2),%ecx
 804a06b:	8b 54 24 24          	mov    0x24(%esp),%edx
 804a06f:	8d 3c 4a             	lea    (%edx,%ecx,2),%edi
 804a072:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804a078:	8b 4c 24 04          	mov    0x4(%esp),%ecx
 804a07c:	89 fa                	mov    %edi,%edx
 804a07e:	89 34 24             	mov    %esi,(%esp)
 804a081:	01 c1                	add    %eax,%ecx
 804a083:	90                   	nop
 804a084:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804a088:	8b 30                	mov    (%eax),%esi
 804a08a:	89 32                	mov    %esi,(%edx)
 804a08c:	0f b7 70 04          	movzwl 0x4(%eax),%esi
 804a090:	83 c0 06             	add    $0x6,%eax
 804a093:	66 89 72 04          	mov    %si,0x4(%edx)
 804a097:	01 da                	add    %ebx,%edx
 804a099:	39 c8                	cmp    %ecx,%eax
 804a09b:	75 eb                	jne    804a088 <rotate+0x48>
 804a09d:	8b 34 24             	mov    (%esp),%esi
 804a0a0:	83 c7 06             	add    $0x6,%edi
 804a0a3:	83 c6 01             	add    $0x1,%esi
 804a0a6:	39 ee                	cmp    %ebp,%esi
 804a0a8:	75 ce                	jne    804a078 <rotate+0x38>
 804a0aa:	83 c4 08             	add    $0x8,%esp
 804a0ad:	5b                   	pop    %ebx
 804a0ae:	5e                   	pop    %esi
 804a0af:	5f                   	pop    %edi
 804a0b0:	5d                   	pop    %ebp
 804a0b1:	c3                   	ret    
 804a0b2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804a0b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0804a0c0 <naive_smooth>:
 804a0c0:	55                   	push   %ebp
 804a0c1:	57                   	push   %edi
 804a0c2:	56                   	push   %esi
 804a0c3:	53                   	push   %ebx
 804a0c4:	83 ec 44             	sub    $0x44,%esp
 804a0c7:	8b 44 24 58          	mov    0x58(%esp),%eax
 804a0cb:	85 c0                	test   %eax,%eax
 804a0cd:	0f 8e 9b 01 00 00    	jle    804a26e <naive_smooth+0x1ae>
 804a0d3:	8b 4c 24 58          	mov    0x58(%esp),%ecx
 804a0d7:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%esp)
 804a0de:	00 
 804a0df:	83 e9 01             	sub    $0x1,%ecx
 804a0e2:	89 4c 24 28          	mov    %ecx,0x28(%esp)
 804a0e6:	8b 4c 24 58          	mov    0x58(%esp),%ecx
 804a0ea:	8d 04 49             	lea    (%ecx,%ecx,2),%eax
 804a0ed:	8b 4c 24 60          	mov    0x60(%esp),%ecx
 804a0f1:	01 c0                	add    %eax,%eax
 804a0f3:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804a0f7:	8b 44 24 5c          	mov    0x5c(%esp),%eax
 804a0fb:	89 4c 24 40          	mov    %ecx,0x40(%esp)
 804a0ff:	83 c0 06             	add    $0x6,%eax
 804a102:	89 44 24 38          	mov    %eax,0x38(%esp)
 804a106:	83 44 24 3c 01       	addl   $0x1,0x3c(%esp)
 804a10b:	b8 00 00 00 00       	mov    $0x0,%eax
 804a110:	8b 4c 24 3c          	mov    0x3c(%esp),%ecx
 804a114:	c7 44 24 1c 01 00 00 	movl   $0x1,0x1c(%esp)
 804a11b:	00 
 804a11c:	83 e9 02             	sub    $0x2,%ecx
 804a11f:	0f 49 c1             	cmovns %ecx,%eax
 804a122:	8b 4c 24 28          	mov    0x28(%esp),%ecx
 804a126:	39 4c 24 3c          	cmp    %ecx,0x3c(%esp)
 804a12a:	0f 4e 4c 24 3c       	cmovle 0x3c(%esp),%ecx
 804a12f:	89 44 24 24          	mov    %eax,0x24(%esp)
 804a133:	89 4c 24 30          	mov    %ecx,0x30(%esp)
 804a137:	8b 4c 24 40          	mov    0x40(%esp),%ecx
 804a13b:	89 4c 24 20          	mov    %ecx,0x20(%esp)
 804a13f:	8b 4c 24 58          	mov    0x58(%esp),%ecx
 804a143:	0f af c8             	imul   %eax,%ecx
 804a146:	89 4c 24 34          	mov    %ecx,0x34(%esp)
 804a14a:	8b 4c 24 30          	mov    0x30(%esp),%ecx
 804a14e:	83 c1 01             	add    $0x1,%ecx
 804a151:	89 4c 24 10          	mov    %ecx,0x10(%esp)
 804a155:	8b 4c 24 30          	mov    0x30(%esp),%ecx
 804a159:	39 4c 24 24          	cmp    %ecx,0x24(%esp)
 804a15d:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
 804a161:	89 4c 24 2c          	mov    %ecx,0x2c(%esp)
 804a165:	0f 8f 0b 01 00 00    	jg     804a276 <naive_smooth+0x1b6>
 804a16b:	83 e9 02             	sub    $0x2,%ecx
 804a16e:	b8 00 00 00 00       	mov    $0x0,%eax
 804a173:	8b 6c 24 24          	mov    0x24(%esp),%ebp
 804a177:	0f 49 c1             	cmovns %ecx,%eax
 804a17a:	8b 4c 24 28          	mov    0x28(%esp),%ecx
 804a17e:	89 44 24 04          	mov    %eax,0x4(%esp)
 804a182:	8b 44 24 34          	mov    0x34(%esp),%eax
 804a186:	39 4c 24 1c          	cmp    %ecx,0x1c(%esp)
 804a18a:	0f 4e 4c 24 1c       	cmovle 0x1c(%esp),%ecx
 804a18f:	31 db                	xor    %ebx,%ebx
 804a191:	31 f6                	xor    %esi,%esi
 804a193:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 804a19a:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 804a19e:	01 c8                	add    %ecx,%eax
 804a1a0:	8b 4c 24 38          	mov    0x38(%esp),%ecx
 804a1a4:	8d 04 40             	lea    (%eax,%eax,2),%eax
 804a1a7:	6b 54 24 08 fa       	imul   $0xfffffffa,0x8(%esp),%edx
 804a1ac:	8d 3c 41             	lea    (%ecx,%eax,2),%edi
 804a1af:	8b 44 24 04          	mov    0x4(%esp),%eax
 804a1b3:	8d 0c 40             	lea    (%eax,%eax,2),%ecx
 804a1b6:	31 c0                	xor    %eax,%eax
 804a1b8:	8d 54 4a fa          	lea    -0x6(%edx,%ecx,2),%edx
 804a1bc:	89 54 24 14          	mov    %edx,0x14(%esp)
 804a1c0:	8b 54 24 08          	mov    0x8(%esp),%edx
 804a1c4:	2b 54 24 04          	sub    0x4(%esp),%edx
 804a1c8:	89 54 24 18          	mov    %edx,0x18(%esp)
 804a1cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804a1d0:	8b 4c 24 08          	mov    0x8(%esp),%ecx
 804a1d4:	39 4c 24 04          	cmp    %ecx,0x4(%esp)
 804a1d8:	7f 2c                	jg     804a206 <naive_smooth+0x146>
 804a1da:	8b 54 24 14          	mov    0x14(%esp),%edx
 804a1de:	01 fa                	add    %edi,%edx
 804a1e0:	0f b7 0a             	movzwl (%edx),%ecx
 804a1e3:	01 c8                	add    %ecx,%eax
 804a1e5:	0f b7 4a 02          	movzwl 0x2(%edx),%ecx
 804a1e9:	01 ce                	add    %ecx,%esi
 804a1eb:	0f b7 4a 04          	movzwl 0x4(%edx),%ecx
 804a1ef:	83 c2 06             	add    $0x6,%edx
 804a1f2:	01 cb                	add    %ecx,%ebx
 804a1f4:	39 fa                	cmp    %edi,%edx
 804a1f6:	75 e8                	jne    804a1e0 <naive_smooth+0x120>
 804a1f8:	8b 0c 24             	mov    (%esp),%ecx
 804a1fb:	8b 54 24 18          	mov    0x18(%esp),%edx
 804a1ff:	8d 4c 11 01          	lea    0x1(%ecx,%edx,1),%ecx
 804a203:	89 0c 24             	mov    %ecx,(%esp)
 804a206:	83 c5 01             	add    $0x1,%ebp
 804a209:	03 7c 24 0c          	add    0xc(%esp),%edi
 804a20d:	3b 6c 24 10          	cmp    0x10(%esp),%ebp
 804a211:	75 bd                	jne    804a1d0 <naive_smooth+0x110>
 804a213:	89 c2                	mov    %eax,%edx
 804a215:	8b 4c 24 20          	mov    0x20(%esp),%ecx
 804a219:	c1 fa 1f             	sar    $0x1f,%edx
 804a21c:	f7 3c 24             	idivl  (%esp)
 804a21f:	89 f2                	mov    %esi,%edx
 804a221:	83 44 24 1c 01       	addl   $0x1,0x1c(%esp)
 804a226:	c1 fa 1f             	sar    $0x1f,%edx
 804a229:	66 89 01             	mov    %ax,(%ecx)
 804a22c:	89 f0                	mov    %esi,%eax
 804a22e:	f7 3c 24             	idivl  (%esp)
 804a231:	89 da                	mov    %ebx,%edx
 804a233:	c1 fa 1f             	sar    $0x1f,%edx
 804a236:	66 89 41 02          	mov    %ax,0x2(%ecx)
 804a23a:	89 d8                	mov    %ebx,%eax
 804a23c:	f7 3c 24             	idivl  (%esp)
 804a23f:	66 89 41 04          	mov    %ax,0x4(%ecx)
 804a243:	83 c1 06             	add    $0x6,%ecx
 804a246:	89 4c 24 20          	mov    %ecx,0x20(%esp)
 804a24a:	8b 4c 24 2c          	mov    0x2c(%esp),%ecx
 804a24e:	39 4c 24 58          	cmp    %ecx,0x58(%esp)
 804a252:	0f 8f fd fe ff ff    	jg     804a155 <naive_smooth+0x95>
 804a258:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
 804a25c:	01 4c 24 40          	add    %ecx,0x40(%esp)
 804a260:	8b 4c 24 58          	mov    0x58(%esp),%ecx
 804a264:	39 4c 24 3c          	cmp    %ecx,0x3c(%esp)
 804a268:	0f 85 98 fe ff ff    	jne    804a106 <naive_smooth+0x46>
 804a26e:	83 c4 44             	add    $0x44,%esp
 804a271:	5b                   	pop    %ebx
 804a272:	5e                   	pop    %esi
 804a273:	5f                   	pop    %edi
 804a274:	5d                   	pop    %ebp
 804a275:	c3                   	ret    
 804a276:	31 db                	xor    %ebx,%ebx
 804a278:	31 f6                	xor    %esi,%esi
 804a27a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 804a281:	31 c0                	xor    %eax,%eax
 804a283:	eb 8e                	jmp    804a213 <naive_smooth+0x153>
 804a285:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804a289:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0804a290 <smooth>:
 804a290:	e9 2b fe ff ff       	jmp    804a0c0 <naive_smooth>
 804a295:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804a299:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0804a2a0 <register_rotate_functions>:
 804a2a0:	83 ec 1c             	sub    $0x1c,%esp
 804a2a3:	c7 44 24 04 20 d1 04 	movl   $0x804d120,0x4(%esp)
 804a2aa:	08 
 804a2ab:	c7 04 24 c0 9f 04 08 	movl   $0x8049fc0,(%esp)
 804a2b2:	e8 19 f5 ff ff       	call   80497d0 <add_rotate_function>
 804a2b7:	c7 44 24 04 00 d1 04 	movl   $0x804d100,0x4(%esp)
 804a2be:	08 
 804a2bf:	c7 04 24 40 a0 04 08 	movl   $0x804a040,(%esp)
 804a2c6:	e8 05 f5 ff ff       	call   80497d0 <add_rotate_function>
 804a2cb:	83 c4 1c             	add    $0x1c,%esp
 804a2ce:	c3                   	ret    
 804a2cf:	90                   	nop

0804a2d0 <register_smooth_functions>:
 804a2d0:	83 ec 1c             	sub    $0x1c,%esp
 804a2d3:	c7 44 24 04 a0 d0 04 	movl   $0x804d0a0,0x4(%esp)
 804a2da:	08 
 804a2db:	c7 04 24 90 a2 04 08 	movl   $0x804a290,(%esp)
 804a2e2:	e8 b9 f4 ff ff       	call   80497a0 <add_smooth_function>
 804a2e7:	c7 44 24 04 c0 d0 04 	movl   $0x804d0c0,0x4(%esp)
 804a2ee:	08 
 804a2ef:	c7 04 24 c0 a0 04 08 	movl   $0x804a0c0,(%esp)
 804a2f6:	e8 a5 f4 ff ff       	call   80497a0 <add_smooth_function>
 804a2fb:	83 c4 1c             	add    $0x1c,%esp
 804a2fe:	c3                   	ret    
 804a2ff:	90                   	nop

0804a300 <add_sample>:
 804a300:	56                   	push   %esi
 804a301:	8b 15 cc fa c6 09    	mov    0x9c6facc,%edx
 804a307:	8b 35 64 d1 04 08    	mov    0x804d164,%esi
 804a30d:	53                   	push   %ebx
 804a30e:	a1 d0 fa c6 09       	mov    0x9c6fad0,%eax
 804a313:	dd 44 24 0c          	fldl   0xc(%esp)
 804a317:	39 f2                	cmp    %esi,%edx
 804a319:	7d 75                	jge    804a390 <add_sample+0x90>
 804a31b:	dd 1c d0             	fstpl  (%eax,%edx,8)
 804a31e:	89 d6                	mov    %edx,%esi
 804a320:	83 c2 01             	add    $0x1,%edx
 804a323:	85 f6                	test   %esi,%esi
 804a325:	89 15 cc fa c6 09    	mov    %edx,0x9c6facc
 804a32b:	7e 5f                	jle    804a38c <add_sample+0x8c>
 804a32d:	8d 56 ff             	lea    -0x1(%esi),%edx
 804a330:	8d 1c d0             	lea    (%eax,%edx,8),%ebx
 804a333:	dd 03                	fldl   (%ebx)
 804a335:	8d 0c f0             	lea    (%eax,%esi,8),%ecx
 804a338:	dd 01                	fldl   (%ecx)
 804a33a:	d9 c9                	fxch   %st(1)
 804a33c:	8d 44 f0 f0          	lea    -0x10(%eax,%esi,8),%eax
 804a340:	db e9                	fucomi %st(1),%st
 804a342:	77 2c                	ja     804a370 <add_sample+0x70>
 804a344:	dd d8                	fstp   %st(0)
 804a346:	dd d8                	fstp   %st(0)
 804a348:	eb 42                	jmp    804a38c <add_sample+0x8c>
 804a34a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804a350:	dd 00                	fldl   (%eax)
 804a352:	89 c3                	mov    %eax,%ebx
 804a354:	8d 48 08             	lea    0x8(%eax),%ecx
 804a357:	83 e8 08             	sub    $0x8,%eax
 804a35a:	dd 40 10             	fldl   0x10(%eax)
 804a35d:	d9 c9                	fxch   %st(1)
 804a35f:	db e9                	fucomi %st(1),%st
 804a361:	76 25                	jbe    804a388 <add_sample+0x88>
 804a363:	d9 c9                	fxch   %st(1)
 804a365:	83 ea 01             	sub    $0x1,%edx
 804a368:	eb 0e                	jmp    804a378 <add_sample+0x78>
 804a36a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804a370:	d9 c9                	fxch   %st(1)
 804a372:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804a378:	dd 1b                	fstpl  (%ebx)
 804a37a:	85 d2                	test   %edx,%edx
 804a37c:	dd 19                	fstpl  (%ecx)
 804a37e:	75 d0                	jne    804a350 <add_sample+0x50>
 804a380:	eb 0a                	jmp    804a38c <add_sample+0x8c>
 804a382:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804a388:	dd d8                	fstp   %st(0)
 804a38a:	dd d8                	fstp   %st(0)
 804a38c:	5b                   	pop    %ebx
 804a38d:	5e                   	pop    %esi
 804a38e:	c3                   	ret    
 804a38f:	90                   	nop
 804a390:	83 ee 01             	sub    $0x1,%esi
 804a393:	dd 04 f0             	fldl   (%eax,%esi,8)
 804a396:	df e9                	fucomip %st(1),%st
 804a398:	76 06                	jbe    804a3a0 <add_sample+0xa0>
 804a39a:	dd 1c f0             	fstpl  (%eax,%esi,8)
 804a39d:	eb 81                	jmp    804a320 <add_sample+0x20>
 804a39f:	90                   	nop
 804a3a0:	dd d8                	fstp   %st(0)
 804a3a2:	83 c2 01             	add    $0x1,%edx
 804a3a5:	5b                   	pop    %ebx
 804a3a6:	89 15 cc fa c6 09    	mov    %edx,0x9c6facc
 804a3ac:	5e                   	pop    %esi
 804a3ad:	c3                   	ret    
 804a3ae:	66 90                	xchg   %ax,%ax

0804a3b0 <has_converged>:
 804a3b0:	8b 15 64 d1 04 08    	mov    0x804d164,%edx
 804a3b6:	31 c0                	xor    %eax,%eax
 804a3b8:	39 15 cc fa c6 09    	cmp    %edx,0x9c6facc
 804a3be:	7c 1e                	jl     804a3de <has_converged+0x2e>
 804a3c0:	d9 e8                	fld1   
 804a3c2:	a1 d0 fa c6 09       	mov    0x9c6fad0,%eax
 804a3c7:	dc 05 70 d1 04 08    	faddl  0x804d170
 804a3cd:	dc 08                	fmull  (%eax)
 804a3cf:	dd 44 d0 f8          	fldl   -0x8(%eax,%edx,8)
 804a3d3:	d9 c9                	fxch   %st(1)
 804a3d5:	31 c0                	xor    %eax,%eax
 804a3d7:	df e9                	fucomip %st(1),%st
 804a3d9:	dd d8                	fstp   %st(0)
 804a3db:	0f 93 c0             	setae  %al
 804a3de:	f3 c3                	repz ret 

0804a3e0 <init_sampler>:
 804a3e0:	83 ec 1c             	sub    $0x1c,%esp
 804a3e3:	a1 d0 fa c6 09       	mov    0x9c6fad0,%eax
 804a3e8:	85 c0                	test   %eax,%eax
 804a3ea:	74 08                	je     804a3f4 <init_sampler+0x14>
 804a3ec:	89 04 24             	mov    %eax,(%esp)
 804a3ef:	e8 dc e2 ff ff       	call   80486d0 <free@plt>
 804a3f4:	a1 64 d1 04 08       	mov    0x804d164,%eax
 804a3f9:	c7 44 24 04 08 00 00 	movl   $0x8,0x4(%esp)
 804a400:	00 
 804a401:	89 04 24             	mov    %eax,(%esp)
 804a404:	e8 27 e4 ff ff       	call   8048830 <calloc@plt>
 804a409:	c7 05 cc fa c6 09 00 	movl   $0x0,0x9c6facc
 804a410:	00 00 00 
 804a413:	a3 d0 fa c6 09       	mov    %eax,0x9c6fad0
 804a418:	83 c4 1c             	add    $0x1c,%esp
 804a41b:	c3                   	ret    
 804a41c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0804a420 <clear>:
 804a420:	57                   	push   %edi
 804a421:	56                   	push   %esi
 804a422:	53                   	push   %ebx
 804a423:	83 ec 10             	sub    $0x10,%esp
 804a426:	8b 35 68 d1 04 08    	mov    0x804d168,%esi
 804a42c:	a1 d4 fa c6 09       	mov    0x9c6fad4,%eax
 804a431:	8b 1d c0 fa c6 09    	mov    0x9c6fac0,%ebx
 804a437:	8b 3d 6c d1 04 08    	mov    0x804d16c,%edi
 804a43d:	c1 ee 02             	shr    $0x2,%esi
 804a440:	85 c0                	test   %eax,%eax
 804a442:	74 29                	je     804a46d <clear+0x4d>
 804a444:	89 fa                	mov    %edi,%edx
 804a446:	83 e2 fc             	and    $0xfffffffc,%edx
 804a449:	01 c2                	add    %eax,%edx
 804a44b:	39 c2                	cmp    %eax,%edx
 804a44d:	76 11                	jbe    804a460 <clear+0x40>
 804a44f:	8d 0c b5 00 00 00 00 	lea    0x0(,%esi,4),%ecx
 804a456:	66 90                	xchg   %ax,%ax
 804a458:	03 18                	add    (%eax),%ebx
 804a45a:	01 c8                	add    %ecx,%eax
 804a45c:	39 c2                	cmp    %eax,%edx
 804a45e:	77 f8                	ja     804a458 <clear+0x38>
 804a460:	89 1d c0 fa c6 09    	mov    %ebx,0x9c6fac0
 804a466:	83 c4 10             	add    $0x10,%esp
 804a469:	5b                   	pop    %ebx
 804a46a:	5e                   	pop    %esi
 804a46b:	5f                   	pop    %edi
 804a46c:	c3                   	ret    
 804a46d:	89 3c 24             	mov    %edi,(%esp)
 804a470:	e8 cb e2 ff ff       	call   8048740 <malloc@plt>
 804a475:	85 c0                	test   %eax,%eax
 804a477:	a3 d4 fa c6 09       	mov    %eax,0x9c6fad4
 804a47c:	75 c6                	jne    804a444 <clear+0x24>
 804a47e:	a1 80 d1 04 08       	mov    0x804d180,%eax
 804a483:	c7 44 24 08 3e 00 00 	movl   $0x3e,0x8(%esp)
 804a48a:	00 
 804a48b:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 804a492:	00 
 804a493:	c7 04 24 60 b0 04 08 	movl   $0x804b060,(%esp)
 804a49a:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804a49e:	e8 8d e2 ff ff       	call   8048730 <fwrite@plt>
 804a4a3:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804a4aa:	e8 c1 e2 ff ff       	call   8048770 <exit@plt>
 804a4af:	90                   	nop

0804a4b0 <fcyc>:
 804a4b0:	56                   	push   %esi
 804a4b1:	53                   	push   %ebx
 804a4b2:	83 ec 24             	sub    $0x24,%esp
 804a4b5:	8b 74 24 30          	mov    0x30(%esp),%esi
 804a4b9:	8b 5c 24 34          	mov    0x34(%esp),%ebx
 804a4bd:	e8 1e ff ff ff       	call   804a3e0 <init_sampler>
 804a4c2:	8b 0d c4 fa c6 09    	mov    0x9c6fac4,%ecx
 804a4c8:	85 c9                	test   %ecx,%ecx
 804a4ca:	74 77                	je     804a543 <fcyc+0x93>
 804a4cc:	eb 2f                	jmp    804a4fd <fcyc+0x4d>
 804a4ce:	66 90                	xchg   %ax,%ax
 804a4d0:	e8 cb 03 00 00       	call   804a8a0 <start_comp_counter>
 804a4d5:	89 1c 24             	mov    %ebx,(%esp)
 804a4d8:	ff d6                	call   *%esi
 804a4da:	e8 01 05 00 00       	call   804a9e0 <get_comp_counter>
 804a4df:	dd 1c 24             	fstpl  (%esp)
 804a4e2:	e8 19 fe ff ff       	call   804a300 <add_sample>
 804a4e7:	e8 c4 fe ff ff       	call   804a3b0 <has_converged>
 804a4ec:	85 c0                	test   %eax,%eax
 804a4ee:	75 60                	jne    804a550 <fcyc+0xa0>
 804a4f0:	a1 60 d1 04 08       	mov    0x804d160,%eax
 804a4f5:	39 05 cc fa c6 09    	cmp    %eax,0x9c6facc
 804a4fb:	7d 53                	jge    804a550 <fcyc+0xa0>
 804a4fd:	8b 15 c8 fa c6 09    	mov    0x9c6fac8,%edx
 804a503:	85 d2                	test   %edx,%edx
 804a505:	74 c9                	je     804a4d0 <fcyc+0x20>
 804a507:	e8 14 ff ff ff       	call   804a420 <clear>
 804a50c:	eb c2                	jmp    804a4d0 <fcyc+0x20>
 804a50e:	66 90                	xchg   %ax,%ax
 804a510:	e8 0b ff ff ff       	call   804a420 <clear>
 804a515:	e8 f6 01 00 00       	call   804a710 <start_counter>
 804a51a:	89 1c 24             	mov    %ebx,(%esp)
 804a51d:	ff d6                	call   *%esi
 804a51f:	90                   	nop
 804a520:	e8 0b 02 00 00       	call   804a730 <get_counter>
 804a525:	dd 1c 24             	fstpl  (%esp)
 804a528:	e8 d3 fd ff ff       	call   804a300 <add_sample>
 804a52d:	e8 7e fe ff ff       	call   804a3b0 <has_converged>
 804a532:	85 c0                	test   %eax,%eax
 804a534:	75 1a                	jne    804a550 <fcyc+0xa0>
 804a536:	a1 60 d1 04 08       	mov    0x804d160,%eax
 804a53b:	39 05 cc fa c6 09    	cmp    %eax,0x9c6facc
 804a541:	7d 0d                	jge    804a550 <fcyc+0xa0>
 804a543:	a1 c8 fa c6 09       	mov    0x9c6fac8,%eax
 804a548:	85 c0                	test   %eax,%eax
 804a54a:	74 c9                	je     804a515 <fcyc+0x65>
 804a54c:	eb c0                	jmp    804a50e <fcyc+0x5e>
 804a54e:	66 90                	xchg   %ax,%ax
 804a550:	a1 d0 fa c6 09       	mov    0x9c6fad0,%eax
 804a555:	dd 00                	fldl   (%eax)
 804a557:	89 04 24             	mov    %eax,(%esp)
 804a55a:	dd 5c 24 10          	fstpl  0x10(%esp)
 804a55e:	e8 6d e1 ff ff       	call   80486d0 <free@plt>
 804a563:	c7 05 d0 fa c6 09 00 	movl   $0x0,0x9c6fad0
 804a56a:	00 00 00 
 804a56d:	dd 44 24 10          	fldl   0x10(%esp)
 804a571:	83 c4 24             	add    $0x24,%esp
 804a574:	5b                   	pop    %ebx
 804a575:	5e                   	pop    %esi
 804a576:	c3                   	ret    
 804a577:	89 f6                	mov    %esi,%esi
 804a579:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0804a580 <fcyc_v>:
 804a580:	56                   	push   %esi
 804a581:	53                   	push   %ebx
 804a582:	83 ec 24             	sub    $0x24,%esp
 804a585:	8b 74 24 30          	mov    0x30(%esp),%esi
 804a589:	8b 5c 24 34          	mov    0x34(%esp),%ebx
 804a58d:	e8 4e fe ff ff       	call   804a3e0 <init_sampler>
 804a592:	a1 c4 fa c6 09       	mov    0x9c6fac4,%eax
 804a597:	85 c0                	test   %eax,%eax
 804a599:	74 78                	je     804a613 <fcyc_v+0x93>
 804a59b:	eb 30                	jmp    804a5cd <fcyc_v+0x4d>
 804a59d:	8d 76 00             	lea    0x0(%esi),%esi
 804a5a0:	e8 fb 02 00 00       	call   804a8a0 <start_comp_counter>
 804a5a5:	89 1c 24             	mov    %ebx,(%esp)
 804a5a8:	ff d6                	call   *%esi
 804a5aa:	e8 31 04 00 00       	call   804a9e0 <get_comp_counter>
 804a5af:	dd 1c 24             	fstpl  (%esp)
 804a5b2:	e8 49 fd ff ff       	call   804a300 <add_sample>
 804a5b7:	e8 f4 fd ff ff       	call   804a3b0 <has_converged>
 804a5bc:	85 c0                	test   %eax,%eax
 804a5be:	75 60                	jne    804a620 <fcyc_v+0xa0>
 804a5c0:	a1 60 d1 04 08       	mov    0x804d160,%eax
 804a5c5:	39 05 cc fa c6 09    	cmp    %eax,0x9c6facc
 804a5cb:	7d 53                	jge    804a620 <fcyc_v+0xa0>
 804a5cd:	a1 c8 fa c6 09       	mov    0x9c6fac8,%eax
 804a5d2:	85 c0                	test   %eax,%eax
 804a5d4:	74 ca                	je     804a5a0 <fcyc_v+0x20>
 804a5d6:	e8 45 fe ff ff       	call   804a420 <clear>
 804a5db:	eb c3                	jmp    804a5a0 <fcyc_v+0x20>
 804a5dd:	8d 76 00             	lea    0x0(%esi),%esi
 804a5e0:	e8 3b fe ff ff       	call   804a420 <clear>
 804a5e5:	e8 26 01 00 00       	call   804a710 <start_counter>
 804a5ea:	89 1c 24             	mov    %ebx,(%esp)
 804a5ed:	ff d6                	call   *%esi
 804a5ef:	90                   	nop
 804a5f0:	e8 3b 01 00 00       	call   804a730 <get_counter>
 804a5f5:	dd 1c 24             	fstpl  (%esp)
 804a5f8:	e8 03 fd ff ff       	call   804a300 <add_sample>
 804a5fd:	e8 ae fd ff ff       	call   804a3b0 <has_converged>
 804a602:	85 c0                	test   %eax,%eax
 804a604:	75 1a                	jne    804a620 <fcyc_v+0xa0>
 804a606:	a1 60 d1 04 08       	mov    0x804d160,%eax
 804a60b:	39 05 cc fa c6 09    	cmp    %eax,0x9c6facc
 804a611:	7d 0d                	jge    804a620 <fcyc_v+0xa0>
 804a613:	a1 c8 fa c6 09       	mov    0x9c6fac8,%eax
 804a618:	85 c0                	test   %eax,%eax
 804a61a:	74 c9                	je     804a5e5 <fcyc_v+0x65>
 804a61c:	eb bf                	jmp    804a5dd <fcyc_v+0x5d>
 804a61e:	66 90                	xchg   %ax,%ax
 804a620:	a1 d0 fa c6 09       	mov    0x9c6fad0,%eax
 804a625:	dd 00                	fldl   (%eax)
 804a627:	89 04 24             	mov    %eax,(%esp)
 804a62a:	dd 5c 24 10          	fstpl  0x10(%esp)
 804a62e:	e8 9d e0 ff ff       	call   80486d0 <free@plt>
 804a633:	c7 05 d0 fa c6 09 00 	movl   $0x0,0x9c6fad0
 804a63a:	00 00 00 
 804a63d:	dd 44 24 10          	fldl   0x10(%esp)
 804a641:	83 c4 24             	add    $0x24,%esp
 804a644:	5b                   	pop    %ebx
 804a645:	5e                   	pop    %esi
 804a646:	c3                   	ret    
 804a647:	89 f6                	mov    %esi,%esi
 804a649:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0804a650 <set_fcyc_clear_cache>:
 804a650:	8b 44 24 04          	mov    0x4(%esp),%eax
 804a654:	a3 c8 fa c6 09       	mov    %eax,0x9c6fac8
 804a659:	c3                   	ret    
 804a65a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0804a660 <set_fcyc_cache_size>:
 804a660:	83 ec 1c             	sub    $0x1c,%esp
 804a663:	8b 44 24 20          	mov    0x20(%esp),%eax
 804a667:	3b 05 6c d1 04 08    	cmp    0x804d16c,%eax
 804a66d:	74 20                	je     804a68f <set_fcyc_cache_size+0x2f>
 804a66f:	a3 6c d1 04 08       	mov    %eax,0x804d16c
 804a674:	a1 d4 fa c6 09       	mov    0x9c6fad4,%eax
 804a679:	85 c0                	test   %eax,%eax
 804a67b:	74 12                	je     804a68f <set_fcyc_cache_size+0x2f>
 804a67d:	89 04 24             	mov    %eax,(%esp)
 804a680:	e8 4b e0 ff ff       	call   80486d0 <free@plt>
 804a685:	c7 05 d4 fa c6 09 00 	movl   $0x0,0x9c6fad4
 804a68c:	00 00 00 
 804a68f:	83 c4 1c             	add    $0x1c,%esp
 804a692:	c3                   	ret    
 804a693:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804a699:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0804a6a0 <set_fcyc_cache_block>:
 804a6a0:	8b 44 24 04          	mov    0x4(%esp),%eax
 804a6a4:	a3 68 d1 04 08       	mov    %eax,0x804d168
 804a6a9:	c3                   	ret    
 804a6aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0804a6b0 <set_fcyc_compensate>:
 804a6b0:	8b 44 24 04          	mov    0x4(%esp),%eax
 804a6b4:	a3 c4 fa c6 09       	mov    %eax,0x9c6fac4
 804a6b9:	c3                   	ret    
 804a6ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0804a6c0 <set_fcyc_k>:
 804a6c0:	8b 44 24 04          	mov    0x4(%esp),%eax
 804a6c4:	a3 64 d1 04 08       	mov    %eax,0x804d164
 804a6c9:	c3                   	ret    
 804a6ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0804a6d0 <set_fcyc_maxsamples>:
 804a6d0:	8b 44 24 04          	mov    0x4(%esp),%eax
 804a6d4:	a3 60 d1 04 08       	mov    %eax,0x804d160
 804a6d9:	c3                   	ret    
 804a6da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0804a6e0 <set_fcyc_epsilon>:
 804a6e0:	dd 44 24 04          	fldl   0x4(%esp)
 804a6e4:	dd 1d 70 d1 04 08    	fstpl  0x804d170
 804a6ea:	c3                   	ret    
 804a6eb:	66 90                	xchg   %ax,%ax
 804a6ed:	66 90                	xchg   %ax,%ax
 804a6ef:	90                   	nop

0804a6f0 <access_counter>:
 804a6f0:	53                   	push   %ebx
 804a6f1:	0f 31                	rdtsc  
 804a6f3:	89 d3                	mov    %edx,%ebx
 804a6f5:	89 c1                	mov    %eax,%ecx
 804a6f7:	8b 44 24 08          	mov    0x8(%esp),%eax
 804a6fb:	89 18                	mov    %ebx,(%eax)
 804a6fd:	8b 44 24 0c          	mov    0xc(%esp),%eax
 804a701:	89 08                	mov    %ecx,(%eax)
 804a703:	5b                   	pop    %ebx
 804a704:	c3                   	ret    
 804a705:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804a709:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0804a710 <start_counter>:
 804a710:	53                   	push   %ebx
 804a711:	0f 31                	rdtsc  
 804a713:	89 d3                	mov    %edx,%ebx
 804a715:	89 c1                	mov    %eax,%ecx
 804a717:	89 1d d8 fa c6 09    	mov    %ebx,0x9c6fad8
 804a71d:	89 0d dc fa c6 09    	mov    %ecx,0x9c6fadc
 804a723:	5b                   	pop    %ebx
 804a724:	c3                   	ret    
 804a725:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804a729:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0804a730 <get_counter>:
 804a730:	53                   	push   %ebx
 804a731:	83 ec 48             	sub    $0x48,%esp
 804a734:	0f 31                	rdtsc  
 804a736:	89 d1                	mov    %edx,%ecx
 804a738:	89 c3                	mov    %eax,%ebx
 804a73a:	2b 0d d8 fa c6 09    	sub    0x9c6fad8,%ecx
 804a740:	89 d8                	mov    %ebx,%eax
 804a742:	2b 05 dc fa c6 09    	sub    0x9c6fadc,%eax
 804a748:	0f 92 c2             	setb   %dl
 804a74b:	31 db                	xor    %ebx,%ebx
 804a74d:	0f b6 d2             	movzbl %dl,%edx
 804a750:	29 d1                	sub    %edx,%ecx
 804a752:	31 d2                	xor    %edx,%edx
 804a754:	89 4c 24 38          	mov    %ecx,0x38(%esp)
 804a758:	89 5c 24 3c          	mov    %ebx,0x3c(%esp)
 804a75c:	df 6c 24 38          	fildll 0x38(%esp)
 804a760:	d8 0d ec b0 04 08    	fmuls  0x804b0ec
 804a766:	89 44 24 38          	mov    %eax,0x38(%esp)
 804a76a:	89 54 24 3c          	mov    %edx,0x3c(%esp)
 804a76e:	d8 0d f0 b0 04 08    	fmuls  0x804b0f0
 804a774:	df 6c 24 38          	fildll 0x38(%esp)
 804a778:	de c1                	faddp  %st,%st(1)
 804a77a:	d9 ee                	fldz   
 804a77c:	df e9                	fucomip %st(1),%st
 804a77e:	77 08                	ja     804a788 <get_counter+0x58>
 804a780:	83 c4 48             	add    $0x48,%esp
 804a783:	5b                   	pop    %ebx
 804a784:	c3                   	ret    
 804a785:	8d 76 00             	lea    0x0(%esi),%esi
 804a788:	a1 80 d1 04 08       	mov    0x804d180,%eax
 804a78d:	dd 54 24 0c          	fstl   0xc(%esp)
 804a791:	c7 44 24 08 a0 b0 04 	movl   $0x804b0a0,0x8(%esp)
 804a798:	08 
 804a799:	dd 5c 24 20          	fstpl  0x20(%esp)
 804a79d:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 804a7a4:	00 
 804a7a5:	89 04 24             	mov    %eax,(%esp)
 804a7a8:	e8 63 e0 ff ff       	call   8048810 <__fprintf_chk@plt>
 804a7ad:	dd 44 24 20          	fldl   0x20(%esp)
 804a7b1:	83 c4 48             	add    $0x48,%esp
 804a7b4:	5b                   	pop    %ebx
 804a7b5:	c3                   	ret    
 804a7b6:	8d 76 00             	lea    0x0(%esi),%esi
 804a7b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0804a7c0 <ovhd>:
 804a7c0:	83 ec 0c             	sub    $0xc,%esp
 804a7c3:	89 5c 24 04          	mov    %ebx,0x4(%esp)
 804a7c7:	89 74 24 08          	mov    %esi,0x8(%esp)
 804a7cb:	0f 31                	rdtsc  
 804a7cd:	89 d6                	mov    %edx,%esi
 804a7cf:	89 c3                	mov    %eax,%ebx
 804a7d1:	89 35 d8 fa c6 09    	mov    %esi,0x9c6fad8
 804a7d7:	89 1d dc fa c6 09    	mov    %ebx,0x9c6fadc
 804a7dd:	e8 4e ff ff ff       	call   804a730 <get_counter>
 804a7e2:	dd d8                	fstp   %st(0)
 804a7e4:	89 35 d8 fa c6 09    	mov    %esi,0x9c6fad8
 804a7ea:	8b 74 24 08          	mov    0x8(%esp),%esi
 804a7ee:	89 1d dc fa c6 09    	mov    %ebx,0x9c6fadc
 804a7f4:	8b 5c 24 04          	mov    0x4(%esp),%ebx
 804a7f8:	83 c4 0c             	add    $0xc,%esp
 804a7fb:	e9 30 ff ff ff       	jmp    804a730 <get_counter>

0804a800 <mhz_full>:
 804a800:	83 ec 2c             	sub    $0x2c,%esp
 804a803:	89 5c 24 24          	mov    %ebx,0x24(%esp)
 804a807:	8b 5c 24 34          	mov    0x34(%esp),%ebx
 804a80b:	89 74 24 28          	mov    %esi,0x28(%esp)
 804a80f:	0f 31                	rdtsc  
 804a811:	89 d6                	mov    %edx,%esi
 804a813:	89 c1                	mov    %eax,%ecx
 804a815:	89 0d dc fa c6 09    	mov    %ecx,0x9c6fadc
 804a81b:	89 1c 24             	mov    %ebx,(%esp)
 804a81e:	89 35 d8 fa c6 09    	mov    %esi,0x9c6fad8
 804a824:	e8 d7 de ff ff       	call   8048700 <sleep@plt>
 804a829:	e8 02 ff ff ff       	call   804a730 <get_counter>
 804a82e:	8b 44 24 30          	mov    0x30(%esp),%eax
 804a832:	89 5c 24 1c          	mov    %ebx,0x1c(%esp)
 804a836:	85 c0                	test   %eax,%eax
 804a838:	db 44 24 1c          	fildl  0x1c(%esp)
 804a83c:	d8 0d f4 b0 04 08    	fmuls  0x804b0f4
 804a842:	de f9                	fdivrp %st,%st(1)
 804a844:	74 20                	je     804a866 <mhz_full+0x66>
 804a846:	dd 54 24 08          	fstl   0x8(%esp)
 804a84a:	c7 44 24 04 c8 b0 04 	movl   $0x804b0c8,0x4(%esp)
 804a851:	08 
 804a852:	dd 5c 24 10          	fstpl  0x10(%esp)
 804a856:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804a85d:	e8 9e df ff ff       	call   8048800 <__printf_chk@plt>
 804a862:	dd 44 24 10          	fldl   0x10(%esp)
 804a866:	8b 5c 24 24          	mov    0x24(%esp),%ebx
 804a86a:	8b 74 24 28          	mov    0x28(%esp),%esi
 804a86e:	83 c4 2c             	add    $0x2c,%esp
 804a871:	c3                   	ret    
 804a872:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804a879:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0804a880 <mhz>:
 804a880:	83 ec 1c             	sub    $0x1c,%esp
 804a883:	8b 44 24 20          	mov    0x20(%esp),%eax
 804a887:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)
 804a88e:	00 
 804a88f:	89 04 24             	mov    %eax,(%esp)
 804a892:	e8 69 ff ff ff       	call   804a800 <mhz_full>
 804a897:	83 c4 1c             	add    $0x1c,%esp
 804a89a:	c3                   	ret    
 804a89b:	90                   	nop
 804a89c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0804a8a0 <start_comp_counter>:
 804a8a0:	57                   	push   %edi
 804a8a1:	56                   	push   %esi
 804a8a2:	53                   	push   %ebx
 804a8a3:	83 ec 50             	sub    $0x50,%esp
 804a8a6:	d9 ee                	fldz   
 804a8a8:	dd 05 e0 fa c6 09    	fldl   0x9c6fae0
 804a8ae:	8d 74 24 40          	lea    0x40(%esp),%esi
 804a8b2:	df e9                	fucomip %st(1),%st
 804a8b4:	dd d8                	fstp   %st(0)
 804a8b6:	7a 08                	jp     804a8c0 <start_comp_counter+0x20>
 804a8b8:	eb 36                	jmp    804a8f0 <start_comp_counter+0x50>
 804a8ba:	dd d8                	fstp   %st(0)
 804a8bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804a8c0:	89 34 24             	mov    %esi,(%esp)
 804a8c3:	e8 f8 dd ff ff       	call   80486c0 <times@plt>
 804a8c8:	8b 44 24 40          	mov    0x40(%esp),%eax
 804a8cc:	a3 e8 fa c6 09       	mov    %eax,0x9c6fae8
 804a8d1:	0f 31                	rdtsc  
 804a8d3:	89 d3                	mov    %edx,%ebx
 804a8d5:	89 c1                	mov    %eax,%ecx
 804a8d7:	89 1d d8 fa c6 09    	mov    %ebx,0x9c6fad8
 804a8dd:	89 0d dc fa c6 09    	mov    %ecx,0x9c6fadc
 804a8e3:	83 c4 50             	add    $0x50,%esp
 804a8e6:	5b                   	pop    %ebx
 804a8e7:	5e                   	pop    %esi
 804a8e8:	5f                   	pop    %edi
 804a8e9:	c3                   	ret    
 804a8ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804a8f0:	75 ce                	jne    804a8c0 <start_comp_counter+0x20>
 804a8f2:	89 34 24             	mov    %esi,(%esp)
 804a8f5:	e8 c6 dd ff ff       	call   80486c0 <times@plt>
 804a8fa:	8b 7c 24 40          	mov    0x40(%esp),%edi
 804a8fe:	0f 31                	rdtsc  
 804a900:	89 d3                	mov    %edx,%ebx
 804a902:	89 c1                	mov    %eax,%ecx
 804a904:	89 1d d8 fa c6 09    	mov    %ebx,0x9c6fad8
 804a90a:	31 db                	xor    %ebx,%ebx
 804a90c:	89 0d dc fa c6 09    	mov    %ecx,0x9c6fadc
 804a912:	e8 19 fe ff ff       	call   804a730 <get_counter>
 804a917:	dd 5c 24 30          	fstpl  0x30(%esp)
 804a91b:	eb 0c                	jmp    804a929 <start_comp_counter+0x89>
 804a91d:	8d 76 00             	lea    0x0(%esi),%esi
 804a920:	dd d8                	fstp   %st(0)
 804a922:	dd d8                	fstp   %st(0)
 804a924:	83 fb 63             	cmp    $0x63,%ebx
 804a927:	7f 97                	jg     804a8c0 <start_comp_counter+0x20>
 804a929:	e8 02 fe ff ff       	call   804a730 <get_counter>
 804a92e:	dd 44 24 30          	fldl   0x30(%esp)
 804a932:	d8 e9                	fsubr  %st(1),%st
 804a934:	d9 05 f8 b0 04 08    	flds   0x804b0f8
 804a93a:	d9 c9                	fxch   %st(1)
 804a93c:	db e9                	fucomi %st(1),%st
 804a93e:	dd d9                	fstp   %st(1)
 804a940:	72 de                	jb     804a920 <start_comp_counter+0x80>
 804a942:	d9 c9                	fxch   %st(1)
 804a944:	dd 5c 24 20          	fstpl  0x20(%esp)
 804a948:	89 34 24             	mov    %esi,(%esp)
 804a94b:	dd 5c 24 10          	fstpl  0x10(%esp)
 804a94f:	e8 6c dd ff ff       	call   80486c0 <times@plt>
 804a954:	8b 44 24 40          	mov    0x40(%esp),%eax
 804a958:	39 f8                	cmp    %edi,%eax
 804a95a:	dd 44 24 20          	fldl   0x20(%esp)
 804a95e:	dd 44 24 10          	fldl   0x10(%esp)
 804a962:	7e 54                	jle    804a9b8 <start_comp_counter+0x118>
 804a964:	89 c2                	mov    %eax,%edx
 804a966:	29 fa                	sub    %edi,%edx
 804a968:	89 54 24 3c          	mov    %edx,0x3c(%esp)
 804a96c:	db 44 24 3c          	fildl  0x3c(%esp)
 804a970:	de f9                	fdivrp %st,%st(1)
 804a972:	dd 05 e0 fa c6 09    	fldl   0x9c6fae0
 804a978:	d9 ee                	fldz   
 804a97a:	d9 c9                	fxch   %st(1)
 804a97c:	db e9                	fucomi %st(1),%st
 804a97e:	dd d9                	fstp   %st(1)
 804a980:	7a 4e                	jp     804a9d0 <start_comp_counter+0x130>
 804a982:	75 4c                	jne    804a9d0 <start_comp_counter+0x130>
 804a984:	dd d8                	fstp   %st(0)
 804a986:	d9 05 fc b0 04 08    	flds   0x804b0fc
 804a98c:	d9 c9                	fxch   %st(1)
 804a98e:	db e9                	fucomi %st(1),%st
 804a990:	dd d9                	fstp   %st(1)
 804a992:	76 0c                	jbe    804a9a0 <start_comp_counter+0x100>
 804a994:	dd 1d e0 fa c6 09    	fstpl  0x9c6fae0
 804a99a:	eb 0e                	jmp    804a9aa <start_comp_counter+0x10a>
 804a99c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804a9a0:	dd d8                	fstp   %st(0)
 804a9a2:	eb 06                	jmp    804a9aa <start_comp_counter+0x10a>
 804a9a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804a9a8:	dd d8                	fstp   %st(0)
 804a9aa:	83 c3 01             	add    $0x1,%ebx
 804a9ad:	89 c7                	mov    %eax,%edi
 804a9af:	eb 09                	jmp    804a9ba <start_comp_counter+0x11a>
 804a9b1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804a9b8:	dd d8                	fstp   %st(0)
 804a9ba:	83 fb 63             	cmp    $0x63,%ebx
 804a9bd:	0f 8f f7 fe ff ff    	jg     804a8ba <start_comp_counter+0x1a>
 804a9c3:	dd 5c 24 30          	fstpl  0x30(%esp)
 804a9c7:	e9 5d ff ff ff       	jmp    804a929 <start_comp_counter+0x89>
 804a9cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804a9d0:	df e9                	fucomip %st(1),%st
 804a9d2:	76 d4                	jbe    804a9a8 <start_comp_counter+0x108>
 804a9d4:	eb b0                	jmp    804a986 <start_comp_counter+0xe6>
 804a9d6:	8d 76 00             	lea    0x0(%esi),%esi
 804a9d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0804a9e0 <get_comp_counter>:
 804a9e0:	83 ec 3c             	sub    $0x3c,%esp
 804a9e3:	e8 48 fd ff ff       	call   804a730 <get_counter>
 804a9e8:	8d 44 24 20          	lea    0x20(%esp),%eax
 804a9ec:	89 04 24             	mov    %eax,(%esp)
 804a9ef:	dd 5c 24 10          	fstpl  0x10(%esp)
 804a9f3:	e8 c8 dc ff ff       	call   80486c0 <times@plt>
 804a9f8:	8b 44 24 20          	mov    0x20(%esp),%eax
 804a9fc:	2b 05 e8 fa c6 09    	sub    0x9c6fae8,%eax
 804aa02:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 804aa06:	db 44 24 1c          	fildl  0x1c(%esp)
 804aa0a:	dc 0d e0 fa c6 09    	fmull  0x9c6fae0
 804aa10:	dd 44 24 10          	fldl   0x10(%esp)
 804aa14:	83 c4 3c             	add    $0x3c,%esp
 804aa17:	de e1                	fsubp  %st,%st(1)
 804aa19:	c3                   	ret    
 804aa1a:	66 90                	xchg   %ax,%ax
 804aa1c:	66 90                	xchg   %ax,%ax
 804aa1e:	66 90                	xchg   %ax,%ax

0804aa20 <__libc_csu_init>:
 804aa20:	55                   	push   %ebp
 804aa21:	57                   	push   %edi
 804aa22:	56                   	push   %esi
 804aa23:	53                   	push   %ebx
 804aa24:	e8 69 00 00 00       	call   804aa92 <__i686.get_pc_thunk.bx>
 804aa29:	81 c3 d7 25 00 00    	add    $0x25d7,%ebx
 804aa2f:	83 ec 1c             	sub    $0x1c,%esp
 804aa32:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 804aa36:	8d bb 04 ff ff ff    	lea    -0xfc(%ebx),%edi
 804aa3c:	e8 3b dc ff ff       	call   804867c <_init>
 804aa41:	8d 83 00 ff ff ff    	lea    -0x100(%ebx),%eax
 804aa47:	29 c7                	sub    %eax,%edi
 804aa49:	c1 ff 02             	sar    $0x2,%edi
 804aa4c:	85 ff                	test   %edi,%edi
 804aa4e:	74 29                	je     804aa79 <__libc_csu_init+0x59>
 804aa50:	31 f6                	xor    %esi,%esi
 804aa52:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804aa58:	8b 44 24 38          	mov    0x38(%esp),%eax
 804aa5c:	89 2c 24             	mov    %ebp,(%esp)
 804aa5f:	89 44 24 08          	mov    %eax,0x8(%esp)
 804aa63:	8b 44 24 34          	mov    0x34(%esp),%eax
 804aa67:	89 44 24 04          	mov    %eax,0x4(%esp)
 804aa6b:	ff 94 b3 00 ff ff ff 	call   *-0x100(%ebx,%esi,4)
 804aa72:	83 c6 01             	add    $0x1,%esi
 804aa75:	39 fe                	cmp    %edi,%esi
 804aa77:	75 df                	jne    804aa58 <__libc_csu_init+0x38>
 804aa79:	83 c4 1c             	add    $0x1c,%esp
 804aa7c:	5b                   	pop    %ebx
 804aa7d:	5e                   	pop    %esi
 804aa7e:	5f                   	pop    %edi
 804aa7f:	5d                   	pop    %ebp
 804aa80:	c3                   	ret    
 804aa81:	eb 0d                	jmp    804aa90 <__libc_csu_fini>
 804aa83:	90                   	nop
 804aa84:	90                   	nop
 804aa85:	90                   	nop
 804aa86:	90                   	nop
 804aa87:	90                   	nop
 804aa88:	90                   	nop
 804aa89:	90                   	nop
 804aa8a:	90                   	nop
 804aa8b:	90                   	nop
 804aa8c:	90                   	nop
 804aa8d:	90                   	nop
 804aa8e:	90                   	nop
 804aa8f:	90                   	nop

0804aa90 <__libc_csu_fini>:
 804aa90:	f3 c3                	repz ret 

0804aa92 <__i686.get_pc_thunk.bx>:
 804aa92:	8b 1c 24             	mov    (%esp),%ebx
 804aa95:	c3                   	ret    
 804aa96:	66 90                	xchg   %ax,%ax

Disassembly of section .fini:

0804aa98 <_fini>:
 804aa98:	53                   	push   %ebx
 804aa99:	83 ec 08             	sub    $0x8,%esp
 804aa9c:	e8 00 00 00 00       	call   804aaa1 <_fini+0x9>
 804aaa1:	5b                   	pop    %ebx
 804aaa2:	81 c3 5f 25 00 00    	add    $0x255f,%ebx
 804aaa8:	83 c4 08             	add    $0x8,%esp
 804aaab:	5b                   	pop    %ebx
 804aaac:	c3                   	ret    

Disassembly of section .rodata:

0804aac0 <_fp_hw>:
 804aac0:	03 00                	add    (%eax),%eax
	...

0804aac4 <_IO_stdin_used>:
 804aac4:	01 00                	add    %eax,(%eax)
 804aac6:	02 00                	add    (%eax),%al
 804aac8:	45                   	inc    %ebp
 804aac9:	72 72                	jb     804ab3d <_IO_stdin_used+0x79>
 804aacb:	6f                   	outsl  %ds:(%esi),(%dx)
 804aacc:	72 3a                	jb     804ab08 <_IO_stdin_used+0x44>
 804aace:	20 4f 72             	and    %cl,0x72(%edi)
 804aad1:	69 67 69 6e 61 6c 20 	imul   $0x206c616e,0x69(%edi),%esp
 804aad8:	69 6d 61 67 65 20 68 	imul   $0x68206567,0x61(%ebp),%ebp
 804aadf:	61                   	popa   
 804aae0:	73 20                	jae    804ab02 <_IO_stdin_used+0x3e>
 804aae2:	62 65 65             	bound  %esp,0x65(%ebp)
 804aae5:	6e                   	outsb  %ds:(%esi),(%dx)
 804aae6:	20 63 68             	and    %ah,0x68(%ebx)
 804aae9:	61                   	popa   
 804aaea:	6e                   	outsb  %ds:(%esi),(%dx)
 804aaeb:	67 65 64 21 00       	gs and %eax,%fs:%gs:(%bx,%si)
 804aaf0:	45                   	inc    %ebp
 804aaf1:	52                   	push   %edx
 804aaf2:	52                   	push   %edx
 804aaf3:	4f                   	dec    %edi
 804aaf4:	52                   	push   %edx
 804aaf5:	3a 20                	cmp    (%eax),%ah
 804aaf7:	44                   	inc    %esp
 804aaf8:	69 6d 65 6e 73 69 6f 	imul   $0x6f69736e,0x65(%ebp),%ebp
 804aaff:	6e                   	outsb  %ds:(%esi),(%dx)
 804ab00:	3d 25 64 2c 20       	cmp    $0x202c6425,%eax
 804ab05:	25 64 20 65 72       	and    $0x72652064,%eax
 804ab0a:	72 6f                	jb     804ab7b <_IO_stdin_used+0xb7>
 804ab0c:	72 73                	jb     804ab81 <_IO_stdin_used+0xbd>
 804ab0e:	0a 00                	or     (%eax),%al
 804ab10:	45                   	inc    %ebp
 804ab11:	2e                   	cs
 804ab12:	67                   	addr16
 804ab13:	2e                   	cs
 804ab14:	2c 20                	sub    $0x20,%al
 804ab16:	54                   	push   %esp
 804ab17:	68 65 20 66 6f       	push   $0x6f662065
 804ab1c:	6c                   	insb   (%dx),%es:(%edi)
 804ab1d:	6c                   	insb   (%dx),%es:(%edi)
 804ab1e:	6f                   	outsl  %ds:(%esi),(%dx)
 804ab1f:	77 69                	ja     804ab8a <_IO_stdin_used+0xc6>
 804ab21:	6e                   	outsb  %ds:(%esi),(%dx)
 804ab22:	67 20 74 77          	and    %dh,0x77(%si)
 804ab26:	6f                   	outsl  %ds:(%esi),(%dx)
 804ab27:	20 70 69             	and    %dh,0x69(%eax)
 804ab2a:	78 65                	js     804ab91 <_IO_stdin_used+0xcd>
 804ab2c:	6c                   	insb   (%dx),%es:(%edi)
 804ab2d:	73 20                	jae    804ab4f <_IO_stdin_used+0x8b>
 804ab2f:	73 68                	jae    804ab99 <_IO_stdin_used+0xd5>
 804ab31:	6f                   	outsl  %ds:(%esi),(%dx)
 804ab32:	75 6c                	jne    804aba0 <_IO_stdin_used+0xdc>
 804ab34:	64 20 68 61          	and    %ch,%fs:0x61(%eax)
 804ab38:	76 65                	jbe    804ab9f <_IO_stdin_used+0xdb>
 804ab3a:	20 65 71             	and    %ah,0x71(%ebp)
 804ab3d:	75 61                	jne    804aba0 <_IO_stdin_used+0xdc>
 804ab3f:	6c                   	insb   (%dx),%es:(%edi)
 804ab40:	20 76 61             	and    %dh,0x61(%esi)
 804ab43:	6c                   	insb   (%dx),%es:(%edi)
 804ab44:	75 65                	jne    804abab <_IO_stdin_used+0xe7>
 804ab46:	3a 00                	cmp    (%eax),%al
 804ab48:	73 72                	jae    804abbc <_IO_stdin_used+0xf8>
 804ab4a:	63 5b 25             	arpl   %bx,0x25(%ebx)
 804ab4d:	64                   	fs
 804ab4e:	5d                   	pop    %ebp
 804ab4f:	5b                   	pop    %ebx
 804ab50:	25 64 5d 2e 7b       	and    $0x7b2e5d64,%eax
 804ab55:	72 65                	jb     804abbc <_IO_stdin_used+0xf8>
 804ab57:	64                   	fs
 804ab58:	2c 67                	sub    $0x67,%al
 804ab5a:	72 65                	jb     804abc1 <_IO_stdin_used+0xfd>
 804ab5c:	65 6e                	outsb  %gs:(%esi),(%dx)
 804ab5e:	2c 62                	sub    $0x62,%al
 804ab60:	6c                   	insb   (%dx),%es:(%edi)
 804ab61:	75 65                	jne    804abc8 <_IO_stdin_used+0x104>
 804ab63:	7d 20                	jge    804ab85 <_IO_stdin_used+0xc1>
 804ab65:	3d 20 7b 25 64       	cmp    $0x64257b20,%eax
 804ab6a:	2c 25                	sub    $0x25,%al
 804ab6c:	64                   	fs
 804ab6d:	2c 25                	sub    $0x25,%al
 804ab6f:	64                   	fs
 804ab70:	7d 0a                	jge    804ab7c <_IO_stdin_used+0xb8>
 804ab72:	00 00                	add    %al,(%eax)
 804ab74:	64                   	fs
 804ab75:	73 74                	jae    804abeb <_IO_stdin_used+0x127>
 804ab77:	5b                   	pop    %ebx
 804ab78:	25 64 5d 5b 25       	and    $0x255b5d64,%eax
 804ab7d:	64                   	fs
 804ab7e:	5d                   	pop    %ebp
 804ab7f:	2e 7b 72             	jnp,pn 804abf4 <_IO_stdin_used+0x130>
 804ab82:	65                   	gs
 804ab83:	64                   	fs
 804ab84:	2c 67                	sub    $0x67,%al
 804ab86:	72 65                	jb     804abed <_IO_stdin_used+0x129>
 804ab88:	65 6e                	outsb  %gs:(%esi),(%dx)
 804ab8a:	2c 62                	sub    $0x62,%al
 804ab8c:	6c                   	insb   (%dx),%es:(%edi)
 804ab8d:	75 65                	jne    804abf4 <_IO_stdin_used+0x130>
 804ab8f:	7d 20                	jge    804abb1 <_IO_stdin_used+0xed>
 804ab91:	3d 20 7b 25 64       	cmp    $0x64257b20,%eax
 804ab96:	2c 25                	sub    $0x25,%al
 804ab98:	64                   	fs
 804ab99:	2c 25                	sub    $0x25,%al
 804ab9b:	64                   	fs
 804ab9c:	7d 0a                	jge    804aba8 <_IO_stdin_used+0xe4>
 804ab9e:	00 00                	add    %al,(%eax)
 804aba0:	59                   	pop    %ecx
 804aba1:	6f                   	outsl  %ds:(%esi),(%dx)
 804aba2:	75 20                	jne    804abc4 <_IO_stdin_used+0x100>
 804aba4:	68 61 76 65 20       	push   $0x20657661
 804aba9:	64                   	fs
 804abaa:	73 74                	jae    804ac20 <_IO_stdin_used+0x15c>
 804abac:	5b                   	pop    %ebx
 804abad:	25 64 5d 5b 25       	and    $0x255b5d64,%eax
 804abb2:	64                   	fs
 804abb3:	5d                   	pop    %ebp
 804abb4:	2e 7b 72             	jnp,pn 804ac29 <_IO_stdin_used+0x165>
 804abb7:	65                   	gs
 804abb8:	64                   	fs
 804abb9:	2c 67                	sub    $0x67,%al
 804abbb:	72 65                	jb     804ac22 <_IO_stdin_used+0x15e>
 804abbd:	65 6e                	outsb  %gs:(%esi),(%dx)
 804abbf:	2c 62                	sub    $0x62,%al
 804abc1:	6c                   	insb   (%dx),%es:(%edi)
 804abc2:	75 65                	jne    804ac29 <_IO_stdin_used+0x165>
 804abc4:	7d 20                	jge    804abe6 <_IO_stdin_used+0x122>
 804abc6:	3d 20 7b 25 64       	cmp    $0x64257b20,%eax
 804abcb:	2c 25                	sub    $0x25,%al
 804abcd:	64                   	fs
 804abce:	2c 25                	sub    $0x25,%al
 804abd0:	64                   	fs
 804abd1:	7d 0a                	jge    804abdd <_IO_stdin_used+0x119>
 804abd3:	00 49 74             	add    %cl,0x74(%ecx)
 804abd6:	20 73 68             	and    %dh,0x68(%ebx)
 804abd9:	6f                   	outsl  %ds:(%esi),(%dx)
 804abda:	75 6c                	jne    804ac48 <_IO_stdin_used+0x184>
 804abdc:	64 20 62 65          	and    %ah,%fs:0x65(%edx)
 804abe0:	20 64 73 74          	and    %ah,0x74(%ebx,%esi,2)
 804abe4:	5b                   	pop    %ebx
 804abe5:	25 64 5d 5b 25       	and    $0x255b5d64,%eax
 804abea:	64                   	fs
 804abeb:	5d                   	pop    %ebp
 804abec:	2e 7b 72             	jnp,pn 804ac61 <_IO_stdin_used+0x19d>
 804abef:	65                   	gs
 804abf0:	64                   	fs
 804abf1:	2c 67                	sub    $0x67,%al
 804abf3:	72 65                	jb     804ac5a <_IO_stdin_used+0x196>
 804abf5:	65 6e                	outsb  %gs:(%esi),(%dx)
 804abf7:	2c 62                	sub    $0x62,%al
 804abf9:	6c                   	insb   (%dx),%es:(%edi)
 804abfa:	75 65                	jne    804ac61 <_IO_stdin_used+0x19d>
 804abfc:	7d 20                	jge    804ac1e <_IO_stdin_used+0x15a>
 804abfe:	3d 20 7b 25 64       	cmp    $0x64257b20,%eax
 804ac03:	2c 25                	sub    $0x25,%al
 804ac05:	64                   	fs
 804ac06:	2c 25                	sub    $0x25,%al
 804ac08:	64                   	fs
 804ac09:	7d 0a                	jge    804ac15 <_IO_stdin_used+0x151>
 804ac0b:	00 42 65             	add    %al,0x65(%edx)
 804ac0e:	6e                   	outsb  %ds:(%esi),(%dx)
 804ac0f:	63 68 6d             	arpl   %bp,0x6d(%eax)
 804ac12:	61                   	popa   
 804ac13:	72 6b                	jb     804ac80 <_IO_stdin_used+0x1bc>
 804ac15:	20 22                	and    %ah,(%edx)
 804ac17:	25 73 22 20 66       	and    $0x66202273,%eax
 804ac1c:	61                   	popa   
 804ac1d:	69 6c 65 64 20 63 6f 	imul   $0x726f6320,0x64(%ebp,%eiz,2),%ebp
 804ac24:	72 
 804ac25:	72 65                	jb     804ac8c <_IO_stdin_used+0x1c8>
 804ac27:	63 74 6e 65          	arpl   %si,0x65(%esi,%ebp,2)
 804ac2b:	73 73                	jae    804aca0 <_IO_stdin_used+0x1dc>
 804ac2d:	20 63 68             	and    %ah,0x68(%ebx)
 804ac30:	65 63 6b 20          	arpl   %bp,%gs:0x20(%ebx)
 804ac34:	66 6f                	outsw  %ds:(%esi),(%dx)
 804ac36:	72 20                	jb     804ac58 <_IO_stdin_used+0x194>
 804ac38:	64 69 6d 65 6e 73 69 	imul   $0x6f69736e,%fs:0x65(%ebp),%ebp
 804ac3f:	6f 
 804ac40:	6e                   	outsb  %ds:(%esi),(%dx)
 804ac41:	20 25 64 2e 0a 00    	and    %ah,0xa2e64
 804ac47:	00 46 61             	add    %al,0x61(%esi)
 804ac4a:	74 61                	je     804acad <_IO_stdin_used+0x1e9>
 804ac4c:	6c                   	insb   (%dx),%es:(%edi)
 804ac4d:	20 45 72             	and    %al,0x72(%ebp)
 804ac50:	72 6f                	jb     804acc1 <_IO_stdin_used+0x1fd>
 804ac52:	72 3a                	jb     804ac8e <_IO_stdin_used+0x1ca>
 804ac54:	20 4e 6f             	and    %cl,0x6f(%esi)
 804ac57:	6e                   	outsb  %ds:(%esi),(%dx)
 804ac58:	2d 70 6f 73 69       	sub    $0x69736f70,%eax
 804ac5d:	74 69                	je     804acc8 <_IO_stdin_used+0x204>
 804ac5f:	76 65                	jbe    804acc6 <_IO_stdin_used+0x202>
 804ac61:	20 43 50             	and    %al,0x50(%ebx)
 804ac64:	45                   	inc    %ebp
 804ac65:	20 76 61             	and    %dh,0x61(%esi)
 804ac68:	6c                   	insb   (%dx),%es:(%edi)
 804ac69:	75 65                	jne    804acd0 <_IO_stdin_used+0x20c>
 804ac6b:	2e 2e 2e 00 00       	cs cs add %al,%cs:(%eax)
 804ac70:	55                   	push   %ebp
 804ac71:	73 61                	jae    804acd4 <_IO_stdin_used+0x210>
 804ac73:	67 65 3a 20          	cmp    %gs:(%bx,%si),%ah
 804ac77:	25 73 20 5b 2d       	and    $0x2d5b2073,%eax
 804ac7c:	68 71 67 5d 20       	push   $0x205d6771
 804ac81:	5b                   	pop    %ebx
 804ac82:	2d 66 20 3c 66       	sub    $0x663c2066,%eax
 804ac87:	75 6e                	jne    804acf7 <_IO_stdin_used+0x233>
 804ac89:	63 5f 66             	arpl   %bx,0x66(%edi)
 804ac8c:	69 6c 65 3e 5d 20 5b 	imul   $0x2d5b205d,0x3e(%ebp,%eiz,2),%ebp
 804ac93:	2d 
 804ac94:	64 20 3c 64          	and    %bh,%fs:(%esp,%eiz,2)
 804ac98:	75 6d                	jne    804ad07 <_IO_stdin_used+0x243>
 804ac9a:	70 5f                	jo     804acfb <_IO_stdin_used+0x237>
 804ac9c:	66 69 6c 65 3e 5d 0a 	imul   $0xa5d,0x3e(%ebp,%eiz,2),%bp
 804aca3:	00 20                	add    %ah,(%eax)
 804aca5:	20 2d 68 20 20 20    	and    %ch,0x20202068
 804acab:	20 20                	and    %ah,(%eax)
 804acad:	20 20                	and    %ah,(%eax)
 804acaf:	20 20                	and    %ah,(%eax)
 804acb1:	50                   	push   %eax
 804acb2:	72 69                	jb     804ad1d <_IO_stdin_used+0x259>
 804acb4:	6e                   	outsb  %ds:(%esi),(%dx)
 804acb5:	74 20                	je     804acd7 <_IO_stdin_used+0x213>
 804acb7:	74 68                	je     804ad21 <_IO_stdin_used+0x25d>
 804acb9:	69 73 20 6d 65 73 73 	imul   $0x7373656d,0x20(%ebx),%esi
 804acc0:	61                   	popa   
 804acc1:	67 65 0a 00          	or     %gs:(%bx,%si),%al
 804acc5:	00 00                	add    %al,(%eax)
 804acc7:	00 20                	add    %ah,(%eax)
 804acc9:	20 2d 71 20 20 20    	and    %ch,0x20202071
 804accf:	20 20                	and    %ah,(%eax)
 804acd1:	20 20                	and    %ah,(%eax)
 804acd3:	20 20                	and    %ah,(%eax)
 804acd5:	51                   	push   %ecx
 804acd6:	75 69                	jne    804ad41 <_IO_stdin_used+0x27d>
 804acd8:	74 20                	je     804acfa <_IO_stdin_used+0x236>
 804acda:	61                   	popa   
 804acdb:	66                   	data16
 804acdc:	74 65                	je     804ad43 <_IO_stdin_used+0x27f>
 804acde:	72 20                	jb     804ad00 <_IO_stdin_used+0x23c>
 804ace0:	64                   	fs
 804ace1:	75 6d                	jne    804ad50 <_IO_stdin_used+0x28c>
 804ace3:	70 69                	jo     804ad4e <_IO_stdin_used+0x28a>
 804ace5:	6e                   	outsb  %ds:(%esi),(%dx)
 804ace6:	67 20 28             	and    %ch,(%bx,%si)
 804ace9:	75 73                	jne    804ad5e <_IO_stdin_used+0x29a>
 804aceb:	65 20 77 69          	and    %dh,%gs:0x69(%edi)
 804acef:	74 68                	je     804ad59 <_IO_stdin_used+0x295>
 804acf1:	20 2d 64 20 29 0a    	and    %ch,0xa292064
 804acf7:	00 20                	add    %ah,(%eax)
 804acf9:	20 2d 67 20 20 20    	and    %ch,0x20202067
 804acff:	20 20                	and    %ah,(%eax)
 804ad01:	20 20                	and    %ah,(%eax)
 804ad03:	20 20                	and    %ah,(%eax)
 804ad05:	41                   	inc    %ecx
 804ad06:	75 74                	jne    804ad7c <_IO_stdin_used+0x2b8>
 804ad08:	6f                   	outsl  %ds:(%esi),(%dx)
 804ad09:	67 72 61             	addr16 jb 804ad6d <_IO_stdin_used+0x2a9>
 804ad0c:	64                   	fs
 804ad0d:	65                   	gs
 804ad0e:	72 20                	jb     804ad30 <_IO_stdin_used+0x26c>
 804ad10:	6d                   	insl   (%dx),%es:(%edi)
 804ad11:	6f                   	outsl  %ds:(%esi),(%dx)
 804ad12:	64 65 3a 20          	fs cmp %fs:%gs:(%eax),%ah
 804ad16:	63 68 65             	arpl   %bp,0x65(%eax)
 804ad19:	63 6b 73             	arpl   %bp,0x73(%ebx)
 804ad1c:	20 6f 6e             	and    %ch,0x6e(%edi)
 804ad1f:	6c                   	insb   (%dx),%es:(%edi)
 804ad20:	79 20                	jns    804ad42 <_IO_stdin_used+0x27e>
 804ad22:	72 6f                	jb     804ad93 <_IO_stdin_used+0x2cf>
 804ad24:	74 61                	je     804ad87 <_IO_stdin_used+0x2c3>
 804ad26:	74 65                	je     804ad8d <_IO_stdin_used+0x2c9>
 804ad28:	28 29                	sub    %ch,(%ecx)
 804ad2a:	20 61 6e             	and    %ah,0x6e(%ecx)
 804ad2d:	64 20 73 6d          	and    %dh,%fs:0x6d(%ebx)
 804ad31:	6f                   	outsl  %ds:(%esi),(%dx)
 804ad32:	6f                   	outsl  %ds:(%esi),(%dx)
 804ad33:	74 68                	je     804ad9d <_IO_stdin_used+0x2d9>
 804ad35:	28 29                	sub    %ch,(%ecx)
 804ad37:	0a 00                	or     (%eax),%al
 804ad39:	00 00                	add    %al,(%eax)
 804ad3b:	00 20                	add    %ah,(%eax)
 804ad3d:	20 2d 66 20 3c 66    	and    %ch,0x663c2066
 804ad43:	69 6c 65 3e 20 20 47 	imul   $0x65472020,0x3e(%ebp,%eiz,2),%ebp
 804ad4a:	65 
 804ad4b:	74 20                	je     804ad6d <_IO_stdin_used+0x2a9>
 804ad4d:	74 65                	je     804adb4 <_IO_stdin_used+0x2f0>
 804ad4f:	73 74                	jae    804adc5 <_IO_stdin_used+0x301>
 804ad51:	20 66 75             	and    %ah,0x75(%esi)
 804ad54:	6e                   	outsb  %ds:(%esi),(%dx)
 804ad55:	63 74 69 6f          	arpl   %si,0x6f(%ecx,%ebp,2)
 804ad59:	6e                   	outsb  %ds:(%esi),(%dx)
 804ad5a:	20 6e 61             	and    %ch,0x61(%esi)
 804ad5d:	6d                   	insl   (%dx),%es:(%edi)
 804ad5e:	65                   	gs
 804ad5f:	73 20                	jae    804ad81 <_IO_stdin_used+0x2bd>
 804ad61:	66                   	data16
 804ad62:	72 6f                	jb     804add3 <_IO_stdin_used+0x30f>
 804ad64:	6d                   	insl   (%dx),%es:(%edi)
 804ad65:	20 64 75 6d          	and    %ah,0x6d(%ebp,%esi,2)
 804ad69:	70 20                	jo     804ad8b <_IO_stdin_used+0x2c7>
 804ad6b:	66 69 6c 65 20 3c 66 	imul   $0x663c,0x20(%ebp,%eiz,2),%bp
 804ad72:	69 6c 65 3e 0a 00 20 	imul   $0x2020000a,0x3e(%ebp,%eiz,2),%ebp
 804ad79:	20 
 804ad7a:	2d 64 20 3c 66       	sub    $0x663c2064,%eax
 804ad7f:	69 6c 65 3e 20 20 45 	imul   $0x6d452020,0x3e(%ebp,%eiz,2),%ebp
 804ad86:	6d 
 804ad87:	69 74 20 61 20 64 75 	imul   $0x6d756420,0x61(%eax,%eiz,1),%esi
 804ad8e:	6d 
 804ad8f:	70 20                	jo     804adb1 <_IO_stdin_used+0x2ed>
 804ad91:	66 69 6c 65 20 3c 66 	imul   $0x663c,0x20(%ebp,%eiz,2),%bp
 804ad98:	69 6c 65 3e 20 66 6f 	imul   $0x726f6620,0x3e(%ebp,%eiz,2),%ebp
 804ad9f:	72 
 804ada0:	20 6c 61 74          	and    %ch,0x74(%ecx,%eiz,2)
 804ada4:	65                   	gs
 804ada5:	72 20                	jb     804adc7 <_IO_stdin_used+0x303>
 804ada7:	75 73                	jne    804ae1c <_IO_stdin_used+0x358>
 804ada9:	65 20 77 69          	and    %dh,%gs:0x69(%edi)
 804adad:	74 68                	je     804ae17 <_IO_stdin_used+0x353>
 804adaf:	20 2d 66 0a 00 25    	and    %ch,0x25000a66
 804adb5:	73 3a                	jae    804adf1 <_IO_stdin_used+0x32d>
 804adb7:	20 50 6c             	and    %dl,0x6c(%eax)
 804adba:	65                   	gs
 804adbb:	61                   	popa   
 804adbc:	73 65                	jae    804ae23 <_IO_stdin_used+0x35f>
 804adbe:	20 66 69             	and    %ah,0x69(%esi)
 804adc1:	6c                   	insb   (%dx),%es:(%edi)
 804adc2:	6c                   	insb   (%dx),%es:(%edi)
 804adc3:	20 69 6e             	and    %ch,0x6e(%ecx)
 804adc6:	20 74 68 65          	and    %dh,0x65(%eax,%ebp,2)
 804adca:	20 74 65 61          	and    %dh,0x61(%ebp,%eiz,2)
 804adce:	6d                   	insl   (%dx),%es:(%edi)
 804adcf:	20 73 74             	and    %dh,0x74(%ebx)
 804add2:	72 75                	jb     804ae49 <_IO_stdin_used+0x385>
 804add4:	63 74 20 69          	arpl   %si,0x69(%eax,%eiz,1)
 804add8:	6e                   	outsb  %ds:(%esi),(%dx)
 804add9:	20 6b 65             	and    %ch,0x65(%ebx)
 804addc:	72 6e                	jb     804ae4c <_IO_stdin_used+0x388>
 804adde:	65                   	gs
 804addf:	6c                   	insb   (%dx),%es:(%edi)
 804ade0:	73 2e                	jae    804ae10 <_IO_stdin_used+0x34c>
 804ade2:	63 2e                	arpl   %bp,(%esi)
 804ade4:	0a 00                	or     (%eax),%al
 804ade6:	45                   	inc    %ebp
 804ade7:	2e                   	cs
 804ade8:	67                   	addr16
 804ade9:	2e                   	cs
 804adea:	2c 20                	sub    $0x20,%al
 804adec:	00 52 6f             	add    %dl,0x6f(%edx)
 804adef:	74 61                	je     804ae52 <_IO_stdin_used+0x38e>
 804adf1:	74 65                	je     804ae58 <_IO_stdin_used+0x394>
 804adf3:	3a 20                	cmp    (%eax),%ah
 804adf5:	56                   	push   %esi
 804adf6:	65                   	gs
 804adf7:	72 73                	jb     804ae6c <_IO_stdin_used+0x3a8>
 804adf9:	69 6f 6e 20 3d 20 25 	imul   $0x25203d20,0x6e(%edi),%ebp
 804ae00:	73 3a                	jae    804ae3c <_IO_stdin_used+0x378>
 804ae02:	0a 00                	or     (%eax),%al
 804ae04:	44                   	inc    %esp
 804ae05:	69 6d 09 00 09 25 64 	imul   $0x64250900,0x9(%ebp),%ebp
 804ae0c:	00 09                	add    %cl,(%ecx)
 804ae0e:	4d                   	dec    %ebp
 804ae0f:	65                   	gs
 804ae10:	61                   	popa   
 804ae11:	6e                   	outsb  %ds:(%esi),(%dx)
 804ae12:	00 59 6f             	add    %bl,0x6f(%ecx)
 804ae15:	75 72                	jne    804ae89 <_IO_stdin_used+0x3c5>
 804ae17:	20 43 50             	and    %al,0x50(%ebx)
 804ae1a:	45                   	inc    %ebp
 804ae1b:	73 00                	jae    804ae1d <_IO_stdin_used+0x359>
 804ae1d:	09 25 2e 31 66 00    	or     %esp,0x66312e
 804ae23:	42                   	inc    %edx
 804ae24:	61                   	popa   
 804ae25:	73 65                	jae    804ae8c <_IO_stdin_used+0x3c8>
 804ae27:	6c                   	insb   (%dx),%es:(%edi)
 804ae28:	69 6e 65 20 43 50 45 	imul   $0x45504320,0x65(%esi),%ebp
 804ae2f:	73 00                	jae    804ae31 <_IO_stdin_used+0x36d>
 804ae31:	53                   	push   %ebx
 804ae32:	70 65                	jo     804ae99 <_IO_stdin_used+0x3d5>
 804ae34:	65                   	gs
 804ae35:	64                   	fs
 804ae36:	75 70                	jne    804aea8 <_IO_stdin_used+0x3e4>
 804ae38:	09 00                	or     %eax,(%eax)
 804ae3a:	53                   	push   %ebx
 804ae3b:	6d                   	insl   (%dx),%es:(%edi)
 804ae3c:	6f                   	outsl  %ds:(%esi),(%dx)
 804ae3d:	6f                   	outsl  %ds:(%esi),(%dx)
 804ae3e:	74 68                	je     804aea8 <_IO_stdin_used+0x3e4>
 804ae40:	3a 20                	cmp    (%eax),%ah
 804ae42:	56                   	push   %esi
 804ae43:	65                   	gs
 804ae44:	72 73                	jb     804aeb9 <_IO_stdin_used+0x3f5>
 804ae46:	69 6f 6e 20 3d 20 25 	imul   $0x25203d20,0x6e(%edi),%ebp
 804ae4d:	73 3a                	jae    804ae89 <_IO_stdin_used+0x3c5>
 804ae4f:	0a 00                	or     (%eax),%al
 804ae51:	4f                   	dec    %edi
 804ae52:	70 74                	jo     804aec8 <_IO_stdin_used+0x404>
 804ae54:	69 6f 6e 73 3a 0a 00 	imul   $0xa3a73,0x6e(%edi),%ebp
 804ae5b:	77 00                	ja     804ae5d <_IO_stdin_used+0x399>
 804ae5d:	43                   	inc    %ebx
 804ae5e:	61                   	popa   
 804ae5f:	6e                   	outsb  %ds:(%esi),(%dx)
 804ae60:	27                   	daa    
 804ae61:	74 20                	je     804ae83 <_IO_stdin_used+0x3bf>
 804ae63:	6f                   	outsl  %ds:(%esi),(%dx)
 804ae64:	70 65                	jo     804aecb <_IO_stdin_used+0x407>
 804ae66:	6e                   	outsb  %ds:(%esi),(%dx)
 804ae67:	20 66 69             	and    %ah,0x69(%esi)
 804ae6a:	6c                   	insb   (%dx),%es:(%edi)
 804ae6b:	65 20 25 73 0a 00 52 	and    %ah,%gs:0x52000a73
 804ae72:	3a 25 73 0a 00 53    	cmp    0x53000a73,%ah
 804ae78:	3a 25 73 0a 00 74    	cmp    0x74000a73,%ah
 804ae7e:	67 71 66             	addr16 jno 804aee7 <_IO_stdin_used+0x423>
 804ae81:	3a 64 3a 73          	cmp    0x73(%edx,%edi,1),%ah
 804ae85:	3a 68 00             	cmp    0x0(%eax),%ch
 804ae88:	62 6f 76             	bound  %ebp,0x76(%edi)
 804ae8b:	69 6b 00 54 65 61 6d 	imul   $0x6d616554,0x0(%ebx),%ebp
 804ae92:	6e                   	outsb  %ds:(%esi),(%dx)
 804ae93:	61                   	popa   
 804ae94:	6d                   	insl   (%dx),%es:(%edi)
 804ae95:	65 3a 20             	cmp    %gs:(%eax),%ah
 804ae98:	25 73 0a 00 4d       	and    $0x4d000a73,%eax
 804ae9d:	65                   	gs
 804ae9e:	6d                   	insl   (%dx),%es:(%edi)
 804ae9f:	62 65 72             	bound  %esp,0x72(%ebp)
 804aea2:	20 31                	and    %dh,(%ecx)
 804aea4:	3a 20                	cmp    (%eax),%ah
 804aea6:	25 73 0a 00 45       	and    $0x45000a73,%eax
 804aeab:	6d                   	insl   (%dx),%es:(%edi)
 804aeac:	61                   	popa   
 804aead:	69 6c 20 31 3a 20 25 	imul   $0x7325203a,0x31(%eax,%eiz,1),%ebp
 804aeb4:	73 
 804aeb5:	0a 00                	or     (%eax),%al
 804aeb7:	4d                   	dec    %ebp
 804aeb8:	65                   	gs
 804aeb9:	6d                   	insl   (%dx),%es:(%edi)
 804aeba:	62 65 72             	bound  %esp,0x72(%ebp)
 804aebd:	20 32                	and    %dh,(%edx)
 804aebf:	3a 20                	cmp    (%eax),%ah
 804aec1:	25 73 0a 00 45       	and    $0x45000a73,%eax
 804aec6:	6d                   	insl   (%dx),%es:(%edi)
 804aec7:	61                   	popa   
 804aec8:	69 6c 20 32 3a 20 25 	imul   $0x7325203a,0x32(%eax,%eiz,1),%ebp
 804aecf:	73 
 804aed0:	0a 00                	or     (%eax),%al
 804aed2:	72 6f                	jb     804af43 <_IO_stdin_used+0x47f>
 804aed4:	74 61                	je     804af37 <_IO_stdin_used+0x473>
 804aed6:	74 65                	je     804af3d <_IO_stdin_used+0x479>
 804aed8:	28 29                	sub    %ch,(%ecx)
 804aeda:	20 66 75             	and    %ah,0x75(%esi)
 804aedd:	6e                   	outsb  %ds:(%esi),(%dx)
 804aede:	63 74 69 6f          	arpl   %si,0x6f(%ecx,%ebp,2)
 804aee2:	6e                   	outsb  %ds:(%esi),(%dx)
 804aee3:	00 73 6d             	add    %dh,0x6d(%ebx)
 804aee6:	6f                   	outsl  %ds:(%esi),(%dx)
 804aee7:	6f                   	outsl  %ds:(%esi),(%dx)
 804aee8:	74 68                	je     804af52 <_IO_stdin_used+0x48e>
 804aeea:	28 29                	sub    %ch,(%ecx)
 804aeec:	20 66 75             	and    %ah,0x75(%esi)
 804aeef:	6e                   	outsb  %ds:(%esi),(%dx)
 804aef0:	63 74 69 6f          	arpl   %si,0x6f(%ecx,%ebp,2)
 804aef4:	6e                   	outsb  %ds:(%esi),(%dx)
 804aef5:	00 72 00             	add    %dh,0x0(%edx)
 804aef8:	0a 62 65             	or     0x65(%edx),%ah
 804aefb:	73 74                	jae    804af71 <_IO_stdin_used+0x4ad>
 804aefd:	73 63                	jae    804af62 <_IO_stdin_used+0x49e>
 804aeff:	6f                   	outsl  %ds:(%esi),(%dx)
 804af00:	72 65                	jb     804af67 <_IO_stdin_used+0x4a3>
 804af02:	73 3a                	jae    804af3e <_IO_stdin_used+0x47a>
 804af04:	25 2e 31 66 3a       	and    $0x3a66312e,%eax
 804af09:	25 2e 31 66 3a       	and    $0x3a66312e,%eax
 804af0e:	0a 00                	or     (%eax),%al
 804af10:	53                   	push   %ebx
 804af11:	75 6d                	jne    804af80 <_IO_stdin_used+0x4bc>
 804af13:	6d                   	insl   (%dx),%es:(%edi)
 804af14:	61                   	popa   
 804af15:	72 79                	jb     804af90 <_IO_stdin_used+0x4cc>
 804af17:	20 6f 66             	and    %ch,0x66(%edi)
 804af1a:	20 59 6f             	and    %bl,0x6f(%ecx)
 804af1d:	75 72                	jne    804af91 <_IO_stdin_used+0x4cd>
 804af1f:	20 42 65             	and    %al,0x65(%edx)
 804af22:	73 74                	jae    804af98 <_IO_stdin_used+0x4d4>
 804af24:	20 53 63             	and    %dl,0x63(%ebx)
 804af27:	6f                   	outsl  %ds:(%esi),(%dx)
 804af28:	72 65                	jb     804af8f <_IO_stdin_used+0x4cb>
 804af2a:	73 3a                	jae    804af66 <_IO_stdin_used+0x4a2>
 804af2c:	00 20                	add    %ah,(%eax)
 804af2e:	20 52 6f             	and    %dl,0x6f(%edx)
 804af31:	74 61                	je     804af94 <_IO_stdin_used+0x4d0>
 804af33:	74 65                	je     804af9a <_IO_stdin_used+0x4d6>
 804af35:	3a 20                	cmp    (%eax),%ah
 804af37:	25 33 2e 31 66       	and    $0x66312e33,%eax
 804af3c:	20 28                	and    %ch,(%eax)
 804af3e:	25 73 29 0a 00       	and    $0xa2973,%eax
 804af43:	20 20                	and    %ah,(%eax)
 804af45:	53                   	push   %ebx
 804af46:	6d                   	insl   (%dx),%es:(%edi)
 804af47:	6f                   	outsl  %ds:(%esi),(%dx)
 804af48:	6f                   	outsl  %ds:(%esi),(%dx)
 804af49:	74 68                	je     804afb3 <test_dim_rotate+0xf>
 804af4b:	3a 20                	cmp    (%eax),%ah
 804af4d:	25 33 2e 31 66       	and    $0x66312e33,%eax
 804af52:	20 28                	and    %ch,(%eax)
 804af54:	25 73 29 0a 00       	and    $0xa2973,%eax
 804af59:	00 00                	add    %al,(%eax)
 804af5b:	00 00                	add    %al,(%eax)
 804af5d:	00 00                	add    %al,(%eax)
 804af5f:	00 34 89             	add    %dh,(%ecx,%ecx,4)
 804af62:	04 08                	add    $0x8,%al
 804af64:	c1 88 04 08 1e 89 04 	rorl   $0x4,-0x76e1f7fc(%eax)
 804af6b:	08 11                	or     %dl,(%ecx)
 804af6d:	89 04 08             	mov    %eax,(%eax,%ecx,1)
 804af70:	c1 88 04 08 c1 88 04 	rorl   $0x4,-0x773ef7fc(%eax)
 804af77:	08 c1                	or     %al,%cl
 804af79:	88 04 08             	mov    %al,(%eax,%ecx,1)
 804af7c:	c1 88 04 08 c1 88 04 	rorl   $0x4,-0x773ef7fc(%eax)
 804af83:	08 c1                	or     %al,%cl
 804af85:	88 04 08             	mov    %al,(%eax,%ecx,1)
 804af88:	c1 88 04 08 c1 88 04 	rorl   $0x4,-0x773ef7fc(%eax)
 804af8f:	08 c1                	or     %al,%cl
 804af91:	88 04 08             	mov    %al,(%eax,%ecx,1)
 804af94:	fd                   	std    
 804af95:	88 04 08             	mov    %al,(%eax,%ecx,1)
 804af98:	c1 88 04 08 da 88 04 	rorl   $0x4,-0x7725f7fc(%eax)
 804af9f:	08 07                	or     %al,(%edi)
 804afa1:	89 04 08             	mov    %eax,(%eax,%ecx,1)

0804afa4 <test_dim_rotate>:
 804afa4:	40                   	inc    %eax
 804afa5:	00 00                	add    %al,(%eax)
 804afa7:	00 80 00 00 00 00    	add    %al,0x0(%eax)
 804afad:	01 00                	add    %eax,(%eax)
 804afaf:	00 00                	add    %al,(%eax)
 804afb1:	02 00                	add    (%eax),%al
 804afb3:	00 00                	add    %al,(%eax)
 804afb5:	04 00                	add    $0x0,%al
	...

0804afc0 <rotate_baseline_cpes>:
 804afc0:	cd cc                	int    $0xcc
 804afc2:	cc                   	int3   
 804afc3:	cc                   	int3   
 804afc4:	cc                   	int3   
 804afc5:	cc                   	int3   
 804afc6:	08 40 66             	or     %al,0x66(%eax)
 804afc9:	66 66 66 66 66 0e    	data32 data32 data32 data32 pushw %cs
 804afcf:	40                   	inc    %eax
 804afd0:	00 00                	add    %al,(%eax)
 804afd2:	00 00                	add    %al,(%eax)
 804afd4:	00 00                	add    %al,(%eax)
 804afd6:	1a 40 00             	sbb    0x0(%eax),%al
 804afd9:	00 00                	add    %al,(%eax)
 804afdb:	00 00                	add    %al,(%eax)
 804afdd:	00 25 40 cd cc cc    	add    %ah,0xcccccd40
 804afe3:	cc                   	int3   
 804afe4:	cc                   	int3   
 804afe5:	cc                   	int3   
 804afe6:	42                   	inc    %edx
 804afe7:	40                   	inc    %eax

0804afe8 <test_dim_smooth>:
 804afe8:	20 00                	and    %al,(%eax)
 804afea:	00 00                	add    %al,(%eax)
 804afec:	40                   	inc    %eax
 804afed:	00 00                	add    %al,(%eax)
 804afef:	00 80 00 00 00 00    	add    %al,0x0(%eax)
 804aff5:	01 00                	add    %eax,(%eax)
 804aff7:	00 00                	add    %al,(%eax)
 804aff9:	02 00                	add    (%eax),%al
 804affb:	00 00                	add    %al,(%eax)
 804affd:	00 00                	add    %al,(%eax)
	...

0804b000 <smooth_baseline_cpes>:
 804b000:	66                   	data16
 804b001:	66                   	data16
 804b002:	66                   	data16
 804b003:	66                   	data16
 804b004:	66                   	data16
 804b005:	86 52 40             	xchg   %dl,0x40(%edx)
 804b008:	66                   	data16
 804b009:	66                   	data16
 804b00a:	66                   	data16
 804b00b:	66                   	data16
 804b00c:	66                   	data16
 804b00d:	86 52 40             	xchg   %dl,0x40(%edx)
 804b010:	66                   	data16
 804b011:	66                   	data16
 804b012:	66                   	data16
 804b013:	66                   	data16
 804b014:	66                   	data16
 804b015:	86 52 40             	xchg   %dl,0x40(%edx)
 804b018:	66 66 66 66 66 06    	data32 data32 data32 data32 pushw %es
 804b01e:	53                   	push   %ebx
 804b01f:	40                   	inc    %eax
 804b020:	66                   	data16
 804b021:	66                   	data16
 804b022:	66                   	data16
 804b023:	66                   	data16
 804b024:	66                   	data16
 804b025:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
 804b026:	53                   	push   %ebx
 804b027:	40                   	inc    %eax
 804b028:	9a 99 99 99 99 99 c9 	lcall  $0xc999,$0x99999999
 804b02f:	3f                   	aas    
 804b030:	35 31 32 30 33       	xor    $0x33303231,%eax
 804b035:	37                   	aaa    
 804b036:	39 30                	cmp    %esi,(%eax)
 804b038:	39 31                	cmp    %esi,(%ecx)
 804b03a:	00 47 61             	add    %al,0x61(%edi)
 804b03d:	6f                   	outsl  %ds:(%esi),(%dx)
 804b03e:	20 43 65             	and    %al,0x65(%ebx)
 804b041:	00 67 61             	add    %ah,0x61(%edi)
 804b044:	6f                   	outsl  %ds:(%esi),(%dx)
 804b045:	63 65 32             	arpl   %sp,0x32(%ebp)
 804b048:	37                   	aaa    
 804b049:	30 38                	xor    %bh,(%eax)
 804b04b:	36 33 37             	xor    %ss:(%edi),%esi
 804b04e:	39 39                	cmp    %edi,(%ecx)
 804b050:	40                   	inc    %eax
 804b051:	73 65                	jae    804b0b8 <smooth_baseline_cpes+0xb8>
 804b053:	2e 73 6a             	jae,pn 804b0c0 <smooth_baseline_cpes+0xc0>
 804b056:	74 75                	je     804b0cd <smooth_baseline_cpes+0xcd>
 804b058:	2e                   	cs
 804b059:	65                   	gs
 804b05a:	64                   	fs
 804b05b:	75 2e                	jne    804b08b <smooth_baseline_cpes+0x8b>
 804b05d:	63 6e 00             	arpl   %bp,0x0(%esi)
 804b060:	46                   	inc    %esi
 804b061:	61                   	popa   
 804b062:	74 61                	je     804b0c5 <smooth_baseline_cpes+0xc5>
 804b064:	6c                   	insb   (%dx),%es:(%edi)
 804b065:	20 65 72             	and    %ah,0x72(%ebp)
 804b068:	72 6f                	jb     804b0d9 <smooth_baseline_cpes+0xd9>
 804b06a:	72 2e                	jb     804b09a <smooth_baseline_cpes+0x9a>
 804b06c:	20 20                	and    %ah,(%eax)
 804b06e:	4d                   	dec    %ebp
 804b06f:	61                   	popa   
 804b070:	6c                   	insb   (%dx),%es:(%edi)
 804b071:	6c                   	insb   (%dx),%es:(%edi)
 804b072:	6f                   	outsl  %ds:(%esi),(%dx)
 804b073:	63 20                	arpl   %sp,(%eax)
 804b075:	72 65                	jb     804b0dc <smooth_baseline_cpes+0xdc>
 804b077:	74 75                	je     804b0ee <smooth_baseline_cpes+0xee>
 804b079:	72 6e                	jb     804b0e9 <smooth_baseline_cpes+0xe9>
 804b07b:	65 64 20 6e 75       	gs and %ch,%fs:%gs:0x75(%esi)
 804b080:	6c                   	insb   (%dx),%es:(%edi)
 804b081:	6c                   	insb   (%dx),%es:(%edi)
 804b082:	20 77 68             	and    %dh,0x68(%edi)
 804b085:	65 6e                	outsb  %gs:(%esi),(%dx)
 804b087:	20 74 72 79          	and    %dh,0x79(%edx,%esi,2)
 804b08b:	69 6e 67 20 74 6f 20 	imul   $0x206f7420,0x67(%esi),%ebp
 804b092:	63 6c 65 61          	arpl   %bp,0x61(%ebp,%eiz,2)
 804b096:	72 20                	jb     804b0b8 <smooth_baseline_cpes+0xb8>
 804b098:	63 61 63             	arpl   %sp,0x63(%ecx)
 804b09b:	68 65 0a 00 00       	push   $0xa65
 804b0a0:	45                   	inc    %ebp
 804b0a1:	72 72                	jb     804b115 <smooth_baseline_cpes+0x115>
 804b0a3:	6f                   	outsl  %ds:(%esi),(%dx)
 804b0a4:	72 3a                	jb     804b0e0 <smooth_baseline_cpes+0xe0>
 804b0a6:	20 63 6f             	and    %ah,0x6f(%ebx)
 804b0a9:	75 6e                	jne    804b119 <smooth_baseline_cpes+0x119>
 804b0ab:	74 65                	je     804b112 <smooth_baseline_cpes+0x112>
 804b0ad:	72 20                	jb     804b0cf <smooth_baseline_cpes+0xcf>
 804b0af:	72 65                	jb     804b116 <smooth_baseline_cpes+0x116>
 804b0b1:	74 75                	je     804b128 <smooth_baseline_cpes+0x128>
 804b0b3:	72 6e                	jb     804b123 <smooth_baseline_cpes+0x123>
 804b0b5:	73 20                	jae    804b0d7 <smooth_baseline_cpes+0xd7>
 804b0b7:	6e                   	outsb  %ds:(%esi),(%dx)
 804b0b8:	65 67 20 76 61       	and    %dh,%gs:0x61(%bp)
 804b0bd:	6c                   	insb   (%dx),%es:(%edi)
 804b0be:	75 65                	jne    804b125 <smooth_baseline_cpes+0x125>
 804b0c0:	3a 20                	cmp    (%eax),%ah
 804b0c2:	25 2e 30 66 0a       	and    $0xa66302e,%eax
 804b0c7:	00 50 72             	add    %dl,0x72(%eax)
 804b0ca:	6f                   	outsl  %ds:(%esi),(%dx)
 804b0cb:	63 65 73             	arpl   %sp,0x73(%ebp)
 804b0ce:	73 6f                	jae    804b13f <smooth_baseline_cpes+0x13f>
 804b0d0:	72 20                	jb     804b0f2 <smooth_baseline_cpes+0xf2>
 804b0d2:	63 6c 6f 63          	arpl   %bp,0x63(%edi,%ebp,2)
 804b0d6:	6b 20 72             	imul   $0x72,(%eax),%esp
 804b0d9:	61                   	popa   
 804b0da:	74 65                	je     804b141 <smooth_baseline_cpes+0x141>
 804b0dc:	20 7e 3d             	and    %bh,0x3d(%esi)
 804b0df:	20 25 2e 31 66 20    	and    %ah,0x2066312e
 804b0e5:	4d                   	dec    %ebp
 804b0e6:	48                   	dec    %eax
 804b0e7:	7a 0a                	jp     804b0f3 <smooth_baseline_cpes+0xf3>
 804b0e9:	00 00                	add    %al,(%eax)
 804b0eb:	00 00                	add    %al,(%eax)
 804b0ed:	00 80 4e 00 00 80    	add    %al,-0x7fffffb2(%eax)
 804b0f3:	40                   	inc    %eax
 804b0f4:	00 24 74             	add    %ah,(%esp,%esi,2)
 804b0f7:	49                   	dec    %ecx
 804b0f8:	00 00                	add    %al,(%eax)
 804b0fa:	7a 44                	jp     804b140 <smooth_baseline_cpes+0x140>
 804b0fc:	00                   	.byte 0x0
 804b0fd:	80 3b 45             	cmpb   $0x45,(%ebx)

Disassembly of section .eh_frame_hdr:

0804b100 <.eh_frame_hdr>:
 804b100:	01 1b                	add    %ebx,(%ebx)
 804b102:	03 3b                	add    (%ebx),%edi
 804b104:	68 01 00 00 2c       	push   $0x2c000001
 804b109:	00 00                	add    %al,(%eax)
 804b10b:	00 a0 d5 ff ff 84    	add    %ah,-0x7b00002b(%eax)
 804b111:	01 00                	add    %eax,(%eax)
 804b113:	00 40 d7             	add    %al,-0x29(%eax)
 804b116:	ff                   	(bad)  
 804b117:	ff 20                	jmp    *(%eax)
 804b119:	04 00                	add    $0x0,%al
 804b11b:	00 50 de             	add    %dl,-0x22(%eax)
 804b11e:	ff                   	(bad)  
 804b11f:	ff a8 01 00 00 80    	ljmp   *-0x7fffffff(%eax)
 804b125:	de ff                	fdivrp %st,%st(7)
 804b127:	ff c0                	inc    %eax
 804b129:	01 00                	add    %eax,(%eax)
 804b12b:	00 90 df ff ff 00    	add    %dl,0xffffdf(%eax)
 804b131:	02 00                	add    (%eax),%al
 804b133:	00 d0                	add    %dl,%al
 804b135:	e1 ff                	loope  804b136 <smooth_baseline_cpes+0x136>
 804b137:	ff 58 02             	lcall  *0x2(%eax)
 804b13a:	00 00                	add    %al,(%eax)
 804b13c:	80 e5 ff             	and    $0xff,%ch
 804b13f:	ff c4                	inc    %esp
 804b141:	02 00                	add    (%eax),%al
 804b143:	00 a0 e6 ff ff 04    	add    %ah,0x4ffffe6(%eax)
 804b149:	03 00                	add    (%eax),%eax
 804b14b:	00 d0                	add    %dl,%al
 804b14d:	e6 ff                	out    %al,$0xff
 804b14f:	ff 18                	lcall  *(%eax)
 804b151:	03 00                	add    (%eax),%eax
 804b153:	00 00                	add    %al,(%eax)
 804b155:	e7 ff                	out    %eax,$0xff
 804b157:	ff 2c 03             	ljmp   *(%ebx,%eax,1)
 804b15a:	00 00                	add    %al,(%eax)
 804b15c:	30 e7                	xor    %ah,%bh
 804b15e:	ff                   	(bad)  
 804b15f:	ff 44 03 00          	incl   0x0(%ebx,%eax,1)
 804b163:	00 50 ea             	add    %dl,-0x16(%eax)
 804b166:	ff                   	(bad)  
 804b167:	ff 9c 03 00 00 80 ea 	lcall  *-0x15800000(%ebx,%eax,1)
 804b16e:	ff                   	(bad)  
 804b16f:	ff b4 03 00 00 a0 ed 	pushl  -0x12600000(%ebx,%eax,1)
 804b176:	ff                   	(bad)  
 804b177:	ff 0c 04             	decl   (%esp,%eax,1)
 804b17a:	00 00                	add    %al,(%eax)
 804b17c:	c0 ee ff             	shr    $0xff,%dh
 804b17f:	ff 50 04             	call   *0x4(%eax)
 804b182:	00 00                	add    %al,(%eax)
 804b184:	40                   	inc    %eax
 804b185:	ef                   	out    %eax,(%dx)
 804b186:	ff                   	(bad)  
 804b187:	ff 8c 04 00 00 c0 ef 	decl   -0x10400000(%esp,%eax,1)
 804b18e:	ff                   	(bad)  
 804b18f:	ff c8                	dec    %eax
 804b191:	04 00                	add    $0x0,%al
 804b193:	00 90 f1 ff ff 08    	add    %dl,0x8fffff1(%eax)
 804b199:	05 00 00 a0 f1       	add    $0xf1a00000,%eax
 804b19e:	ff                   	(bad)  
 804b19f:	ff 1c 05 00 00 d0 f1 	lcall  *-0xe300000(,%eax,1)
 804b1a6:	ff                   	(bad)  
 804b1a7:	ff 34 05 00 00 00 f2 	pushl  -0xe000000(,%eax,1)
 804b1ae:	ff                   	(bad)  
 804b1af:	ff 4c 05 00          	decl   0x0(%ebp,%eax,1)
 804b1b3:	00 b0 f2 ff ff 7c    	add    %dh,0x7cfffff2(%eax)
 804b1b9:	05 00 00 e0 f2       	add    $0xf2e00000,%eax
 804b1be:	ff                   	(bad)  
 804b1bf:	ff 90 05 00 00 20    	call   *0x20000005(%eax)
 804b1c5:	f3 ff                	repz (bad) 
 804b1c7:	ff a8 05 00 00 b0    	ljmp   *-0x4ffffffb(%eax)
 804b1cd:	f3 ff                	repz (bad) 
 804b1cf:	ff e0                	jmp    *%eax
 804b1d1:	05 00 00 80 f4       	add    $0xf4800000,%eax
 804b1d6:	ff                   	(bad)  
 804b1d7:	ff 0c 06             	decl   (%esi,%eax,1)
 804b1da:	00 00                	add    %al,(%eax)
 804b1dc:	50                   	push   %eax
 804b1dd:	f5                   	cmc    
 804b1de:	ff                   	(bad)  
 804b1df:	ff                   	(bad)  
 804b1e0:	38 06                	cmp    %al,(%esi)
 804b1e2:	00 00                	add    %al,(%eax)
 804b1e4:	60                   	pusha  
 804b1e5:	f5                   	cmc    
 804b1e6:	ff                   	(bad)  
 804b1e7:	ff 4c 06 00          	decl   0x0(%esi,%eax,1)
 804b1eb:	00 a0 f5 ff ff 64    	add    %ah,0x64fffff5(%eax)
 804b1f1:	06                   	push   %es
 804b1f2:	00 00                	add    %al,(%eax)
 804b1f4:	b0 f5                	mov    $0xf5,%al
 804b1f6:	ff                   	(bad)  
 804b1f7:	ff                   	(bad)  
 804b1f8:	78 06                	js     804b200 <smooth_baseline_cpes+0x200>
 804b1fa:	00 00                	add    %al,(%eax)
 804b1fc:	c0                   	(bad)  
 804b1fd:	f5                   	cmc    
 804b1fe:	ff                   	(bad)  
 804b1ff:	ff 8c 06 00 00 d0 f5 	decl   -0xa300000(%esi,%eax,1)
 804b206:	ff                   	(bad)  
 804b207:	ff a0 06 00 00 e0    	jmp    *-0x1ffffffa(%eax)
 804b20d:	f5                   	cmc    
 804b20e:	ff                   	(bad)  
 804b20f:	ff b4 06 00 00 f0 f5 	pushl  -0xa100000(%esi,%eax,1)
 804b216:	ff                   	(bad)  
 804b217:	ff c8                	dec    %eax
 804b219:	06                   	push   %es
 804b21a:	00 00                	add    %al,(%eax)
 804b21c:	10 f6                	adc    %dh,%dh
 804b21e:	ff                   	(bad)  
 804b21f:	ff e4                	jmp    *%esp
 804b221:	06                   	push   %es
 804b222:	00 00                	add    %al,(%eax)
 804b224:	30 f6                	xor    %dh,%dh
 804b226:	ff                   	(bad)  
 804b227:	ff 00                	incl   (%eax)
 804b229:	07                   	pop    %es
 804b22a:	00 00                	add    %al,(%eax)
 804b22c:	c0                   	(bad)  
 804b22d:	f6 ff                	idiv   %bh
 804b22f:	ff 2c 07             	ljmp   *(%edi,%eax,1)
 804b232:	00 00                	add    %al,(%eax)
 804b234:	00 f7                	add    %dh,%bh
 804b236:	ff                   	(bad)  
 804b237:	ff 4c 07 00          	decl   0x0(%edi,%eax,1)
 804b23b:	00 80 f7 ff ff 6c    	add    %al,0x6cfffff7(%eax)
 804b241:	07                   	pop    %es
 804b242:	00 00                	add    %al,(%eax)
 804b244:	a0 f7 ff ff 84       	mov    0x84fffff7,%al
 804b249:	07                   	pop    %es
 804b24a:	00 00                	add    %al,(%eax)
 804b24c:	e0 f8                	loopne 804b246 <smooth_baseline_cpes+0x246>
 804b24e:	ff                   	(bad)  
 804b24f:	ff                   	(bad)  
 804b250:	bc 07 00 00 20       	mov    $0x20000007,%esp
 804b255:	f9                   	stc    
 804b256:	ff                   	(bad)  
 804b257:	ff d4                	call   *%esp
 804b259:	07                   	pop    %es
 804b25a:	00 00                	add    %al,(%eax)
 804b25c:	90                   	nop
 804b25d:	f9                   	stc    
 804b25e:	ff                   	(bad)  
 804b25f:	ff 10                	call   *(%eax)
 804b261:	08 00                	or     %al,(%eax)
 804b263:	00 92 f9 ff ff 24    	add    %dl,0x24fffff9(%edx)
 804b269:	08 00                	or     %al,(%eax)
	...

Disassembly of section .eh_frame:

0804b26c <__FRAME_END__-0x6cc>:
 804b26c:	14 00                	adc    $0x0,%al
 804b26e:	00 00                	add    %al,(%eax)
 804b270:	00 00                	add    %al,(%eax)
 804b272:	00 00                	add    %al,(%eax)
 804b274:	01 7a 52             	add    %edi,0x52(%edx)
 804b277:	00 01                	add    %al,(%ecx)
 804b279:	7c 08                	jl     804b283 <smooth_baseline_cpes+0x283>
 804b27b:	01 1b                	add    %ebx,(%ebx)
 804b27d:	0c 04                	or     $0x4,%al
 804b27f:	04 88                	add    $0x88,%al
 804b281:	01 00                	add    %eax,(%eax)
 804b283:	00 20                	add    %ah,(%eax)
 804b285:	00 00                	add    %al,(%eax)
 804b287:	00 1c 00             	add    %bl,(%eax,%eax,1)
 804b28a:	00 00                	add    %al,(%eax)
 804b28c:	14 d4                	adc    $0xd4,%al
 804b28e:	ff                   	(bad)  
 804b28f:	ff a0 01 00 00 00    	jmp    *0x1(%eax)
 804b295:	0e                   	push   %cs
 804b296:	08 46 0e             	or     %al,0xe(%esi)
 804b299:	0c 4a                	or     $0x4a,%al
 804b29b:	0f 0b                	ud2    
 804b29d:	74 04                	je     804b2a3 <smooth_baseline_cpes+0x2a3>
 804b29f:	78 00                	js     804b2a1 <smooth_baseline_cpes+0x2a1>
 804b2a1:	3f                   	aas    
 804b2a2:	1a 3b                	sbb    (%ebx),%bh
 804b2a4:	2a 32                	sub    (%edx),%dh
 804b2a6:	24 22                	and    $0x22,%al
 804b2a8:	14 00                	adc    $0x0,%al
 804b2aa:	00 00                	add    %al,(%eax)
 804b2ac:	40                   	inc    %eax
 804b2ad:	00 00                	add    %al,(%eax)
 804b2af:	00 a0 dc ff ff 23    	add    %ah,0x23ffffdc(%eax)
 804b2b5:	00 00                	add    %al,(%eax)
 804b2b7:	00 00                	add    %al,(%eax)
 804b2b9:	43                   	inc    %ebx
 804b2ba:	0e                   	push   %cs
 804b2bb:	20 5f 0e             	and    %bl,0xe(%edi)
 804b2be:	04 00                	add    $0x0,%al
 804b2c0:	3c 00                	cmp    $0x0,%al
 804b2c2:	00 00                	add    %al,(%eax)
 804b2c4:	58                   	pop    %eax
 804b2c5:	00 00                	add    %al,(%eax)
 804b2c7:	00 b8 dc ff ff 0e    	add    %bh,0xeffffdc(%eax)
 804b2cd:	01 00                	add    %eax,(%eax)
 804b2cf:	00 00                	add    %al,(%eax)
 804b2d1:	41                   	inc    %ecx
 804b2d2:	0e                   	push   %cs
 804b2d3:	08 85 02 43 0e 0c    	or     %al,0xc0e4302(%ebp)
 804b2d9:	87 03                	xchg   %eax,(%ebx)
 804b2db:	41                   	inc    %ecx
 804b2dc:	0e                   	push   %cs
 804b2dd:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 804b2e3:	83 05 43 0e 50 02 73 	addl   $0x73,0x2500e43
 804b2ea:	0a 0e                	or     (%esi),%cl
 804b2ec:	14 41                	adc    $0x41,%al
 804b2ee:	c3                   	ret    
 804b2ef:	0e                   	push   %cs
 804b2f0:	10 41 c6             	adc    %al,-0x3a(%ecx)
 804b2f3:	0e                   	push   %cs
 804b2f4:	0c 41                	or     $0x41,%al
 804b2f6:	c7                   	(bad)  
 804b2f7:	0e                   	push   %cs
 804b2f8:	08 41 c5             	or     %al,-0x3b(%ecx)
 804b2fb:	0e                   	push   %cs
 804b2fc:	04 48                	add    $0x48,%al
 804b2fe:	0b 00                	or     (%eax),%eax
 804b300:	54                   	push   %esp
 804b301:	00 00                	add    %al,(%eax)
 804b303:	00 98 00 00 00 88    	add    %bl,-0x78000000(%eax)
 804b309:	dd ff                	(bad)  
 804b30b:	ff 35 02 00 00 00    	pushl  0x2
 804b311:	41                   	inc    %ecx
 804b312:	0e                   	push   %cs
 804b313:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 804b319:	87 03                	xchg   %eax,(%ebx)
 804b31b:	41                   	inc    %ecx
 804b31c:	0e                   	push   %cs
 804b31d:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 804b323:	83 05 48 0e 80 01 03 	addl   $0x3,0x1800e48
 804b32a:	5b                   	pop    %ebx
 804b32b:	01 0a                	add    %ecx,(%edx)
 804b32d:	0e                   	push   %cs
 804b32e:	14 43                	adc    $0x43,%al
 804b330:	c3                   	ret    
 804b331:	0e                   	push   %cs
 804b332:	10 41 c6             	adc    %al,-0x3a(%ecx)
 804b335:	0e                   	push   %cs
 804b336:	0c 41                	or     $0x41,%al
 804b338:	c7                   	(bad)  
 804b339:	0e                   	push   %cs
 804b33a:	08 41 c5             	or     %al,-0x3b(%ecx)
 804b33d:	0e                   	push   %cs
 804b33e:	04 41                	add    $0x41,%al
 804b340:	0b 02                	or     (%edx),%eax
 804b342:	b9 0a 0e 14 43       	mov    $0x43140e0a,%ecx
 804b347:	c3                   	ret    
 804b348:	0e                   	push   %cs
 804b349:	10 41 c6             	adc    %al,-0x3a(%ecx)
 804b34c:	0e                   	push   %cs
 804b34d:	0c 41                	or     $0x41,%al
 804b34f:	c7                   	(bad)  
 804b350:	0e                   	push   %cs
 804b351:	08 41 c5             	or     %al,-0x3b(%ecx)
 804b354:	0e                   	push   %cs
 804b355:	04 41                	add    $0x41,%al
 804b357:	0b 68 00             	or     0x0(%eax),%ebp
 804b35a:	00 00                	add    %al,(%eax)
 804b35c:	f0 00 00             	lock add %al,(%eax)
 804b35f:	00 70 df             	add    %dh,-0x21(%eax)
 804b362:	ff                   	(bad)  
 804b363:	ff a7 03 00 00 00    	jmp    *0x3(%edi)
 804b369:	41                   	inc    %ecx
 804b36a:	0e                   	push   %cs
 804b36b:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 804b371:	87 03                	xchg   %eax,(%ebx)
 804b373:	41                   	inc    %ecx
 804b374:	0e                   	push   %cs
 804b375:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 804b37b:	83 05 4b 0e b0 01 03 	addl   $0x3,0x1b00e4b
 804b382:	b2 02                	mov    $0x2,%dl
 804b384:	0a 0e                	or     (%esi),%cl
 804b386:	14 43                	adc    $0x43,%al
 804b388:	c3                   	ret    
 804b389:	0e                   	push   %cs
 804b38a:	10 41 c6             	adc    %al,-0x3a(%ecx)
 804b38d:	0e                   	push   %cs
 804b38e:	0c 41                	or     $0x41,%al
 804b390:	c7                   	(bad)  
 804b391:	0e                   	push   %cs
 804b392:	08 41 c5             	or     %al,-0x3b(%ecx)
 804b395:	0e                   	push   %cs
 804b396:	04 41                	add    $0x41,%al
 804b398:	0b 59 0a             	or     0xa(%ecx),%ebx
 804b39b:	0e                   	push   %cs
 804b39c:	14 45                	adc    $0x45,%al
 804b39e:	c3                   	ret    
 804b39f:	0e                   	push   %cs
 804b3a0:	10 41 c6             	adc    %al,-0x3a(%ecx)
 804b3a3:	0e                   	push   %cs
 804b3a4:	0c 41                	or     $0x41,%al
 804b3a6:	c7                   	(bad)  
 804b3a7:	0e                   	push   %cs
 804b3a8:	08 41 c5             	or     %al,-0x3b(%ecx)
 804b3ab:	0e                   	push   %cs
 804b3ac:	04 41                	add    $0x41,%al
 804b3ae:	0b 02                	or     (%edx),%eax
 804b3b0:	b6 0e                	mov    $0xe,%dh
 804b3b2:	14 43                	adc    $0x43,%al
 804b3b4:	c3                   	ret    
 804b3b5:	0e                   	push   %cs
 804b3b6:	10 41 c6             	adc    %al,-0x3a(%ecx)
 804b3b9:	0e                   	push   %cs
 804b3ba:	0c 41                	or     $0x41,%al
 804b3bc:	c7                   	(bad)  
 804b3bd:	0e                   	push   %cs
 804b3be:	08 41 c5             	or     %al,-0x3b(%ecx)
 804b3c1:	0e                   	push   %cs
 804b3c2:	04 00                	add    $0x0,%al
 804b3c4:	3c 00                	cmp    $0x0,%al
 804b3c6:	00 00                	add    %al,(%eax)
 804b3c8:	5c                   	pop    %esp
 804b3c9:	01 00                	add    %eax,(%eax)
 804b3cb:	00 b4 e2 ff ff 15 01 	add    %dh,0x115ffff(%edx,%eiz,8)
 804b3d2:	00 00                	add    %al,(%eax)
 804b3d4:	00 41 0e             	add    %al,0xe(%ecx)
 804b3d7:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 804b3dd:	87 03                	xchg   %eax,(%ebx)
 804b3df:	41                   	inc    %ecx
 804b3e0:	0e                   	push   %cs
 804b3e1:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 804b3e7:	83 05 43 0e 40 03 09 	addl   $0x9,0x3400e43
 804b3ee:	01 0e                	add    %ecx,(%esi)
 804b3f0:	14 41                	adc    $0x41,%al
 804b3f2:	c3                   	ret    
 804b3f3:	0e                   	push   %cs
 804b3f4:	10 41 c6             	adc    %al,-0x3a(%ecx)
 804b3f7:	0e                   	push   %cs
 804b3f8:	0c 41                	or     $0x41,%al
 804b3fa:	c7                   	(bad)  
 804b3fb:	0e                   	push   %cs
 804b3fc:	08 41 c5             	or     %al,-0x3b(%ecx)
 804b3ff:	0e                   	push   %cs
 804b400:	04 00                	add    $0x0,%al
 804b402:	00 00                	add    %al,(%eax)
 804b404:	10 00                	adc    %al,(%eax)
 804b406:	00 00                	add    %al,(%eax)
 804b408:	9c                   	pushf  
 804b409:	01 00                	add    %eax,(%eax)
 804b40b:	00 94 e3 ff ff 30 00 	add    %dl,0x30ffff(%ebx,%eiz,8)
 804b412:	00 00                	add    %al,(%eax)
 804b414:	00 00                	add    %al,(%eax)
 804b416:	00 00                	add    %al,(%eax)
 804b418:	10 00                	adc    %al,(%eax)
 804b41a:	00 00                	add    %al,(%eax)
 804b41c:	b0 01                	mov    $0x1,%al
 804b41e:	00 00                	add    %al,(%eax)
 804b420:	b0 e3                	mov    $0xe3,%al
 804b422:	ff                   	(bad)  
 804b423:	ff 30                	pushl  (%eax)
 804b425:	00 00                	add    %al,(%eax)
 804b427:	00 00                	add    %al,(%eax)
 804b429:	00 00                	add    %al,(%eax)
 804b42b:	00 14 00             	add    %dl,(%eax,%eax,1)
 804b42e:	00 00                	add    %al,(%eax)
 804b430:	c4 01                	les    (%ecx),%eax
 804b432:	00 00                	add    %al,(%eax)
 804b434:	cc                   	int3   
 804b435:	e3 ff                	jecxz  804b436 <smooth_baseline_cpes+0x436>
 804b437:	ff 2d 00 00 00 00    	ljmp   *0x0
 804b43d:	43                   	inc    %ebx
 804b43e:	0e                   	push   %cs
 804b43f:	20 69 0e             	and    %ch,0xe(%ecx)
 804b442:	04 00                	add    $0x0,%al
 804b444:	54                   	push   %esp
 804b445:	00 00                	add    %al,(%eax)
 804b447:	00 dc                	add    %bl,%ah
 804b449:	01 00                	add    %eax,(%eax)
 804b44b:	00 e4                	add    %ah,%ah
 804b44d:	e3 ff                	jecxz  804b44e <smooth_baseline_cpes+0x44e>
 804b44f:	ff 12                	call   *(%edx)
 804b451:	03 00                	add    (%eax),%eax
 804b453:	00 00                	add    %al,(%eax)
 804b455:	41                   	inc    %ecx
 804b456:	0e                   	push   %cs
 804b457:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 804b45d:	87 03                	xchg   %eax,(%ebx)
 804b45f:	41                   	inc    %ecx
 804b460:	0e                   	push   %cs
 804b461:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 804b467:	83 05 45 0e 70 03 ac 	addl   $0xffffffac,0x3700e45
 804b46e:	02 0a                	add    (%edx),%cl
 804b470:	0e                   	push   %cs
 804b471:	14 41                	adc    $0x41,%al
 804b473:	c3                   	ret    
 804b474:	0e                   	push   %cs
 804b475:	10 41 c6             	adc    %al,-0x3a(%ecx)
 804b478:	0e                   	push   %cs
 804b479:	0c 41                	or     $0x41,%al
 804b47b:	c7                   	(bad)  
 804b47c:	0e                   	push   %cs
 804b47d:	08 41 c5             	or     %al,-0x3b(%ecx)
 804b480:	0e                   	push   %cs
 804b481:	04 47                	add    $0x47,%al
 804b483:	0b 69 0a             	or     0xa(%ecx),%ebp
 804b486:	0e                   	push   %cs
 804b487:	14 41                	adc    $0x41,%al
 804b489:	c3                   	ret    
 804b48a:	0e                   	push   %cs
 804b48b:	10 41 c6             	adc    %al,-0x3a(%ecx)
 804b48e:	0e                   	push   %cs
 804b48f:	0c 41                	or     $0x41,%al
 804b491:	c7                   	(bad)  
 804b492:	0e                   	push   %cs
 804b493:	08 41 c5             	or     %al,-0x3b(%ecx)
 804b496:	0e                   	push   %cs
 804b497:	04 43                	add    $0x43,%al
 804b499:	0b 00                	or     (%eax),%eax
 804b49b:	00 14 00             	add    %dl,(%eax,%eax,1)
 804b49e:	00 00                	add    %al,(%eax)
 804b4a0:	34 02                	xor    $0x2,%al
 804b4a2:	00 00                	add    %al,(%eax)
 804b4a4:	ac                   	lods   %ds:(%esi),%al
 804b4a5:	e6 ff                	out    %al,$0xff
 804b4a7:	ff 2d 00 00 00 00    	ljmp   *0x0
 804b4ad:	43                   	inc    %ebx
 804b4ae:	0e                   	push   %cs
 804b4af:	20 69 0e             	and    %ch,0xe(%ecx)
 804b4b2:	04 00                	add    $0x0,%al
 804b4b4:	54                   	push   %esp
 804b4b5:	00 00                	add    %al,(%eax)
 804b4b7:	00 4c 02 00          	add    %cl,0x0(%edx,%eax,1)
 804b4bb:	00 c4                	add    %al,%ah
 804b4bd:	e6 ff                	out    %al,$0xff
 804b4bf:	ff 12                	call   *(%edx)
 804b4c1:	03 00                	add    (%eax),%eax
 804b4c3:	00 00                	add    %al,(%eax)
 804b4c5:	41                   	inc    %ecx
 804b4c6:	0e                   	push   %cs
 804b4c7:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 804b4cd:	87 03                	xchg   %eax,(%ebx)
 804b4cf:	41                   	inc    %ecx
 804b4d0:	0e                   	push   %cs
 804b4d1:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 804b4d7:	83 05 45 0e 70 03 ac 	addl   $0xffffffac,0x3700e45
 804b4de:	02 0a                	add    (%edx),%cl
 804b4e0:	0e                   	push   %cs
 804b4e1:	14 41                	adc    $0x41,%al
 804b4e3:	c3                   	ret    
 804b4e4:	0e                   	push   %cs
 804b4e5:	10 41 c6             	adc    %al,-0x3a(%ecx)
 804b4e8:	0e                   	push   %cs
 804b4e9:	0c 41                	or     $0x41,%al
 804b4eb:	c7                   	(bad)  
 804b4ec:	0e                   	push   %cs
 804b4ed:	08 41 c5             	or     %al,-0x3b(%ecx)
 804b4f0:	0e                   	push   %cs
 804b4f1:	04 47                	add    $0x47,%al
 804b4f3:	0b 69 0a             	or     0xa(%ecx),%ebp
 804b4f6:	0e                   	push   %cs
 804b4f7:	14 41                	adc    $0x41,%al
 804b4f9:	c3                   	ret    
 804b4fa:	0e                   	push   %cs
 804b4fb:	10 41 c6             	adc    %al,-0x3a(%ecx)
 804b4fe:	0e                   	push   %cs
 804b4ff:	0c 41                	or     $0x41,%al
 804b501:	c7                   	(bad)  
 804b502:	0e                   	push   %cs
 804b503:	08 41 c5             	or     %al,-0x3b(%ecx)
 804b506:	0e                   	push   %cs
 804b507:	04 43                	add    $0x43,%al
 804b509:	0b 00                	or     (%eax),%eax
 804b50b:	00 10                	add    %dl,(%eax)
 804b50d:	00 00                	add    %al,(%eax)
 804b50f:	00 a4 02 00 00 8c e9 	add    %ah,-0x16740000(%edx,%eax,1)
 804b516:	ff                   	(bad)  
 804b517:	ff 12                	call   *(%edx)
 804b519:	01 00                	add    %eax,(%eax)
 804b51b:	00 00                	add    %al,(%eax)
 804b51d:	43                   	inc    %ebx
 804b51e:	0e                   	push   %cs
 804b51f:	20 2c 00             	and    %ch,(%eax,%eax,1)
 804b522:	00 00                	add    %al,(%eax)
 804b524:	b8 02 00 00 18       	mov    $0x18000002,%eax
 804b529:	d3 ff                	sar    %cl,%edi
 804b52b:	ff 22                	jmp    *(%edx)
 804b52d:	06                   	push   %es
 804b52e:	00 00                	add    %al,(%eax)
 804b530:	00 41 0e             	add    %al,0xe(%ecx)
 804b533:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 804b539:	4c                   	dec    %esp
 804b53a:	87 03                	xchg   %eax,(%ebx)
 804b53c:	86 04 83             	xchg   %al,(%ebx,%eax,4)
 804b53f:	05 03 c6 04 0a       	add    $0xa04c603,%eax
 804b544:	c3                   	ret    
 804b545:	41                   	inc    %ecx
 804b546:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 804b54a:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 804b54d:	04 41                	add    $0x41,%al
 804b54f:	0b 38                	or     (%eax),%edi
 804b551:	00 00                	add    %al,(%eax)
 804b553:	00 e8                	add    %ch,%al
 804b555:	02 00                	add    (%eax),%al
 804b557:	00 68 ea             	add    %ch,-0x16(%eax)
 804b55a:	ff                   	(bad)  
 804b55b:	ff 72 00             	pushl  0x0(%edx)
 804b55e:	00 00                	add    %al,(%eax)
 804b560:	00 41 0e             	add    %al,0xe(%ecx)
 804b563:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 804b569:	87 03                	xchg   %eax,(%ebx)
 804b56b:	41                   	inc    %ecx
 804b56c:	0e                   	push   %cs
 804b56d:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 804b573:	83 05 43 0e 1c 02 66 	addl   $0x66,0x21c0e43
 804b57a:	0e                   	push   %cs
 804b57b:	14 41                	adc    $0x41,%al
 804b57d:	c3                   	ret    
 804b57e:	0e                   	push   %cs
 804b57f:	10 41 c6             	adc    %al,-0x3a(%ecx)
 804b582:	0e                   	push   %cs
 804b583:	0c 41                	or     $0x41,%al
 804b585:	c7                   	(bad)  
 804b586:	0e                   	push   %cs
 804b587:	08 41 c5             	or     %al,-0x3b(%ecx)
 804b58a:	0e                   	push   %cs
 804b58b:	04 38                	add    $0x38,%al
 804b58d:	00 00                	add    %al,(%eax)
 804b58f:	00 24 03             	add    %ah,(%ebx,%eax,1)
 804b592:	00 00                	add    %al,(%eax)
 804b594:	ac                   	lods   %ds:(%esi),%al
 804b595:	ea ff ff 72 00 00 00 	ljmp   $0x0,$0x72ffff
 804b59c:	00 41 0e             	add    %al,0xe(%ecx)
 804b59f:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 804b5a5:	87 03                	xchg   %eax,(%ebx)
 804b5a7:	41                   	inc    %ecx
 804b5a8:	0e                   	push   %cs
 804b5a9:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 804b5af:	83 05 43 0e 1c 02 66 	addl   $0x66,0x21c0e43
 804b5b6:	0e                   	push   %cs
 804b5b7:	14 41                	adc    $0x41,%al
 804b5b9:	c3                   	ret    
 804b5ba:	0e                   	push   %cs
 804b5bb:	10 41 c6             	adc    %al,-0x3a(%ecx)
 804b5be:	0e                   	push   %cs
 804b5bf:	0c 41                	or     $0x41,%al
 804b5c1:	c7                   	(bad)  
 804b5c2:	0e                   	push   %cs
 804b5c3:	08 41 c5             	or     %al,-0x3b(%ecx)
 804b5c6:	0e                   	push   %cs
 804b5c7:	04 3c                	add    $0x3c,%al
 804b5c9:	00 00                	add    %al,(%eax)
 804b5cb:	00 60 03             	add    %ah,0x3(%eax)
 804b5ce:	00 00                	add    %al,(%eax)
 804b5d0:	f0 ea ff ff c5 01 00 	lock ljmp $0x0,$0x1c5ffff
 804b5d7:	00 
 804b5d8:	00 41 0e             	add    %al,0xe(%ecx)
 804b5db:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 804b5e1:	87 03                	xchg   %eax,(%ebx)
 804b5e3:	41                   	inc    %ecx
 804b5e4:	0e                   	push   %cs
 804b5e5:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 804b5eb:	83 05 43 0e 58 03 aa 	addl   $0xffffffaa,0x3580e43
 804b5f2:	01 0a                	add    %ecx,(%edx)
 804b5f4:	0e                   	push   %cs
 804b5f5:	14 41                	adc    $0x41,%al
 804b5f7:	c3                   	ret    
 804b5f8:	0e                   	push   %cs
 804b5f9:	10 41 c6             	adc    %al,-0x3a(%ecx)
 804b5fc:	0e                   	push   %cs
 804b5fd:	0c 41                	or     $0x41,%al
 804b5ff:	c7                   	(bad)  
 804b600:	0e                   	push   %cs
 804b601:	08 41 c5             	or     %al,-0x3b(%ecx)
 804b604:	0e                   	push   %cs
 804b605:	04 41                	add    $0x41,%al
 804b607:	0b 10                	or     (%eax),%edx
 804b609:	00 00                	add    %al,(%eax)
 804b60b:	00 a0 03 00 00 80    	add    %ah,-0x7ffffffd(%eax)
 804b611:	ec                   	in     (%dx),%al
 804b612:	ff                   	(bad)  
 804b613:	ff 05 00 00 00 00    	incl   0x0
 804b619:	00 00                	add    %al,(%eax)
 804b61b:	00 14 00             	add    %dl,(%eax,%eax,1)
 804b61e:	00 00                	add    %al,(%eax)
 804b620:	b4 03                	mov    $0x3,%ah
 804b622:	00 00                	add    %al,(%eax)
 804b624:	7c ec                	jl     804b612 <smooth_baseline_cpes+0x612>
 804b626:	ff                   	(bad)  
 804b627:	ff 2f                	ljmp   *(%edi)
 804b629:	00 00                	add    %al,(%eax)
 804b62b:	00 00                	add    %al,(%eax)
 804b62d:	43                   	inc    %ebx
 804b62e:	0e                   	push   %cs
 804b62f:	20 6b 0e             	and    %ch,0xe(%ebx)
 804b632:	04 00                	add    $0x0,%al
 804b634:	14 00                	adc    $0x0,%al
 804b636:	00 00                	add    %al,(%eax)
 804b638:	cc                   	int3   
 804b639:	03 00                	add    (%eax),%eax
 804b63b:	00 94 ec ff ff 2f 00 	add    %dl,0x2fffff(%esp,%ebp,8)
 804b642:	00 00                	add    %al,(%eax)
 804b644:	00 43 0e             	add    %al,0xe(%ebx)
 804b647:	20 6b 0e             	and    %ch,0xe(%ebx)
 804b64a:	04 00                	add    $0x0,%al
 804b64c:	2c 00                	sub    $0x0,%al
 804b64e:	00 00                	add    %al,(%eax)
 804b650:	e4 03                	in     $0x3,%al
 804b652:	00 00                	add    %al,(%eax)
 804b654:	ac                   	lods   %ds:(%esi),%al
 804b655:	ec                   	in     (%dx),%al
 804b656:	ff                   	(bad)  
 804b657:	ff ae 00 00 00 00    	ljmp   *0x0(%esi)
 804b65d:	41                   	inc    %ecx
 804b65e:	0e                   	push   %cs
 804b65f:	08 86 02 4d 0e 0c    	or     %al,0xc0e4d02(%esi)
 804b665:	83 03 02             	addl   $0x2,(%ebx)
 804b668:	7f 0a                	jg     804b674 <smooth_baseline_cpes+0x674>
 804b66a:	c3                   	ret    
 804b66b:	0e                   	push   %cs
 804b66c:	08 41 c6             	or     %al,-0x3a(%ecx)
 804b66f:	0e                   	push   %cs
 804b670:	04 42                	add    $0x42,%al
 804b672:	0b 56 c3             	or     -0x3d(%esi),%edx
 804b675:	0e                   	push   %cs
 804b676:	08 47 c6             	or     %al,-0x3a(%edi)
 804b679:	0e                   	push   %cs
 804b67a:	04 00                	add    $0x0,%al
 804b67c:	10 00                	adc    %al,(%eax)
 804b67e:	00 00                	add    %al,(%eax)
 804b680:	14 04                	adc    $0x4,%al
 804b682:	00 00                	add    %al,(%eax)
 804b684:	2c ed                	sub    $0xed,%al
 804b686:	ff                   	(bad)  
 804b687:	ff 30                	pushl  (%eax)
 804b689:	00 00                	add    %al,(%eax)
 804b68b:	00 00                	add    %al,(%eax)
 804b68d:	00 00                	add    %al,(%eax)
 804b68f:	00 14 00             	add    %dl,(%eax,%eax,1)
 804b692:	00 00                	add    %al,(%eax)
 804b694:	28 04 00             	sub    %al,(%eax,%eax,1)
 804b697:	00 48 ed             	add    %cl,-0x13(%eax)
 804b69a:	ff                   	(bad)  
 804b69b:	ff                   	(bad)  
 804b69c:	3c 00                	cmp    $0x0,%al
 804b69e:	00 00                	add    %al,(%eax)
 804b6a0:	00 43 0e             	add    %al,0xe(%ebx)
 804b6a3:	20 78 0e             	and    %bh,0xe(%eax)
 804b6a6:	04 00                	add    $0x0,%al
 804b6a8:	34 00                	xor    $0x0,%al
 804b6aa:	00 00                	add    %al,(%eax)
 804b6ac:	40                   	inc    %eax
 804b6ad:	04 00                	add    $0x0,%al
 804b6af:	00 70 ed             	add    %dh,-0x13(%eax)
 804b6b2:	ff                   	(bad)  
 804b6b3:	ff 8f 00 00 00 00    	decl   0x0(%edi)
 804b6b9:	41                   	inc    %ecx
 804b6ba:	0e                   	push   %cs
 804b6bb:	08 87 02 41 0e 0c    	or     %al,0xc0e4102(%edi)
 804b6c1:	86 03                	xchg   %al,(%ebx)
 804b6c3:	41                   	inc    %ecx
 804b6c4:	0e                   	push   %cs
 804b6c5:	10 83 04 43 0e 20    	adc    %al,0x200e4304(%ebx)
 804b6cb:	02 43 0a             	add    0xa(%ebx),%al
 804b6ce:	0e                   	push   %cs
 804b6cf:	10 41 c3             	adc    %al,-0x3d(%ecx)
 804b6d2:	0e                   	push   %cs
 804b6d3:	0c 41                	or     $0x41,%al
 804b6d5:	c6                   	(bad)  
 804b6d6:	0e                   	push   %cs
 804b6d7:	08 41 c7             	or     %al,-0x39(%ecx)
 804b6da:	0e                   	push   %cs
 804b6db:	04 41                	add    $0x41,%al
 804b6dd:	0b 00                	or     (%eax),%eax
 804b6df:	00 28                	add    %ch,(%eax)
 804b6e1:	00 00                	add    %al,(%eax)
 804b6e3:	00 78 04             	add    %bh,0x4(%eax)
 804b6e6:	00 00                	add    %al,(%eax)
 804b6e8:	c8 ed ff ff          	enter  $0xffed,$0xff
 804b6ec:	c7 00 00 00 00 41    	movl   $0x41000000,(%eax)
 804b6f2:	0e                   	push   %cs
 804b6f3:	08 86 02 41 0e 0c    	or     %al,0xc0e4102(%esi)
 804b6f9:	83 03 43             	addl   $0x43,(%ebx)
 804b6fc:	0e                   	push   %cs
 804b6fd:	30 02                	xor    %al,(%edx)
 804b6ff:	bf 0e 0c 41 c3       	mov    $0xc3410c0e,%edi
 804b704:	0e                   	push   %cs
 804b705:	08 41 c6             	or     %al,-0x3a(%ecx)
 804b708:	0e                   	push   %cs
 804b709:	04 00                	add    $0x0,%al
 804b70b:	00 28                	add    %ch,(%eax)
 804b70d:	00 00                	add    %al,(%eax)
 804b70f:	00 a4 04 00 00 6c ee 	add    %ah,-0x11940000(%esp,%eax,1)
 804b716:	ff                   	(bad)  
 804b717:	ff c7                	inc    %edi
 804b719:	00 00                	add    %al,(%eax)
 804b71b:	00 00                	add    %al,(%eax)
 804b71d:	41                   	inc    %ecx
 804b71e:	0e                   	push   %cs
 804b71f:	08 86 02 41 0e 0c    	or     %al,0xc0e4102(%esi)
 804b725:	83 03 43             	addl   $0x43,(%ebx)
 804b728:	0e                   	push   %cs
 804b729:	30 02                	xor    %al,(%edx)
 804b72b:	bf 0e 0c 41 c3       	mov    $0xc3410c0e,%edi
 804b730:	0e                   	push   %cs
 804b731:	08 41 c6             	or     %al,-0x3a(%ecx)
 804b734:	0e                   	push   %cs
 804b735:	04 00                	add    $0x0,%al
 804b737:	00 10                	add    %dl,(%eax)
 804b739:	00 00                	add    %al,(%eax)
 804b73b:	00 d0                	add    %dl,%al
 804b73d:	04 00                	add    $0x0,%al
 804b73f:	00 10                	add    %dl,(%eax)
 804b741:	ef                   	out    %eax,(%dx)
 804b742:	ff                   	(bad)  
 804b743:	ff 0a                	decl   (%edx)
 804b745:	00 00                	add    %al,(%eax)
 804b747:	00 00                	add    %al,(%eax)
 804b749:	00 00                	add    %al,(%eax)
 804b74b:	00 14 00             	add    %dl,(%eax,%eax,1)
 804b74e:	00 00                	add    %al,(%eax)
 804b750:	e4 04                	in     $0x4,%al
 804b752:	00 00                	add    %al,(%eax)
 804b754:	0c ef                	or     $0xef,%al
 804b756:	ff                   	(bad)  
 804b757:	ff 33                	pushl  (%ebx)
 804b759:	00 00                	add    %al,(%eax)
 804b75b:	00 00                	add    %al,(%eax)
 804b75d:	43                   	inc    %ebx
 804b75e:	0e                   	push   %cs
 804b75f:	20 6f 0e             	and    %ch,0xe(%edi)
 804b762:	04 00                	add    $0x0,%al
 804b764:	10 00                	adc    %al,(%eax)
 804b766:	00 00                	add    %al,(%eax)
 804b768:	fc                   	cld    
 804b769:	04 00                	add    $0x0,%al
 804b76b:	00 34 ef             	add    %dh,(%edi,%ebp,8)
 804b76e:	ff                   	(bad)  
 804b76f:	ff 0a                	decl   (%edx)
 804b771:	00 00                	add    %al,(%eax)
 804b773:	00 00                	add    %al,(%eax)
 804b775:	00 00                	add    %al,(%eax)
 804b777:	00 10                	add    %dl,(%eax)
 804b779:	00 00                	add    %al,(%eax)
 804b77b:	00 10                	add    %dl,(%eax)
 804b77d:	05 00 00 30 ef       	add    $0xef300000,%eax
 804b782:	ff                   	(bad)  
 804b783:	ff 0a                	decl   (%edx)
 804b785:	00 00                	add    %al,(%eax)
 804b787:	00 00                	add    %al,(%eax)
 804b789:	00 00                	add    %al,(%eax)
 804b78b:	00 10                	add    %dl,(%eax)
 804b78d:	00 00                	add    %al,(%eax)
 804b78f:	00 24 05 00 00 2c ef 	add    %ah,-0x10d40000(,%eax,1)
 804b796:	ff                   	(bad)  
 804b797:	ff 0a                	decl   (%edx)
 804b799:	00 00                	add    %al,(%eax)
 804b79b:	00 00                	add    %al,(%eax)
 804b79d:	00 00                	add    %al,(%eax)
 804b79f:	00 10                	add    %dl,(%eax)
 804b7a1:	00 00                	add    %al,(%eax)
 804b7a3:	00 38                	add    %bh,(%eax)
 804b7a5:	05 00 00 28 ef       	add    $0xef280000,%eax
 804b7aa:	ff                   	(bad)  
 804b7ab:	ff 0a                	decl   (%edx)
 804b7ad:	00 00                	add    %al,(%eax)
 804b7af:	00 00                	add    %al,(%eax)
 804b7b1:	00 00                	add    %al,(%eax)
 804b7b3:	00 10                	add    %dl,(%eax)
 804b7b5:	00 00                	add    %al,(%eax)
 804b7b7:	00 4c 05 00          	add    %cl,0x0(%ebp,%eax,1)
 804b7bb:	00 24 ef             	add    %ah,(%edi,%ebp,8)
 804b7be:	ff                   	(bad)  
 804b7bf:	ff 0b                	decl   (%ebx)
 804b7c1:	00 00                	add    %al,(%eax)
 804b7c3:	00 00                	add    %al,(%eax)
 804b7c5:	00 00                	add    %al,(%eax)
 804b7c7:	00 18                	add    %bl,(%eax)
 804b7c9:	00 00                	add    %al,(%eax)
 804b7cb:	00 60 05             	add    %ah,0x5(%eax)
 804b7ce:	00 00                	add    %al,(%eax)
 804b7d0:	20 ef                	and    %ch,%bh
 804b7d2:	ff                   	(bad)  
 804b7d3:	ff 15 00 00 00 00    	call   *0x0
 804b7d9:	41                   	inc    %ecx
 804b7da:	0e                   	push   %cs
 804b7db:	08 83 02 53 c3 0e    	or     %al,0xec35302(%ebx)
 804b7e1:	04 00                	add    $0x0,%al
 804b7e3:	00 18                	add    %bl,(%eax)
 804b7e5:	00 00                	add    %al,(%eax)
 804b7e7:	00 7c 05 00          	add    %bh,0x0(%ebp,%eax,1)
 804b7eb:	00 24 ef             	add    %ah,(%edi,%ebp,8)
 804b7ee:	ff                   	(bad)  
 804b7ef:	ff 15 00 00 00 00    	call   *0x0
 804b7f5:	41                   	inc    %ecx
 804b7f6:	0e                   	push   %cs
 804b7f7:	08 83 02 53 c3 0e    	or     %al,0xec35302(%ebx)
 804b7fd:	04 00                	add    $0x0,%al
 804b7ff:	00 28                	add    %ch,(%eax)
 804b801:	00 00                	add    %al,(%eax)
 804b803:	00 98 05 00 00 28    	add    %bl,0x28000005(%eax)
 804b809:	ef                   	out    %eax,(%dx)
 804b80a:	ff                   	(bad)  
 804b80b:	ff 86 00 00 00 00    	incl   0x0(%esi)
 804b811:	41                   	inc    %ecx
 804b812:	0e                   	push   %cs
 804b813:	08 83 02 43 0e 50    	or     %al,0x500e4302(%ebx)
 804b819:	02 4f 0a             	add    0xa(%edi),%cl
 804b81c:	0e                   	push   %cs
 804b81d:	08 41 c3             	or     %al,-0x3d(%ecx)
 804b820:	0e                   	push   %cs
 804b821:	04 44                	add    $0x44,%al
 804b823:	0b 6c 0e 08          	or     0x8(%esi,%ecx,1),%ebp
 804b827:	41                   	inc    %ecx
 804b828:	c3                   	ret    
 804b829:	0e                   	push   %cs
 804b82a:	04 00                	add    $0x0,%al
 804b82c:	1c 00                	sbb    $0x0,%al
 804b82e:	00 00                	add    %al,(%eax)
 804b830:	c4 05 00 00 8c ef    	les    0xef8c0000,%eax
 804b836:	ff                   	(bad)  
 804b837:	ff 40 00             	incl   0x0(%eax)
 804b83a:	00 00                	add    %al,(%eax)
 804b83c:	00 43 0e             	add    %al,0xe(%ebx)
 804b83f:	10 48 83             	adc    %cl,-0x7d(%eax)
 804b842:	03 86 02 70 c6 c3    	add    -0x3c398ffe(%esi),%eax
 804b848:	0e                   	push   %cs
 804b849:	04 00                	add    $0x0,%al
 804b84b:	00 1c 00             	add    %bl,(%eax,%eax,1)
 804b84e:	00 00                	add    %al,(%eax)
 804b850:	e4 05                	in     $0x5,%al
 804b852:	00 00                	add    %al,(%eax)
 804b854:	ac                   	lods   %ds:(%esi),%al
 804b855:	ef                   	out    %eax,(%dx)
 804b856:	ff                   	(bad)  
 804b857:	ff 72 00             	pushl  0x0(%edx)
 804b85a:	00 00                	add    %al,(%eax)
 804b85c:	00 43 0e             	add    %al,0xe(%ebx)
 804b85f:	30 44 83 03          	xor    %al,0x3(%ebx,%eax,4)
 804b863:	48                   	dec    %eax
 804b864:	86 02                	xchg   %al,(%edx)
 804b866:	02 62 c6             	add    -0x3a(%edx),%ah
 804b869:	c3                   	ret    
 804b86a:	0e                   	push   %cs
 804b86b:	04 14                	add    $0x14,%al
 804b86d:	00 00                	add    %al,(%eax)
 804b86f:	00 04 06             	add    %al,(%esi,%eax,1)
 804b872:	00 00                	add    %al,(%eax)
 804b874:	0c f0                	or     $0xf0,%al
 804b876:	ff                   	(bad)  
 804b877:	ff 1b                	lcall  *(%ebx)
 804b879:	00 00                	add    %al,(%eax)
 804b87b:	00 00                	add    %al,(%eax)
 804b87d:	43                   	inc    %ebx
 804b87e:	0e                   	push   %cs
 804b87f:	20 57 0e             	and    %dl,0xe(%edi)
 804b882:	04 00                	add    $0x0,%al
 804b884:	34 00                	xor    $0x0,%al
 804b886:	00 00                	add    %al,(%eax)
 804b888:	1c 06                	sbb    $0x6,%al
 804b88a:	00 00                	add    %al,(%eax)
 804b88c:	14 f0                	adc    $0xf0,%al
 804b88e:	ff                   	(bad)  
 804b88f:	ff 36                	pushl  (%esi)
 804b891:	01 00                	add    %eax,(%eax)
 804b893:	00 00                	add    %al,(%eax)
 804b895:	41                   	inc    %ecx
 804b896:	0e                   	push   %cs
 804b897:	08 87 02 41 0e 0c    	or     %al,0xc0e4102(%edi)
 804b89d:	86 03                	xchg   %al,(%ebx)
 804b89f:	41                   	inc    %ecx
 804b8a0:	0e                   	push   %cs
 804b8a1:	10 83 04 43 0e 60    	adc    %al,0x600e4304(%ebx)
 804b8a7:	02 40 0a             	add    0xa(%eax),%al
 804b8aa:	0e                   	push   %cs
 804b8ab:	10 41 c3             	adc    %al,-0x3d(%ecx)
 804b8ae:	0e                   	push   %cs
 804b8af:	0c 41                	or     $0x41,%al
 804b8b1:	c6                   	(bad)  
 804b8b2:	0e                   	push   %cs
 804b8b3:	08 41 c7             	or     %al,-0x39(%ecx)
 804b8b6:	0e                   	push   %cs
 804b8b7:	04 47                	add    $0x47,%al
 804b8b9:	0b 00                	or     (%eax),%eax
 804b8bb:	00 14 00             	add    %dl,(%eax,%eax,1)
 804b8be:	00 00                	add    %al,(%eax)
 804b8c0:	54                   	push   %esp
 804b8c1:	06                   	push   %es
 804b8c2:	00 00                	add    %al,(%eax)
 804b8c4:	1c f1                	sbb    $0xf1,%al
 804b8c6:	ff                   	(bad)  
 804b8c7:	ff                   	(bad)  
 804b8c8:	3a 00                	cmp    (%eax),%al
 804b8ca:	00 00                	add    %al,(%eax)
 804b8cc:	00 43 0e             	add    %al,0xe(%ebx)
 804b8cf:	40                   	inc    %eax
 804b8d0:	74 0e                	je     804b8e0 <smooth_baseline_cpes+0x8e0>
 804b8d2:	04 00                	add    $0x0,%al
 804b8d4:	38 00                	cmp    %al,(%eax)
 804b8d6:	00 00                	add    %al,(%eax)
 804b8d8:	6c                   	insb   (%dx),%es:(%edi)
 804b8d9:	06                   	push   %es
 804b8da:	00 00                	add    %al,(%eax)
 804b8dc:	44                   	inc    %esp
 804b8dd:	f1                   	icebp  
 804b8de:	ff                   	(bad)  
 804b8df:	ff 61 00             	jmp    *0x0(%ecx)
 804b8e2:	00 00                	add    %al,(%eax)
 804b8e4:	00 41 0e             	add    %al,0xe(%ecx)
 804b8e7:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 804b8ed:	87 03                	xchg   %eax,(%ebx)
 804b8ef:	41                   	inc    %ecx
 804b8f0:	0e                   	push   %cs
 804b8f1:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 804b8f7:	83 05 4e 0e 30 02 4a 	addl   $0x4a,0x2300e4e
 804b8fe:	0e                   	push   %cs
 804b8ff:	14 41                	adc    $0x41,%al
 804b901:	0e                   	push   %cs
 804b902:	10 c3                	adc    %al,%bl
 804b904:	41                   	inc    %ecx
 804b905:	0e                   	push   %cs
 804b906:	0c c6                	or     $0xc6,%al
 804b908:	41                   	inc    %ecx
 804b909:	0e                   	push   %cs
 804b90a:	08 c7                	or     %al,%bh
 804b90c:	41                   	inc    %ecx
 804b90d:	0e                   	push   %cs
 804b90e:	04 c5                	add    $0xc5,%al
 804b910:	10 00                	adc    %al,(%eax)
 804b912:	00 00                	add    %al,(%eax)
 804b914:	a8 06                	test   $0x6,%al
 804b916:	00 00                	add    %al,(%eax)
 804b918:	78 f1                	js     804b90b <smooth_baseline_cpes+0x90b>
 804b91a:	ff                   	(bad)  
 804b91b:	ff 02                	incl   (%edx)
 804b91d:	00 00                	add    %al,(%eax)
 804b91f:	00 00                	add    %al,(%eax)
 804b921:	00 00                	add    %al,(%eax)
 804b923:	00 10                	add    %dl,(%eax)
 804b925:	00 00                	add    %al,(%eax)
 804b927:	00 bc 06 00 00 66 f1 	add    %bh,-0xe9a0000(%esi,%eax,1)
 804b92e:	ff                   	(bad)  
 804b92f:	ff 04 00             	incl   (%eax,%eax,1)
 804b932:	00 00                	add    %al,(%eax)
 804b934:	00 00                	add    %al,(%eax)
	...

0804b938 <__FRAME_END__>:
 804b938:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

0804cf00 <__frame_dummy_init_array_entry>:
 804cf00:	20                   	.byte 0x20
 804cf01:	8f 04 08             	popl   (%eax,%ecx,1)

Disassembly of section .fini_array:

0804cf04 <__do_global_dtors_aux_fini_array_entry>:
 804cf04:	00                   	.byte 0x0
 804cf05:	8f 04 08             	popl   (%eax,%ecx,1)

Disassembly of section .jcr:

0804cf08 <__JCR_END__>:
 804cf08:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

0804cf0c <_DYNAMIC>:
 804cf0c:	01 00                	add    %eax,(%eax)
 804cf0e:	00 00                	add    %al,(%eax)
 804cf10:	01 00                	add    %eax,(%eax)
 804cf12:	00 00                	add    %al,(%eax)
 804cf14:	01 00                	add    %eax,(%eax)
 804cf16:	00 00                	add    %al,(%eax)
 804cf18:	32 00                	xor    (%eax),%al
 804cf1a:	00 00                	add    %al,(%eax)
 804cf1c:	0c 00                	or     $0x0,%al
 804cf1e:	00 00                	add    %al,(%eax)
 804cf20:	7c 86                	jl     804cea8 <__FRAME_END__+0x1570>
 804cf22:	04 08                	add    $0x8,%al
 804cf24:	0d 00 00 00 98       	or     $0x98000000,%eax
 804cf29:	aa                   	stos   %al,%es:(%edi)
 804cf2a:	04 08                	add    $0x8,%al
 804cf2c:	19 00                	sbb    %eax,(%eax)
 804cf2e:	00 00                	add    %al,(%eax)
 804cf30:	00 cf                	add    %cl,%bh
 804cf32:	04 08                	add    $0x8,%al
 804cf34:	1b 00                	sbb    (%eax),%eax
 804cf36:	00 00                	add    %al,(%eax)
 804cf38:	04 00                	add    $0x0,%al
 804cf3a:	00 00                	add    %al,(%eax)
 804cf3c:	1a 00                	sbb    (%eax),%al
 804cf3e:	00 00                	add    %al,(%eax)
 804cf40:	04 cf                	add    $0xcf,%al
 804cf42:	04 08                	add    $0x8,%al
 804cf44:	1c 00                	sbb    $0x0,%al
 804cf46:	00 00                	add    %al,(%eax)
 804cf48:	04 00                	add    $0x0,%al
 804cf4a:	00 00                	add    %al,(%eax)
 804cf4c:	f5                   	cmc    
 804cf4d:	fe                   	(bad)  
 804cf4e:	ff 6f ac             	ljmp   *-0x54(%edi)
 804cf51:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 804cf58:	b8 83 04 08 06       	mov    $0x6080483,%eax
 804cf5d:	00 00                	add    %al,(%eax)
 804cf5f:	00 d8                	add    %bl,%al
 804cf61:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 804cf68:	37                   	aaa    
 804cf69:	01 00                	add    %eax,(%eax)
 804cf6b:	00 0b                	add    %cl,(%ebx)
 804cf6d:	00 00                	add    %al,(%eax)
 804cf6f:	00 10                	add    %dl,(%eax)
 804cf71:	00 00                	add    %al,(%eax)
 804cf73:	00 15 00 00 00 00    	add    %dl,0x0
 804cf79:	00 00                	add    %al,(%eax)
 804cf7b:	00 03                	add    %al,(%ebx)
 804cf7d:	00 00                	add    %al,(%eax)
 804cf7f:	00 00                	add    %al,(%eax)
 804cf81:	d0 04 08             	rolb   (%eax,%ecx,1)
 804cf84:	02 00                	add    (%eax),%al
 804cf86:	00 00                	add    %al,(%eax)
 804cf88:	c8 00 00 00          	enter  $0x0,$0x0
 804cf8c:	14 00                	adc    $0x0,%al
 804cf8e:	00 00                	add    %al,(%eax)
 804cf90:	11 00                	adc    %eax,(%eax)
 804cf92:	00 00                	add    %al,(%eax)
 804cf94:	17                   	pop    %ss
 804cf95:	00 00                	add    %al,(%eax)
 804cf97:	00 b4 85 04 08 11 00 	add    %dh,0x110804(%ebp,%eax,4)
 804cf9e:	00 00                	add    %al,(%eax)
 804cfa0:	9c                   	pushf  
 804cfa1:	85 04 08             	test   %eax,(%eax,%ecx,1)
 804cfa4:	12 00                	adc    (%eax),%al
 804cfa6:	00 00                	add    %al,(%eax)
 804cfa8:	18 00                	sbb    %al,(%eax)
 804cfaa:	00 00                	add    %al,(%eax)
 804cfac:	13 00                	adc    (%eax),%eax
 804cfae:	00 00                	add    %al,(%eax)
 804cfb0:	08 00                	or     %al,(%eax)
 804cfb2:	00 00                	add    %al,(%eax)
 804cfb4:	fe                   	(bad)  
 804cfb5:	ff                   	(bad)  
 804cfb6:	ff 6f 2c             	ljmp   *0x2c(%edi)
 804cfb9:	85 04 08             	test   %eax,(%eax,%ecx,1)
 804cfbc:	ff                   	(bad)  
 804cfbd:	ff                   	(bad)  
 804cfbe:	ff 6f 02             	ljmp   *0x2(%edi)
 804cfc1:	00 00                	add    %al,(%eax)
 804cfc3:	00 f0                	add    %dh,%al
 804cfc5:	ff                   	(bad)  
 804cfc6:	ff 6f f0             	ljmp   *-0x10(%edi)
 804cfc9:	84 04 08             	test   %al,(%eax,%ecx,1)
	...

Disassembly of section .got:

0804cffc <.got>:
 804cffc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

0804d000 <_GLOBAL_OFFSET_TABLE_>:
 804d000:	0c cf                	or     $0xcf,%al
 804d002:	04 08                	add    $0x8,%al
	...
 804d00c:	b6 86                	mov    $0x86,%dh
 804d00e:	04 08                	add    $0x8,%al
 804d010:	c6 86 04 08 d6 86 04 	movb   $0x4,-0x7929f7fc(%esi)
 804d017:	08 e6                	or     %ah,%dh
 804d019:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 804d01c:	f6 86 04 08 06 87 04 	testb  $0x4,-0x78f9f7fc(%esi)
 804d023:	08 16                	or     %dl,(%esi)
 804d025:	87 04 08             	xchg   %eax,(%eax,%ecx,1)
 804d028:	26 87 04 08          	xchg   %eax,%es:(%eax,%ecx,1)
 804d02c:	36 87 04 08          	xchg   %eax,%ss:(%eax,%ecx,1)
 804d030:	46                   	inc    %esi
 804d031:	87 04 08             	xchg   %eax,(%eax,%ecx,1)
 804d034:	56                   	push   %esi
 804d035:	87 04 08             	xchg   %eax,(%eax,%ecx,1)
 804d038:	66 87 04 08          	xchg   %ax,(%eax,%ecx,1)
 804d03c:	76 87                	jbe    804cfc5 <_DYNAMIC+0xb9>
 804d03e:	04 08                	add    $0x8,%al
 804d040:	86 87 04 08 96 87    	xchg   %al,-0x7869f7fc(%edi)
 804d046:	04 08                	add    $0x8,%al
 804d048:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
 804d049:	87 04 08             	xchg   %eax,(%eax,%ecx,1)
 804d04c:	b6 87                	mov    $0x87,%dh
 804d04e:	04 08                	add    $0x8,%al
 804d050:	c6 87 04 08 d6 87 04 	movb   $0x4,-0x7829f7fc(%edi)
 804d057:	08 e6                	or     %ah,%dh
 804d059:	87 04 08             	xchg   %eax,(%eax,%ecx,1)
 804d05c:	f6 87 04 08 06 88 04 	testb  $0x4,-0x77f9f7fc(%edi)
 804d063:	08 16                	or     %dl,(%esi)
 804d065:	88 04 08             	mov    %al,(%eax,%ecx,1)
 804d068:	26 88 04 08          	mov    %al,%es:(%eax,%ecx,1)
 804d06c:	36 88 04 08          	mov    %al,%ss:(%eax,%ecx,1)

Disassembly of section .data:

0804d080 <__data_start>:
 804d080:	00 00                	add    %al,(%eax)
	...

0804d084 <__dso_handle>:
	...

0804d0a0 <smooth_descr>:
 804d0a0:	73 6d                	jae    804d10f <rotate_descr+0xf>
 804d0a2:	6f                   	outsl  %ds:(%esi),(%dx)
 804d0a3:	6f                   	outsl  %ds:(%esi),(%dx)
 804d0a4:	74 68                	je     804d10e <rotate_descr+0xe>
 804d0a6:	3a 20                	cmp    (%eax),%ah
 804d0a8:	43                   	inc    %ebx
 804d0a9:	75 72                	jne    804d11d <rotate_descr+0x1d>
 804d0ab:	72 65                	jb     804d112 <rotate_descr+0x12>
 804d0ad:	6e                   	outsb  %ds:(%esi),(%dx)
 804d0ae:	74 20                	je     804d0d0 <naive_smooth_descr+0x10>
 804d0b0:	77 6f                	ja     804d121 <naive_rotate_descr+0x1>
 804d0b2:	72 6b                	jb     804d11f <rotate_descr+0x1f>
 804d0b4:	69 6e 67 20 76 65 72 	imul   $0x72657620,0x67(%esi),%ebp
 804d0bb:	73 69                	jae    804d126 <naive_rotate_descr+0x6>
 804d0bd:	6f                   	outsl  %ds:(%esi),(%dx)
 804d0be:	6e                   	outsb  %ds:(%esi),(%dx)
	...

0804d0c0 <naive_smooth_descr>:
 804d0c0:	6e                   	outsb  %ds:(%esi),(%dx)
 804d0c1:	61                   	popa   
 804d0c2:	69 76 65 5f 73 6d 6f 	imul   $0x6f6d735f,0x65(%esi),%esi
 804d0c9:	6f                   	outsl  %ds:(%esi),(%dx)
 804d0ca:	74 68                	je     804d134 <naive_rotate_descr+0x14>
 804d0cc:	3a 20                	cmp    (%eax),%ah
 804d0ce:	4e                   	dec    %esi
 804d0cf:	61                   	popa   
 804d0d0:	69 76 65 20 62 61 73 	imul   $0x73616220,0x65(%esi),%esi
 804d0d7:	65                   	gs
 804d0d8:	6c                   	insb   (%dx),%es:(%edi)
 804d0d9:	69 6e 65 20 69 6d 70 	imul   $0x706d6920,0x65(%esi),%ebp
 804d0e0:	6c                   	insb   (%dx),%es:(%edi)
 804d0e1:	65                   	gs
 804d0e2:	6d                   	insl   (%dx),%es:(%edi)
 804d0e3:	65 6e                	outsb  %gs:(%esi),(%dx)
 804d0e5:	74 61                	je     804d148 <naive_rotate_descr+0x28>
 804d0e7:	74 69                	je     804d152 <team+0x6>
 804d0e9:	6f                   	outsl  %ds:(%esi),(%dx)
 804d0ea:	6e                   	outsb  %ds:(%esi),(%dx)
	...

0804d100 <rotate_descr>:
 804d100:	72 6f                	jb     804d171 <epsilon+0x1>
 804d102:	74 61                	je     804d165 <kbest+0x1>
 804d104:	74 65                	je     804d16b <cache_block+0x3>
 804d106:	3a 20                	cmp    (%eax),%ah
 804d108:	43                   	inc    %ebx
 804d109:	75 72                	jne    804d17d <__TMC_END__+0x5>
 804d10b:	72 65                	jb     804d172 <epsilon+0x2>
 804d10d:	6e                   	outsb  %ds:(%esi),(%dx)
 804d10e:	74 20                	je     804d130 <naive_rotate_descr+0x10>
 804d110:	77 6f                	ja     804d181 <stderr@@GLIBC_2.0+0x1>
 804d112:	72 6b                	jb     804d17f <__TMC_END__+0x7>
 804d114:	69 6e 67 20 76 65 72 	imul   $0x72657620,0x67(%esi),%ebp
 804d11b:	73 69                	jae    804d186 <optarg@@GLIBC_2.0+0x2>
 804d11d:	6f                   	outsl  %ds:(%esi),(%dx)
 804d11e:	6e                   	outsb  %ds:(%esi),(%dx)
	...

0804d120 <naive_rotate_descr>:
 804d120:	6e                   	outsb  %ds:(%esi),(%dx)
 804d121:	61                   	popa   
 804d122:	69 76 65 5f 72 6f 74 	imul   $0x746f725f,0x65(%esi),%esi
 804d129:	61                   	popa   
 804d12a:	74 65                	je     804d191 <completed.6382+0x9>
 804d12c:	3a 20                	cmp    (%eax),%ah
 804d12e:	4e                   	dec    %esi
 804d12f:	61                   	popa   
 804d130:	69 76 65 20 62 61 73 	imul   $0x73616220,0x65(%esi),%esi
 804d137:	65                   	gs
 804d138:	6c                   	insb   (%dx),%es:(%edi)
 804d139:	69 6e 65 20 69 6d 70 	imul   $0x706d6920,0x65(%esi),%ebp
 804d140:	6c                   	insb   (%dx),%es:(%edi)
 804d141:	65                   	gs
 804d142:	6d                   	insl   (%dx),%es:(%edi)
 804d143:	65 6e                	outsb  %gs:(%esi),(%dx)
 804d145:	74 61                	je     804d1a8 <smooth_maxmean>
 804d147:	74 69                	je     804d1b2 <rotate_maxmean_desc+0x2>
 804d149:	6f                   	outsl  %ds:(%esi),(%dx)
 804d14a:	6e                   	outsb  %ds:(%esi),(%dx)
	...

0804d14c <team>:
 804d14c:	30 b0 04 08 3b b0    	xor    %dh,-0x4fc4f7fc(%eax)
 804d152:	04 08                	add    $0x8,%al
 804d154:	42                   	inc    %edx
 804d155:	b0 04                	mov    $0x4,%al
 804d157:	08 08                	or     %cl,(%eax)
 804d159:	ae                   	scas   %es:(%edi),%al
 804d15a:	04 08                	add    $0x8,%al
 804d15c:	08 ae 04 08 14 00    	or     %ch,0x140804(%esi)

0804d160 <maxsamples>:
 804d160:	14 00                	adc    $0x0,%al
	...

0804d164 <kbest>:
 804d164:	03 00                	add    (%eax),%eax
	...

0804d168 <cache_block>:
 804d168:	20 00                	and    %al,(%eax)
	...

0804d16c <cache_bytes>:
 804d16c:	00 00                	add    %al,(%eax)
 804d16e:	08 00                	or     %al,(%eax)

0804d170 <epsilon>:
 804d170:	7b 14                	jnp    804d186 <optarg@@GLIBC_2.0+0x2>
 804d172:	ae                   	scas   %es:(%edi),%al
 804d173:	47                   	inc    %edi
 804d174:	e1 7a                	loope  804d1f0 <benchmarks_smooth+0x10>
 804d176:	84 3f                	test   %bh,(%edi)

Disassembly of section .bss:

0804d180 <stderr@@GLIBC_2.0>:
 804d180:	00 00                	add    %al,(%eax)
	...

0804d184 <optarg@@GLIBC_2.0>:
 804d184:	00 00                	add    %al,(%eax)
	...

0804d188 <completed.6382>:
	...

0804d1a0 <smooth_maxmean_desc>:
	...

0804d1a8 <smooth_maxmean>:
	...

0804d1b0 <rotate_maxmean_desc>:
	...

0804d1b8 <rotate_maxmean>:
	...

0804d1c0 <smooth_benchmark_count>:
	...

0804d1e0 <benchmarks_smooth>:
	...

0804e630 <rotate_benchmark_count>:
	...

0804e640 <benchmarks_rotate>:
	...

0804fa90 <result>:
 804fa90:	00 00                	add    %al,(%eax)
	...

0804fa94 <orig>:
 804fa94:	00 00                	add    %al,(%eax)
	...

0804fa98 <copy_of_orig>:
	...

0804faa0 <data>:
	...

09c6fac0 <sink>:
 9c6fac0:	00 00                	add    %al,(%eax)
	...

09c6fac4 <compensate>:
 9c6fac4:	00 00                	add    %al,(%eax)
	...

09c6fac8 <clear_cache>:
 9c6fac8:	00 00                	add    %al,(%eax)
	...

09c6facc <samplecount>:
 9c6facc:	00 00                	add    %al,(%eax)
	...

09c6fad0 <values>:
 9c6fad0:	00 00                	add    %al,(%eax)
	...

09c6fad4 <cache_buf>:
 9c6fad4:	00 00                	add    %al,(%eax)
	...

09c6fad8 <cyc_hi>:
 9c6fad8:	00 00                	add    %al,(%eax)
	...

09c6fadc <cyc_lo>:
 9c6fadc:	00 00                	add    %al,(%eax)
	...

09c6fae0 <cyc_per_tick>:
	...

09c6fae8 <start_tick>:
 9c6fae8:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x8048604>
   a:	74 75                	je     81 <_init-0x80485fb>
   c:	2f                   	das    
   d:	4c                   	dec    %esp
   e:	69 6e 61 72 6f 20 34 	imul   $0x34206f72,0x61(%esi),%ebp
  15:	2e                   	cs
  16:	37                   	aaa    
  17:	2e 32 2d 32 75 62 75 	xor    %cs:0x75627532,%ch
  1e:	6e                   	outsb  %ds:(%esi),(%dx)
  1f:	74 75                	je     96 <_init-0x80485e6>
  21:	31 29                	xor    %ebp,(%ecx)
  23:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  26:	37                   	aaa    
  27:	2e 32 00             	xor    %cs:(%eax),%al
  2a:	47                   	inc    %edi
  2b:	43                   	inc    %ebx
  2c:	43                   	inc    %ebx
  2d:	3a 20                	cmp    (%eax),%ah
  2f:	28 55 62             	sub    %dl,0x62(%ebp)
  32:	75 6e                	jne    a2 <_init-0x80485da>
  34:	74 75                	je     ab <_init-0x80485d1>
  36:	2f                   	das    
  37:	4c                   	dec    %esp
  38:	69 6e 61 72 6f 20 34 	imul   $0x34206f72,0x61(%esi),%ebp
  3f:	2e 36 2e 33 2d 31 30 	cs ss xor %cs:%ss:0x62753031,%ebp
  46:	75 62 
  48:	75 6e                	jne    b8 <_init-0x80485c4>
  4a:	74 75                	je     c1 <_init-0x80485bb>
  4c:	31 29                	xor    %ebp,(%ecx)
  4e:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  51:	36 2e 33 20          	ss xor %cs:%ss:(%eax),%esp
  55:	32 30                	xor    (%eax),%dh
  57:	31 32                	xor    %esi,(%edx)
  59:	30 39                	xor    %bh,(%ecx)
  5b:	31 38                	xor    %edi,(%eax)
  5d:	20 28                	and    %ch,(%eax)
  5f:	70 72                	jo     d3 <_init-0x80485a9>
  61:	65                   	gs
  62:	72 65                	jb     c9 <_init-0x80485b3>
  64:	6c                   	insb   (%dx),%es:(%edi)
  65:	65                   	gs
  66:	61                   	popa   
  67:	73 65                	jae    ce <_init-0x80485ae>
  69:	29 00                	sub    %eax,(%eax)
